*Ahmed 0001 03/26/2005 Change the order header season filter to be the style season

*ahmed Add the style filter
*STORE '' TO LCDTFLT, LCOLDSCL
STORE '' TO LCDTFLT, LCOLDSCL, LCSTFLT
*ahmed end
STORE .F. TO LLCUSTFLT, LLORDFLT
STORE .T. TO LLNEWPG, LLPRNTSZ
= LFCRTTEMP()
= LFGETDTFLT()
LNCUSTPOS = ASUBSCRIPT(LAOGFXFLT,ASCAN(LAOGFXFLT,'ORDHDR.ACCOUNT'),1)
IF LNCUSTPOS>0
   LCCUSTFILE = LAOGFXFLT(LNCUSTPOS,6)
   LLCUSTFLT =  .NOT. EMPTY(LCCUSTFILE) .AND. USED(LCCUSTFILE) .AND. RECCOUNT(LCCUSTFILE)>0
ENDIF
LNORDPOS = ASUBSCRIPT(LAOGFXFLT,ASCAN(LAOGFXFLT,'ORDHDR.ORDER'),1)
IF LNORDPOS>0
   LCORDFILE = LAOGFXFLT(LNORDPOS,6)
   LLORDFLT =  .NOT. EMPTY(LCORDFILE) .AND. USED(LCORDFILE) .AND. RECCOUNT(LCORDFILE)>0
ENDIF
IF LLCUSTFLT .AND.  .NOT. LLORDFLT
   SET ORDER TO "ORDACCT" IN ORDHDR
ELSE
   SET ORDER TO "ORDHDR" IN ORDHDR
ENDIF
IF LLORDFLT
   SELECT (LCORDFILE)
   SET RELATION TO 'O'+ORDER INTO ORDHDR
ENDIF
SELECT STYLE
SET RELATION TO 'S'+SCALE INTO SCALE
*ahmed 0001 Add relation between ordline and style to filteron the style season
SELECT ORDLINE
SET RELATION TO STYLE INTO STYLE
*ahmed end
SELECT ORDHDR
SET RELATION TO 'O'+ORDER INTO ORDLINE
IF LLCUSTFLT
   SELECT (LCCUSTFILE)
   SCAN
      IF LLORDFLT
         SELECT (LCORDFILE)
         SCAN FOR EVAL(lcDtFlt) .AND. ORDHDR.account=&LCCustFILE..account
            WAIT WINDOW NOWAIT 'Collecting Data for Customer: '+ORDHDR.ACCOUNT+' Order# '+ORDHDR.ORDER
            SELECT ORDLINE
            *ahmed 0001 add the filter for the style season
            *SCAN WHILE ORDER=ORDHDR.ORDER
            SCAN WHILE ORDER=ORDHDR.ORDER FOR EVAL(lcSTFlt)
            *ahmed end
               SCATTER MEMVAR
               M.SHIP = ORDHDR.SHIP
               M.STATUS = ORDHDR.STATUS
               INSERT INTO (LCTMPORD) FROM MEMVAR
            ENDSCAN
         ENDSCAN
      ELSE
         IF SEEK(&LCCustFILE..account,'ORDHDR')
            SELECT ORDHDR
            SCAN WHILE ordhdr.account+cordtype= &LCCustFILE..account+'O' for EVAL(lcDtFlt)
               WAIT WINDOW NOWAIT 'Collecting Data for Customer: '+ORDHDR.ACCOUNT+' Order# '+ORDHDR.ORDER
               SELECT ORDLINE
               *ahmed 0001 add the style season filter
               *SCAN WHILE ORDER=ORDHDR.ORDER
               SCAN WHILE ORDER=ORDHDR.ORDER FOR EVAL(lcSTFlt)
               *ahmed end
                  SCATTER MEMVAR
                  M.SHIP = ORDHDR.SHIP
                  M.STATUS = ORDHDR.STATUS
                  INSERT INTO (LCTMPORD) FROM MEMVAR
               ENDSCAN
            ENDSCAN
         ENDIF
      ENDIF
   ENDSCAN
ELSE
   IF  .NOT. EMPTY(LCORDFILE) .AND. USED(LCORDFILE) .AND. RECCOUNT(LCORDFILE)>0
      SELECT (LCORDFILE)
      SET RELATION TO 'O'+ORDER INTO ORDHDR
      GOTO TOP
   ELSE
      SELECT ORDHDR
      = SEEK('O')
   ENDIF
   SCAN FOR EVALUATE(LCDTFLT) WHILE ORDHDR.CORDTYPE='O'
      WAIT WINDOW NOWAIT 'Collecting Data for Customer: '+ORDHDR.ACCOUNT+' Order# '+ORDHDR.ORDER
      SELECT ORDLINE
      *ahmed 0001 Add the style filter season
      *SCAN WHILE ORDER=ORDHDR.ORDER
      SCAN WHILE ORDER=ORDHDR.ORDER FOR EVALUATE(LCSTFLT)
      *ahmed end
         SCATTER MEMVAR
         M.SHIP = ORDHDR.SHIP
         M.STATUS = ORDHDR.STATUS
         INSERT INTO (LCTMPORD) FROM MEMVAR
      ENDSCAN
   ENDSCAN
ENDIF
WAIT CLEAR
*ahmed 0001 Remove the relation between ordline and the style, to make with the temporary table and the style
SELECT ORDLINE
SET RELATION TO
*ahmed end
SELECT (LCTMPORD)
GOTO TOP
IF EOF()
   = GFMODALGEN('TRM00052B40011','ALERT')
   SET DEVICE TO SCREEN
   RETURN
ENDIF
SET RELATION TO STYLE INTO STYLE
DO GFDISPRE WITH EVALUATE('lcRpForm')
SET DEVICE TO SCREEN
IF USED(LCTMPORD)
   SELECT (LCTMPORD)
   SET RELATION TO
   USE IN (LCTMPORD)
ENDIF
ERASE (GCWORKDIR+(LCTMPORD)+'.DBF')
ERASE (GCWORKDIR+(LCTMPORD)+'.CDX')

PROCEDURE LFSRVSTY
PARAMETER LCPARM
IF LCPARM='S'
   SET ORDER TO CSTYLE IN STYLE
   GOTO TOP
ELSE
   SET ORDER TO STYLE IN STYLE
ENDIF

PROCEDURE LFSRVORD
PARAMETER LCPARM
IF LCPARM='S'
   SET ORDER TO ORDHDR IN ORDHDR
   GOTO TOP
ENDIF

PROCEDURE LFVOSTATUS
PRIVATE LCOLDSTAT, LCCURRCHR
LCOLDSTAT = LCRPSTATUS
= GFMOVER(@LARPSOURCE,@LARPTARGET,'Select Order Status',.T.,'')
LCRPSTATUS = ' '
IF  .NOT. EMPTY(LARPTARGET(1))
   FOR LNI = 1 TO ALEN(LARPTARGET,1)
      LCRPSTATUS = LCRPSTATUS+IIF(LARPTARGET(LNI)='Bid','B',IIF(LARPTARGET(LNI)='Open','O',IIF(LARPTARGET(LNI)='Hold','H',IIF(LARPTARGET(LNI)='Complete','C',IIF(LARPTARGET(LNI)='Canceled','X','')))))
   ENDFOR
ENDIF
LCRPSTATUS = IIF(EMPTY(LCRPSTATUS),'BOHCX',ALLTRIM(LCRPSTATUS))
IF LEN(LCOLDSTAT)<>LEN(LCRPSTATUS)
   LLOGFLTCH = .T.
ELSE
   FOR LNJ = 1 TO LEN(LCOLDSTAT)
      LCCURRCHR = SUBSTR(LCOLDSTAT,LNJ,LNJ)
      IF  .NOT. (LCCURRCHR$LCRPSTATUS)
         LLOGFLTCH = .T.
         EXIT
      ENDIF
   ENDFOR
ENDIF

PROCEDURE LFWOGWHEN
SET ORDER TO "CUSTOMER" IN CUSTOMER
SET ORDER TO "ORDACCT" IN ORDHDR
SET ORDER TO "ORDLINE" IN ORDLINE
SET ORDER TO "SCALE" IN SCALE
DIMENSION LARPSOURCE[ 5]
IF TYPE('laRpTarget[1]')='C'
   IF EMPTY(LARPTARGET(1))
      DIMENSION LARPTARGET[ 1]
   ELSE
      FOR LNI = 2 TO ALEN(LARPTARGET)
         IF TYPE('laRpTarget[lnI]')='U'
            LARPTARGET[ LNI] = ''
         ENDIF
      ENDFOR
   ENDIF
ELSE
   DIMENSION LARPTARGET[ 1]
ENDIF
STORE 'Bid' TO LARPSOURCE[ 1]
STORE 'Open' TO LARPSOURCE[ 2]
STORE 'Hold' TO LARPSOURCE[ 3]
STORE 'Complete' TO LARPSOURCE[ 4]
STORE 'Canceled' TO LARPSOURCE[ 5]
LCRPSTATUS = ' '
IF  .NOT. EMPTY(LARPTARGET(1))
   FOR LNI = 1 TO ALEN(LARPTARGET,1)
      LCRPSTATUS = LCRPSTATUS+IIF(LARPTARGET(LNI)='Bid','B',IIF(LARPTARGET(LNI)='Open','O',IIF(LARPTARGET(LNI)='Hold','H',IIF(LARPTARGET(LNI)='Complete','C',IIF(LARPTARGET(LNI)='Canceled','X','')))))
   ENDFOR
ENDIF
LCRPSTATUS = IIF(EMPTY(LCRPSTATUS),'BOHCX',ALLTRIM(LCRPSTATUS))

FUNCTION  LFITMPOSF
PARAMETER LCITMINFLT
PRIVATE LNITMPOS
LNITMPOS = ASCAN(LAOGFXFLT,LCITMINFLT)
IF LNITMPOS>0
   LNITMPOS = ASUBSCRIPT(LAOGFXFLT,LNITMPOS,1)
ENDIF
RETURN LNITMPOS

FUNCTION  LFITMPOSV
PARAMETER LCITMINFLT
PRIVATE LNITMPOS
LNITMPOS = ASCAN(LAOGVRFLT,LCITMINFLT)
IF LNITMPOS>0
   LNITMPOS = ASUBSCRIPT(LAOGVRFLT,LNITMPOS,1)
ENDIF
RETURN LNITMPOS

PROCEDURE LFCRTTEMP
CREATE DBF (GCWORKDIR+LCTMPORD) ( ACCOUNT C ( 5 ), ORDER C ( 6 ), STATUS C ( 1 ), STYLE C ( 19 ), CUSTPO C ( 15 ), START D ( 8 ), COMPLETE D ( 8 ), QTY1 N ( 10 ), QTY2 N ( 10 ), QTY3 N ( 10 ), QTY4 N ( 10 ), QTY5 N ( 10 ), QTY6 N ( 10 ), QTY7 N ( 10 ), QTY8 N ( 10 ), TOTQTY N ( 12 ), BOOK1 N ( 10 ), BOOK2 N ( 10 ), BOOK3 N ( 10 ), BOOK4 N ( 10 ), BOOK5 N ( 10 ), BOOK6 N ( 10 ), BOOK7 N ( 10 ), BOOK8 N ( 10 ), TOTBOOK N ( 10 ), PRICE N ( 12, 2 ), SHIP N ( 15, 2 ) )
DO CASE
   CASE LCRPSORT='A'
      INDEX ON account+Order+STYLE TAG &lcTmpord
   CASE LCRPSORT='S'
      INDEX ON DTOS(START)+account+Order+STYLE TAG &lcTmpord
   CASE LCRPSORT='C'
      INDEX ON DTOS(COMPLETE)+account+Order+STYLE TAG &lcTmpord
ENDCASE
RETURN

PROCEDURE LFGETDTFLT
LCDTFLT = "ORDHDR.STATUS = 'H' "
LNDATEPOS = ASUBSCRIPT(LAOGFXFLT,ASCAN(LAOGFXFLT,'ORDHDR.START'),1)
LCREPRNGF = LEFT(LAOGFXFLT(LNDATEPOS,6),10)
LCREPRNGT = RIGHT(LAOGFXFLT(LNDATEPOS,6),10)
LCEDTFLT = '.T.'
DO CASE
   CASE  .NOT. EMPTY(CTOD(LCREPRNGF)) .AND.  .NOT. EMPTY(CTOD(LCREPRNGT))
      LCEDTFLT = "BETWEEN(ALLTRIM(DTOS(ORDHDR.START)),'"+ALLTRIM(DTOS(CTOD(LCREPRNGF)))+"','"+ALLTRIM(DTOS(CTOD(LCREPRNGT)))+"')"
   CASE EMPTY(CTOD(LCREPRNGF)) .AND.  .NOT. EMPTY(CTOD(LCREPRNGT))
      LCREPRNGT = ALLTRIM(DTOS(CTOD(LCREPRNGT)))
      LCREPRNGF = ''
      LCEDTFLT = 'ALLTRIM(DTOS(ORDHDR.START)) <= "'+LCREPRNGT+'"'
   CASE EMPTY(CTOD(LCREPRNGF)) .AND. EMPTY(CTOD(LCREPRNGT))
      LCREPRNGF = ''
      LCREPRNGT = ''
      LCEDTFLT = ''
ENDCASE
LCDTFLT = IIF(EMPTY(LCEDTFLT),LCDTFLT,LCDTFLT+' .AND. '+LCEDTFLT)
LNDATEPOS = ASUBSCRIPT(LAOGFXFLT,ASCAN(LAOGFXFLT,'ORDHDR.COMPLETE'),1)
LCREPRNGF = LEFT(LAOGFXFLT(LNDATEPOS,6),10)
LCREPRNGT = RIGHT(LAOGFXFLT(LNDATEPOS,6),10)
LCCDTFLT = ''
DO CASE
   CASE  .NOT. EMPTY(CTOD(LCREPRNGF)) .AND.  .NOT. EMPTY(CTOD(LCREPRNGT))
      LCCDTFLT = "BETWEEN(ALLTRIM(DTOS(ORDHDR.COMPLETE)),'"+ALLTRIM(DTOS(CTOD(LCREPRNGF)))+"','"+ALLTRIM(DTOS(CTOD(LCREPRNGT)))+"')"
   CASE EMPTY(CTOD(LCREPRNGF)) .AND.  .NOT. EMPTY(CTOD(LCREPRNGT))
      LCREPRNGT = ALLTRIM(DTOS(CTOD(LCREPRNGT)))
      LCREPRNGF = ''
      LCCDTFLT = 'ALLTRIM(DTOS(ORDHDR.COMPLETE)) <= "'+LCREPRNGT+'"'
   CASE EMPTY(CTOD(LCREPRNGF)) .AND. EMPTY(CTOD(LCREPRNGT))
      LCREPRNGF = ''
      LCREPRNGT = ''
      LCCDTFLT = ''
ENDCASE
LCDTFLT = IIF(EMPTY(LCCDTFLT),LCDTFLT,IIF(EMPTY(LCDTFLT),LCCDTFLT,LCDTFLT+' .AND. '+LCCDTFLT))
LNDATEPOS = ASUBSCRIPT(LAOGVRFLT,ASCAN(LAOGVRFLT,'ORDHDR.CUSTPO'),1)
IF  .NOT. EMPTY(LAOGVRFLT(LNDATEPOS,6))
   LCCNTRG = STRTRAN(LAOGVRFLT(LNDATEPOS,6),'|',"','")
   LCDTFLT = LCDTFLT+" .AND. INLIST(ORDHDR.CUSTPO,'"+LCCNTRG+"')"
ENDIF
*ahmed 0001 Change the order season filter to be based on the style season
*LNDATEPOS = ASUBSCRIPT(LAOGVRFLT,ASCAN(LAOGVRFLT,'ORDHDR.SEASON'),1)
*IF  .NOT. EMPTY(LAOGVRFLT(LNDATEPOS,6))
*   LCCNTRG = STRTRAN(LAOGVRFLT(LNDATEPOS,6),'|',"','")
*   LCDTFLT = LCDTFLT+" .AND. INLIST(ORDHDR.SEASON,'"+LCCNTRG+"')"
*ENDIF
LNSTYPOS = ASUBSCRIPT(LAOGVRFLT,ASCAN(LAOGVRFLT,'ORDHDR.SEASON'),1)
IF  .NOT. EMPTY(LAOGVRFLT(LNSTYPOS,6))
   LCCNTRG = STRTRAN(LAOGVRFLT(LNSTYPOS,6),'|',"','")
   LCSTFLT = "INLIST(STYLE.SEASON,'"+LCCNTRG+"')"
ENDIF
*ahmed end



FUNCTION  LFPRNTSZ
PARAMETER LCPARAM
IF LCPARAM='P'
   LLPRNTSZ = .T.
   LLNEWPG = .T.
ELSE
   IF  .NOT. EMPTY(LCOLDSCL) .AND. STYLE.SCALE=LCOLDSCL .AND.  .NOT. LLNEWPG
      LLPRNTSZ = .F.
   ELSE
      LCOLDSCL = STYLE.SCALE
      LLPRNTSZ = .T.
   ENDIF
   LLNEWPG = .F.
ENDIF
RETURN ''
*
