//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using DevExpress.ExpressApp.DC;
using DevExpress.Persistent.Base;
using DevExpress.Persistent.BaseImpl;
using DevExpress.Xpo;
using DevExpress.Persistent.Validation;
using DevExpress.ExpressApp.ConditionalAppearance;
using DevExpress.ExpressApp.Editors;
using DevExpress.Data.Filtering;
namespace Aria5SystemAdmin.Module.BusinessObjects
{
  [DefaultClassOptions]
  [RelatedEntity("Aria5-SystemAdmin-HR_ActivityLog")]
  [XafDefaultProperty("ActivityName")]
  [Appearance("Days", AppearanceItemType = "ViewItem", TargetItems = "Sat,Sun,Mon,Tue,Wed,Thu,Fri,RecurringTime", Criteria = "HRActivity.FrequencyType !='Weekly'", Context = "DetailView", Visibility = ViewItemVisibility.Hide)]
  [Appearance("RepeatedEvery", AppearanceItemType = "ViewItem", TargetItems = "RepeatedEvery", Criteria = "HRActivity.Frequency != 'Recurring'", Context = "DetailView", Visibility = ViewItemVisibility.Hide)]
  public partial class HR_ActivityLog : DevExpress.Persistent.BaseImpl.BaseObject
  {
    public HR_ActivityLog(DevExpress.Xpo.Session session)
      : base(session)
    {
    }

    private XPCollection<HREmployee> TargetEntities;
    private XPCollection<HREmployee> Userlist;

    private EntityType _type;
    [ImmediatePostData]
    public EntityType Type
    {
        get
        {
           if(_type != null)
            {
                if (_type.Name == "Candidate")
                {
                    TargetEntities = new XPCollection<HREmployee>(Session);
                    TargetEntities.Criteria = CriteriaOperator.Parse("[EmploymentStatus] = " + (int)Employment_status.Candidate + "");
                }
                else if (_type.Name == "Employee")
                {
                    TargetEntities = new XPCollection<HREmployee>(Session);
                    TargetEntities.Criteria = CriteriaOperator.Parse("[EmploymentStatus] = " + (int)Employment_status.Active + "");
                }
                Userlist = new XPCollection<HREmployee>(Session);
                Userlist.Criteria = CriteriaOperator.Parse("[EmploymentStatus] = " + (int)Employment_status.Active + "");

           }
           
            return _type;
        }
        set { SetPropertyValue("Type", ref _type, value); }
    }
  
    private HREmployee _targetEntity;
    [DataSourceProperty("TargetEntities")]
    public HREmployee Entity
    {
        get { return _targetEntity; }
        set { _targetEntity = value; }
    }
    //private HREmployee _employee;
    //// [Association("HR-Activitylogs-HR_Employee")]
    //public HREmployee Employee
    //{
    //  get
    //  {
    //    return _employee;
    //  }
    //  set
    //  {
    //    _employee = value;
    //  }
    //}
    private Department _department;
    [DevExpress.Persistent.Base.ImmediatePostDataAttribute]
    public Department Department
    {
      get
      {
        return _department;
      }
      set
      {
        _department = value;
      }
    }
    private HR_ActivityCategory _category;
    [DevExpress.Persistent.Base.ImmediatePostDataAttribute]
   // [DataSourceProperty("Department.Categories")]
    public HR_ActivityCategory Category
    {
      get
      {
        return _category;
      }
      set
      {
        _category = value;
      }
    }
    private HRActivity _hractivity;
   [DataSourceProperty("Category.Activities")]
    [Association("HRActivity-HR-ActivityLog")]
    [DevExpress.Persistent.Base.ImmediatePostDataAttribute]
      [RuleRequiredField]
    public HRActivity HRActivity
    {
      get
      {
        if (_hractivity != null)
        {
            
          _activityname = _hractivity.Name;
          _activitydetaillink = _hractivity.DetailLink;
          RecurringTime = _hractivity.FrequencyType;
          Type = _hractivity.Type;
          if (!Sat && !Sun && !Mon && !Tue && !Wed && !Thu && !Fri)
          {
              Sat = _hractivity.Sat;
              Sun = _hractivity.Sun;
              Mon = _hractivity.Mon;
              Tue = _hractivity.Tue;
              Wed = _hractivity.Wed;
              Thu = _hractivity.Thu;
              Fri = _hractivity.Fri;
             
          }
            Duration = _hractivity.Duration;
        }
        return _hractivity;
      }
      set
      {
          SetPropertyValue("HRActivity", ref _hractivity, value);
      }
    }
    private string _activityname;
    public string ActivityName
    {
      get
      {
        return _activityname;
      }
      set
      {
        _activityname = value;
      }
    }
    private string _activitydetaillink;
    [RuleRegularExpression("ActivityDetailLink.RuleRegularExpression", DefaultContexts.Save, @"(((http|https|ftp)\://)?[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(:[a-zA-Z0-9]*)?/?([a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~])*)|([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6})")]
    [EditorAlias("HyperLinkStringPropertyEditor")]
    public string ActivityDetailLink
    {
      get
      {
        return _activitydetaillink;
      }
      set
      {
        _activitydetaillink = value;
      }
    }
    private RecurringPeriod? _recurringperiod;
    [DevExpress.Persistent.Base.ImmediatePostDataAttribute]
    public RecurringPeriod? RecurringTime
    {
      get
      {
        return _recurringperiod;
      }
      set
      {
        SetPropertyValue("RecurringTime", ref _recurringperiod, value);
      }
    }
   
    private int _repeatedEvery;
    private string _summry;

    private bool _sat;
    private bool _sun;
    private bool _mon;
    private bool _tue;
    private bool _wed;
    private bool _Thu;
    private bool _fri;
    public bool Sat
    {
      get
      {
        return _sat;
      }
      set
      {
        _sat = value;
      }
    }
    public bool Sun
    {
      get
      {
        return _sun;
      }
      set
      {
        _sun = value;
      }
    }
    public bool Mon
    {
      get
      {
        return _mon;
      }
      set
      {
        _mon = value;
      }
    }
    public bool Tue
    {
      get
      {
        return _tue;
      }
      set
      {
        _tue = value;
      }
    }
    public bool Wed
    {
      get
      {
        return _wed;
      }
      set
      {
        _wed = value;
      }
    }
    public bool Thu
    {
      get
      {
        return _Thu;
      }
      set
      {
        _Thu = value;
      }
    }
    public bool Fri
    {
      get
      {
        return _fri;
      }
      set
      {
        _fri = value;
      }
    }
    public int RepeatedEvery
    {
      get
      {
        return _repeatedEvery;
      }
      set
      {
        _repeatedEvery = value;
      }
    }
    public string Summry
    {
      get
      {
        return _summry;
      }
      set
      {
        _summry = value;
      }
    }
    private DateTime _startdate;
    public DateTime StartDate
    {
      get
      {
        return _startdate;
      }
      set
      {
        _startdate = value;
      }
    }
    private DateTime _enddate;
    public DateTime EndDate
    {
      get
      {
        return _enddate;
      }
      set
      {
        _enddate = value;
      }
    }
    private double _duration;
    public double Duration
    {
      get
      {
        return _duration;
      }
      set
      {
        _duration = value;
      }
    }
    private HREmployee _user;
    //[Association("HR-Activitylog-HR_Employee")]
      [RuleRequiredField]
      [DataSourceProperty("Userlist")]
    public HREmployee User
    {
      get
      {
        return _user;
      }
      set
      {
        _user = value;
      }
    }
    private ActivityStatus _status;
      [RuleRequiredField]
    public ActivityStatus Status
    {
      get
      {
        return _status;
      }
      set
      {
        _status = value;
      }
    }
    private string _notes;
    [Size(500)]
    public string Notes
    {
      get
      {
        return _notes;
      }
      set
      {
        _notes = value;
      }
    }

    private DateTime _completedate;
    public DateTime CompleteDate
    {
        get
        {
            return _completedate;
        }
        set
        {
            SetPropertyValue("CompleteDate", ref _completedate, value);
        }
    }
    private AriaSecuritySystemUser _completeby;
    public AriaSecuritySystemUser CompleteBy
    {
        get
        {
            return _completeby;
        }
        set
        {
            SetPropertyValue("CompleteBy", ref _completeby, value);
        }
    }
  }
  public enum ActivityStatus
  {

    Pending,
    History
  }
 
}
