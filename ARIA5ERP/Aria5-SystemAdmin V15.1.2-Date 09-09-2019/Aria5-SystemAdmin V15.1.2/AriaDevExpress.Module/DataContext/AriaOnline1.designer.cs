#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AriaDevExpress.Module.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ArianyDevExpress")]
	public partial class AriaOnlineDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertApplicationModule(ApplicationModule instance);
    partial void UpdateApplicationModule(ApplicationModule instance);
    partial void DeleteApplicationModule(ApplicationModule instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertASPNETCoursePeriod(ASPNETCoursePeriod instance);
    partial void UpdateASPNETCoursePeriod(ASPNETCoursePeriod instance);
    partial void DeleteASPNETCoursePeriod(ASPNETCoursePeriod instance);
    partial void InsertASPNETCourse(ASPNETCourse instance);
    partial void UpdateASPNETCourse(ASPNETCourse instance);
    partial void DeleteASPNETCourse(ASPNETCourse instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertEmailTemplate(EmailTemplate instance);
    partial void UpdateEmailTemplate(EmailTemplate instance);
    partial void DeleteEmailTemplate(EmailTemplate instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertEventAttendee(EventAttendee instance);
    partial void UpdateEventAttendee(EventAttendee instance);
    partial void DeleteEventAttendee(EventAttendee instance);
    partial void InsertFileDataEx(FileDataEx instance);
    partial void UpdateFileDataEx(FileDataEx instance);
    partial void DeleteFileDataEx(FileDataEx instance);
    partial void InsertForm(Form instance);
    partial void UpdateForm(Form instance);
    partial void DeleteForm(Form instance);
    partial void InsertModuleInfo(ModuleInfo instance);
    partial void UpdateModuleInfo(ModuleInfo instance);
    partial void DeleteModuleInfo(ModuleInfo instance);
    partial void InsertParty(Party instance);
    partial void UpdateParty(Party instance);
    partial void DeleteParty(Party instance);
    partial void InsertPersistentPermission(PersistentPermission instance);
    partial void UpdatePersistentPermission(PersistentPermission instance);
    partial void DeletePersistentPermission(PersistentPermission instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPhoneNumber(PhoneNumber instance);
    partial void UpdatePhoneNumber(PhoneNumber instance);
    partial void DeletePhoneNumber(PhoneNumber instance);
    partial void InsertRegister(Register instance);
    partial void UpdateRegister(Register instance);
    partial void DeleteRegister(Register instance);
    partial void InsertRegisteration(Registeration instance);
    partial void UpdateRegisteration(Registeration instance);
    partial void DeleteRegisteration(Registeration instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleBase(RoleBase instance);
    partial void UpdateRoleBase(RoleBase instance);
    partial void DeleteRoleBase(RoleBase instance);
    partial void InsertSEO(SEO instance);
    partial void UpdateSEO(SEO instance);
    partial void DeleteSEO(SEO instance);
    partial void InsertSiteMap(SiteMap instance);
    partial void UpdateSiteMap(SiteMap instance);
    partial void DeleteSiteMap(SiteMap instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserUsers_RoleRole(UserUsers_RoleRole instance);
    partial void UpdateUserUsers_RoleRole(UserUsers_RoleRole instance);
    partial void DeleteUserUsers_RoleRole(UserUsers_RoleRole instance);
    partial void InsertXPObjectType(XPObjectType instance);
    partial void UpdateXPObjectType(XPObjectType instance);
    partial void DeleteXPObjectType(XPObjectType instance);
    #endregion
		
		public AriaOnlineDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AriaOnlineDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AriaOnlineDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AriaOnlineDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationModule> ApplicationModules
		{
			get
			{
				return this.GetTable<ApplicationModule>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<ASPNETCoursePeriod> ASPNETCoursePeriods
		{
			get
			{
				return this.GetTable<ASPNETCoursePeriod>();
			}
		}
		
		public System.Data.Linq.Table<ASPNETCourse> ASPNETCourses
		{
			get
			{
				return this.GetTable<ASPNETCourse>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<EmailTemplate> EmailTemplates
		{
			get
			{
				return this.GetTable<EmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<EventAttendee> EventAttendees
		{
			get
			{
				return this.GetTable<EventAttendee>();
			}
		}
		
		public System.Data.Linq.Table<FileDataEx> FileDataExes
		{
			get
			{
				return this.GetTable<FileDataEx>();
			}
		}
		
		public System.Data.Linq.Table<Form> Forms
		{
			get
			{
				return this.GetTable<Form>();
			}
		}
		
		public System.Data.Linq.Table<ModuleInfo> ModuleInfos
		{
			get
			{
				return this.GetTable<ModuleInfo>();
			}
		}
		
		public System.Data.Linq.Table<Party> Parties
		{
			get
			{
				return this.GetTable<Party>();
			}
		}
		
		public System.Data.Linq.Table<PersistentPermission> PersistentPermissions
		{
			get
			{
				return this.GetTable<PersistentPermission>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<PhoneNumber> PhoneNumbers
		{
			get
			{
				return this.GetTable<PhoneNumber>();
			}
		}
		
		public System.Data.Linq.Table<Register> Registers
		{
			get
			{
				return this.GetTable<Register>();
			}
		}
		
		public System.Data.Linq.Table<Registeration> Registerations
		{
			get
			{
				return this.GetTable<Registeration>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleBase> RoleBases
		{
			get
			{
				return this.GetTable<RoleBase>();
			}
		}
		
		public System.Data.Linq.Table<SEO> SEOs
		{
			get
			{
				return this.GetTable<SEO>();
			}
		}
		
		public System.Data.Linq.Table<SiteMap> SiteMaps
		{
			get
			{
				return this.GetTable<SiteMap>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserUsers_RoleRole> UserUsers_RoleRoles
		{
			get
			{
				return this.GetTable<UserUsers_RoleRole>();
			}
		}
		
		public System.Data.Linq.Table<XPObjectType> XPObjectTypes
		{
			get
			{
				return this.GetTable<XPObjectType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _Street;
		
		private string _City;
		
		private string _StateProvince;
		
		private string _ZipPostal;
		
		private System.Nullable<System.Guid> _Country;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private EntitySet<Party> _Parties;
		
		private EntitySet<Party> _Parties1;
		
		private EntityRef<Country> _Country1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateProvinceChanging(string value);
    partial void OnStateProvinceChanged();
    partial void OnZipPostalChanging(string value);
    partial void OnZipPostalChanged();
    partial void OnCountryChanging(System.Nullable<System.Guid> value);
    partial void OnCountryChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    #endregion
		
		public Address()
		{
			this._Parties = new EntitySet<Party>(new Action<Party>(this.attach_Parties), new Action<Party>(this.detach_Parties));
			this._Parties1 = new EntitySet<Party>(new Action<Party>(this.attach_Parties1), new Action<Party>(this.detach_Parties1));
			this._Country1 = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(100)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvince", DbType="NVarChar(100)")]
		public string StateProvince
		{
			get
			{
				return this._StateProvince;
			}
			set
			{
				if ((this._StateProvince != value))
				{
					this.OnStateProvinceChanging(value);
					this.SendPropertyChanging();
					this._StateProvince = value;
					this.SendPropertyChanged("StateProvince");
					this.OnStateProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipPostal", DbType="NVarChar(100)")]
		public string ZipPostal
		{
			get
			{
				return this._ZipPostal;
			}
			set
			{
				if ((this._ZipPostal != value))
				{
					this.OnZipPostalChanging(value);
					this.SendPropertyChanging();
					this._ZipPostal = value;
					this.SendPropertyChanged("ZipPostal");
					this.OnZipPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					if (this._Country1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Party", Storage="_Parties", ThisKey="Oid", OtherKey="Address1")]
		public EntitySet<Party> Parties
		{
			get
			{
				return this._Parties;
			}
			set
			{
				this._Parties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Party1", Storage="_Parties1", ThisKey="Oid", OtherKey="Address2")]
		public EntitySet<Party> Parties1
		{
			get
			{
				return this._Parties1;
			}
			set
			{
				this._Parties1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Address", Storage="_Country1", ThisKey="Country", OtherKey="Oid", IsForeignKey=true)]
		public Country Country1
		{
			get
			{
				return this._Country1.Entity;
			}
			set
			{
				Country previousValue = this._Country1.Entity;
				if (((previousValue != value) 
							|| (this._Country1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country1.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Country1.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._Country = value.Oid;
					}
					else
					{
						this._Country = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Country1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parties(Party entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Parties(Party entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_Parties1(Party entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = this;
		}
		
		private void detach_Parties1(Party entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationModule")]
	public partial class ApplicationModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppModID;
		
		private string _ShortDesc;
		
		private string _LongDesc;
		
		private System.Nullable<int> _ParentID;
		
		private string _HeaderImgUrl;
		
		private System.Nullable<System.Guid> _UploadHeaderImgUrl;
		
		private string _Image1Url;
		
		private System.Nullable<System.Guid> _UploadImage1Url;
		
		private string _Image2Url;
		
		private System.Nullable<System.Guid> _UploadImage2Url;
		
		private System.Nullable<int> _AppRank;
		
		private string _ToolTip;
		
		private string _Image3Url;
		
		private System.Nullable<System.Guid> _UploadImage3Url;
		
		private EntitySet<ApplicationModule> _ApplicationModules;
		
		private EntityRef<ApplicationModule> _ApplicationModule1;
		
		private EntityRef<FileDataEx> _FileDataEx;
		
		private EntityRef<FileDataEx> _FileDataEx1;
		
		private EntityRef<FileDataEx> _FileDataEx2;
		
		private EntityRef<FileDataEx> _FileDataEx3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppModIDChanging(int value);
    partial void OnAppModIDChanged();
    partial void OnShortDescChanging(string value);
    partial void OnShortDescChanged();
    partial void OnLongDescChanging(string value);
    partial void OnLongDescChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnHeaderImgUrlChanging(string value);
    partial void OnHeaderImgUrlChanged();
    partial void OnUploadHeaderImgUrlChanging(System.Nullable<System.Guid> value);
    partial void OnUploadHeaderImgUrlChanged();
    partial void OnImage1UrlChanging(string value);
    partial void OnImage1UrlChanged();
    partial void OnUploadImage1UrlChanging(System.Nullable<System.Guid> value);
    partial void OnUploadImage1UrlChanged();
    partial void OnImage2UrlChanging(string value);
    partial void OnImage2UrlChanged();
    partial void OnUploadImage2UrlChanging(System.Nullable<System.Guid> value);
    partial void OnUploadImage2UrlChanged();
    partial void OnAppRankChanging(System.Nullable<int> value);
    partial void OnAppRankChanged();
    partial void OnToolTipChanging(string value);
    partial void OnToolTipChanged();
    partial void OnImage3UrlChanging(string value);
    partial void OnImage3UrlChanged();
    partial void OnUploadImage3UrlChanging(System.Nullable<System.Guid> value);
    partial void OnUploadImage3UrlChanged();
    #endregion
		
		public ApplicationModule()
		{
			this._ApplicationModules = new EntitySet<ApplicationModule>(new Action<ApplicationModule>(this.attach_ApplicationModules), new Action<ApplicationModule>(this.detach_ApplicationModules));
			this._ApplicationModule1 = default(EntityRef<ApplicationModule>);
			this._FileDataEx = default(EntityRef<FileDataEx>);
			this._FileDataEx1 = default(EntityRef<FileDataEx>);
			this._FileDataEx2 = default(EntityRef<FileDataEx>);
			this._FileDataEx3 = default(EntityRef<FileDataEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppModID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppModID
		{
			get
			{
				return this._AppModID;
			}
			set
			{
				if ((this._AppModID != value))
				{
					this.OnAppModIDChanging(value);
					this.SendPropertyChanging();
					this._AppModID = value;
					this.SendPropertyChanged("AppModID");
					this.OnAppModIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDesc", DbType="NVarChar(100)")]
		public string ShortDesc
		{
			get
			{
				return this._ShortDesc;
			}
			set
			{
				if ((this._ShortDesc != value))
				{
					this.OnShortDescChanging(value);
					this.SendPropertyChanging();
					this._ShortDesc = value;
					this.SendPropertyChanged("ShortDesc");
					this.OnShortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDesc", DbType="NVarChar(MAX)")]
		public string LongDesc
		{
			get
			{
				return this._LongDesc;
			}
			set
			{
				if ((this._LongDesc != value))
				{
					this.OnLongDescChanging(value);
					this.SendPropertyChanging();
					this._LongDesc = value;
					this.SendPropertyChanged("LongDesc");
					this.OnLongDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ApplicationModule1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderImgUrl", DbType="NVarChar(100)")]
		public string HeaderImgUrl
		{
			get
			{
				return this._HeaderImgUrl;
			}
			set
			{
				if ((this._HeaderImgUrl != value))
				{
					this.OnHeaderImgUrlChanging(value);
					this.SendPropertyChanging();
					this._HeaderImgUrl = value;
					this.SendPropertyChanged("HeaderImgUrl");
					this.OnHeaderImgUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadHeaderImgUrl", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadHeaderImgUrl
		{
			get
			{
				return this._UploadHeaderImgUrl;
			}
			set
			{
				if ((this._UploadHeaderImgUrl != value))
				{
					if (this._FileDataEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadHeaderImgUrlChanging(value);
					this.SendPropertyChanging();
					this._UploadHeaderImgUrl = value;
					this.SendPropertyChanged("UploadHeaderImgUrl");
					this.OnUploadHeaderImgUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1Url", DbType="NVarChar(100)")]
		public string Image1Url
		{
			get
			{
				return this._Image1Url;
			}
			set
			{
				if ((this._Image1Url != value))
				{
					this.OnImage1UrlChanging(value);
					this.SendPropertyChanging();
					this._Image1Url = value;
					this.SendPropertyChanged("Image1Url");
					this.OnImage1UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadImage1Url", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadImage1Url
		{
			get
			{
				return this._UploadImage1Url;
			}
			set
			{
				if ((this._UploadImage1Url != value))
				{
					if (this._FileDataEx1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadImage1UrlChanging(value);
					this.SendPropertyChanging();
					this._UploadImage1Url = value;
					this.SendPropertyChanged("UploadImage1Url");
					this.OnUploadImage1UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2Url", DbType="NVarChar(100)")]
		public string Image2Url
		{
			get
			{
				return this._Image2Url;
			}
			set
			{
				if ((this._Image2Url != value))
				{
					this.OnImage2UrlChanging(value);
					this.SendPropertyChanging();
					this._Image2Url = value;
					this.SendPropertyChanged("Image2Url");
					this.OnImage2UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadImage2Url", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadImage2Url
		{
			get
			{
				return this._UploadImage2Url;
			}
			set
			{
				if ((this._UploadImage2Url != value))
				{
					if (this._FileDataEx2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadImage2UrlChanging(value);
					this.SendPropertyChanging();
					this._UploadImage2Url = value;
					this.SendPropertyChanged("UploadImage2Url");
					this.OnUploadImage2UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppRank", DbType="Int")]
		public System.Nullable<int> AppRank
		{
			get
			{
				return this._AppRank;
			}
			set
			{
				if ((this._AppRank != value))
				{
					this.OnAppRankChanging(value);
					this.SendPropertyChanging();
					this._AppRank = value;
					this.SendPropertyChanged("AppRank");
					this.OnAppRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolTip", DbType="NVarChar(200)")]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this.OnToolTipChanging(value);
					this.SendPropertyChanging();
					this._ToolTip = value;
					this.SendPropertyChanged("ToolTip");
					this.OnToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image3Url", DbType="NVarChar(100)")]
		public string Image3Url
		{
			get
			{
				return this._Image3Url;
			}
			set
			{
				if ((this._Image3Url != value))
				{
					this.OnImage3UrlChanging(value);
					this.SendPropertyChanging();
					this._Image3Url = value;
					this.SendPropertyChanged("Image3Url");
					this.OnImage3UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadImage3Url", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadImage3Url
		{
			get
			{
				return this._UploadImage3Url;
			}
			set
			{
				if ((this._UploadImage3Url != value))
				{
					if (this._FileDataEx3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadImage3UrlChanging(value);
					this.SendPropertyChanging();
					this._UploadImage3Url = value;
					this.SendPropertyChanged("UploadImage3Url");
					this.OnUploadImage3UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApplicationModule_ApplicationModule", Storage="_ApplicationModules", ThisKey="AppModID", OtherKey="ParentID")]
		public EntitySet<ApplicationModule> ApplicationModules
		{
			get
			{
				return this._ApplicationModules;
			}
			set
			{
				this._ApplicationModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApplicationModule_ApplicationModule", Storage="_ApplicationModule1", ThisKey="ParentID", OtherKey="AppModID", IsForeignKey=true)]
		public ApplicationModule ApplicationModule1
		{
			get
			{
				return this._ApplicationModule1.Entity;
			}
			set
			{
				ApplicationModule previousValue = this._ApplicationModule1.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationModule1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationModule1.Entity = null;
						previousValue.ApplicationModules.Remove(this);
					}
					this._ApplicationModule1.Entity = value;
					if ((value != null))
					{
						value.ApplicationModules.Add(this);
						this._ParentID = value.AppModID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ApplicationModule1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule", Storage="_FileDataEx", ThisKey="UploadHeaderImgUrl", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx
		{
			get
			{
				return this._FileDataEx.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx.Entity = null;
						previousValue.ApplicationModules.Remove(this);
					}
					this._FileDataEx.Entity = value;
					if ((value != null))
					{
						value.ApplicationModules.Add(this);
						this._UploadHeaderImgUrl = value.Oid;
					}
					else
					{
						this._UploadHeaderImgUrl = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule1", Storage="_FileDataEx1", ThisKey="UploadImage1Url", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx1
		{
			get
			{
				return this._FileDataEx1.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx1.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx1.Entity = null;
						previousValue.ApplicationModules1.Remove(this);
					}
					this._FileDataEx1.Entity = value;
					if ((value != null))
					{
						value.ApplicationModules1.Add(this);
						this._UploadImage1Url = value.Oid;
					}
					else
					{
						this._UploadImage1Url = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule2", Storage="_FileDataEx2", ThisKey="UploadImage2Url", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx2
		{
			get
			{
				return this._FileDataEx2.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx2.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx2.Entity = null;
						previousValue.ApplicationModules2.Remove(this);
					}
					this._FileDataEx2.Entity = value;
					if ((value != null))
					{
						value.ApplicationModules2.Add(this);
						this._UploadImage2Url = value.Oid;
					}
					else
					{
						this._UploadImage2Url = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule3", Storage="_FileDataEx3", ThisKey="UploadImage3Url", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx3
		{
			get
			{
				return this._FileDataEx3.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx3.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx3.Entity = null;
						previousValue.ApplicationModules3.Remove(this);
					}
					this._FileDataEx3.Entity = value;
					if ((value != null))
					{
						value.ApplicationModules3.Add(this);
						this._UploadImage3Url = value.Oid;
					}
					else
					{
						this._UploadImage3Url = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationModules(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationModule1 = this;
		}
		
		private void detach_ApplicationModules(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationModule1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Article_ID;
		
		private System.Nullable<int> _Category_ID;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<bool> _Visible;
		
		private System.Nullable<short> _VisibleRank;
		
		private string _Title;
		
		private string _Description1;
		
		private string _URL;
		
		private System.Nullable<bool> _OpenURL;
		
		private string _RightImage;
		
		private System.Nullable<System.Guid> _UploadRightImage;
		
		private string _MiddleImage;
		
		private System.Nullable<System.Guid> _UploadMiddleImage;
		
		private string _Description2;
		
		private System.Nullable<System.DateTime> _Released;
		
		private string _MenuDesc;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<FileDataEx> _FileDataEx;
		
		private EntityRef<FileDataEx> _FileDataEx1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticle_IDChanging(int value);
    partial void OnArticle_IDChanged();
    partial void OnCategory_IDChanging(System.Nullable<int> value);
    partial void OnCategory_IDChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnVisibleChanging(System.Nullable<bool> value);
    partial void OnVisibleChanged();
    partial void OnVisibleRankChanging(System.Nullable<short> value);
    partial void OnVisibleRankChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescription1Changing(string value);
    partial void OnDescription1Changed();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnOpenURLChanging(System.Nullable<bool> value);
    partial void OnOpenURLChanged();
    partial void OnRightImageChanging(string value);
    partial void OnRightImageChanged();
    partial void OnUploadRightImageChanging(System.Nullable<System.Guid> value);
    partial void OnUploadRightImageChanged();
    partial void OnMiddleImageChanging(string value);
    partial void OnMiddleImageChanged();
    partial void OnUploadMiddleImageChanging(System.Nullable<System.Guid> value);
    partial void OnUploadMiddleImageChanged();
    partial void OnDescription2Changing(string value);
    partial void OnDescription2Changed();
    partial void OnReleasedChanging(System.Nullable<System.DateTime> value);
    partial void OnReleasedChanged();
    partial void OnMenuDescChanging(string value);
    partial void OnMenuDescChanged();
    #endregion
		
		public Article()
		{
			this._Category = default(EntityRef<Category>);
			this._FileDataEx = default(EntityRef<FileDataEx>);
			this._FileDataEx1 = default(EntityRef<FileDataEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Article_ID
		{
			get
			{
				return this._Article_ID;
			}
			set
			{
				if ((this._Article_ID != value))
				{
					this.OnArticle_IDChanging(value);
					this.SendPropertyChanging();
					this._Article_ID = value;
					this.SendPropertyChanged("Article_ID");
					this.OnArticle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int")]
		public System.Nullable<int> Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleRank", DbType="SmallInt")]
		public System.Nullable<short> VisibleRank
		{
			get
			{
				return this._VisibleRank;
			}
			set
			{
				if ((this._VisibleRank != value))
				{
					this.OnVisibleRankChanging(value);
					this.SendPropertyChanging();
					this._VisibleRank = value;
					this.SendPropertyChanged("VisibleRank");
					this.OnVisibleRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description1", DbType="NVarChar(MAX)")]
		public string Description1
		{
			get
			{
				return this._Description1;
			}
			set
			{
				if ((this._Description1 != value))
				{
					this.OnDescription1Changing(value);
					this.SendPropertyChanging();
					this._Description1 = value;
					this.SendPropertyChanged("Description1");
					this.OnDescription1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(500)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenURL", DbType="Bit")]
		public System.Nullable<bool> OpenURL
		{
			get
			{
				return this._OpenURL;
			}
			set
			{
				if ((this._OpenURL != value))
				{
					this.OnOpenURLChanging(value);
					this.SendPropertyChanging();
					this._OpenURL = value;
					this.SendPropertyChanged("OpenURL");
					this.OnOpenURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightImage", DbType="NVarChar(500)")]
		public string RightImage
		{
			get
			{
				return this._RightImage;
			}
			set
			{
				if ((this._RightImage != value))
				{
					this.OnRightImageChanging(value);
					this.SendPropertyChanging();
					this._RightImage = value;
					this.SendPropertyChanged("RightImage");
					this.OnRightImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadRightImage", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadRightImage
		{
			get
			{
				return this._UploadRightImage;
			}
			set
			{
				if ((this._UploadRightImage != value))
				{
					if (this._FileDataEx1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadRightImageChanging(value);
					this.SendPropertyChanging();
					this._UploadRightImage = value;
					this.SendPropertyChanged("UploadRightImage");
					this.OnUploadRightImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleImage", DbType="NVarChar(500)")]
		public string MiddleImage
		{
			get
			{
				return this._MiddleImage;
			}
			set
			{
				if ((this._MiddleImage != value))
				{
					this.OnMiddleImageChanging(value);
					this.SendPropertyChanging();
					this._MiddleImage = value;
					this.SendPropertyChanged("MiddleImage");
					this.OnMiddleImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadMiddleImage", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadMiddleImage
		{
			get
			{
				return this._UploadMiddleImage;
			}
			set
			{
				if ((this._UploadMiddleImage != value))
				{
					if (this._FileDataEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadMiddleImageChanging(value);
					this.SendPropertyChanging();
					this._UploadMiddleImage = value;
					this.SendPropertyChanged("UploadMiddleImage");
					this.OnUploadMiddleImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description2", DbType="NVarChar(MAX)")]
		public string Description2
		{
			get
			{
				return this._Description2;
			}
			set
			{
				if ((this._Description2 != value))
				{
					this.OnDescription2Changing(value);
					this.SendPropertyChanging();
					this._Description2 = value;
					this.SendPropertyChanged("Description2");
					this.OnDescription2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Released", DbType="DateTime")]
		public System.Nullable<System.DateTime> Released
		{
			get
			{
				return this._Released;
			}
			set
			{
				if ((this._Released != value))
				{
					this.OnReleasedChanging(value);
					this.SendPropertyChanging();
					this._Released = value;
					this.SendPropertyChanged("Released");
					this.OnReleasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDesc", DbType="NVarChar(200)")]
		public string MenuDesc
		{
			get
			{
				return this._MenuDesc;
			}
			set
			{
				if ((this._MenuDesc != value))
				{
					this.OnMenuDescChanging(value);
					this.SendPropertyChanging();
					this._MenuDesc = value;
					this.SendPropertyChanged("MenuDesc");
					this.OnMenuDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Article", Storage="_Category", ThisKey="Category_ID", OtherKey="Category_ID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._Category_ID = value.Category_ID;
					}
					else
					{
						this._Category_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_Article", Storage="_FileDataEx", ThisKey="UploadMiddleImage", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx
		{
			get
			{
				return this._FileDataEx.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._FileDataEx.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._UploadMiddleImage = value.Oid;
					}
					else
					{
						this._UploadMiddleImage = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_Article1", Storage="_FileDataEx1", ThisKey="UploadRightImage", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx1
		{
			get
			{
				return this._FileDataEx1.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx1.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx1.Entity = null;
						previousValue.Articles1.Remove(this);
					}
					this._FileDataEx1.Entity = value;
					if ((value != null))
					{
						value.Articles1.Add(this);
						this._UploadRightImage = value.Oid;
					}
					else
					{
						this._UploadRightImage = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASPNETCoursePeriod")]
	public partial class ASPNETCoursePeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CourseID;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private System.Nullable<System.DateTime> _TimeFrom;
		
		private System.Nullable<System.DateTime> _TimeTo;
		
		private System.Nullable<System.Guid> _rowguid;
		
		private int _ID;
		
		private EntityRef<ASPNETCourse> _ASPNETCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(string value);
    partial void OnCourseIDChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnTimeFromChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeFromChanged();
    partial void OnTimeToChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeToChanged();
    partial void OnrowguidChanging(System.Nullable<System.Guid> value);
    partial void OnrowguidChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public ASPNETCoursePeriod()
		{
			this._ASPNETCourse = default(EntityRef<ASPNETCourse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="NVarChar(50)")]
		public string CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._ASPNETCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this.OnTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TimeFrom = value;
					this.SendPropertyChanged("TimeFrom");
					this.OnTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeTo
		{
			get
			{
				return this._TimeTo;
			}
			set
			{
				if ((this._TimeTo != value))
				{
					this.OnTimeToChanging(value);
					this.SendPropertyChanging();
					this._TimeTo = value;
					this.SendPropertyChanged("TimeTo");
					this.OnTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASPNETCourse_ASPNETCoursePeriod", Storage="_ASPNETCourse", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public ASPNETCourse ASPNETCourse
		{
			get
			{
				return this._ASPNETCourse.Entity;
			}
			set
			{
				ASPNETCourse previousValue = this._ASPNETCourse.Entity;
				if (((previousValue != value) 
							|| (this._ASPNETCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASPNETCourse.Entity = null;
						previousValue.ASPNETCoursePeriods.Remove(this);
					}
					this._ASPNETCourse.Entity = value;
					if ((value != null))
					{
						value.ASPNETCoursePeriods.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(string);
					}
					this.SendPropertyChanged("ASPNETCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASPNETCourses")]
	public partial class ASPNETCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CourseID;
		
		private string _CourseName;
		
		private string _Cost;
		
		private string _Subject;
		
		private string _Outline;
		
		private string _Image;
		
		private string _Duration;
		
		private string _cObjective;
		
		private System.Nullable<System.Guid> _rowguid;
		
		private string _IntendedAudience;
		
		private string _DataPrerequisites;
		
		private EntitySet<ASPNETCoursePeriod> _ASPNETCoursePeriods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(string value);
    partial void OnCourseIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCostChanging(string value);
    partial void OnCostChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnOutlineChanging(string value);
    partial void OnOutlineChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OncObjectiveChanging(string value);
    partial void OncObjectiveChanged();
    partial void OnrowguidChanging(System.Nullable<System.Guid> value);
    partial void OnrowguidChanged();
    partial void OnIntendedAudienceChanging(string value);
    partial void OnIntendedAudienceChanged();
    partial void OnDataPrerequisitesChanging(string value);
    partial void OnDataPrerequisitesChanged();
    #endregion
		
		public ASPNETCourse()
		{
			this._ASPNETCoursePeriods = new EntitySet<ASPNETCoursePeriod>(new Action<ASPNETCoursePeriod>(this.attach_ASPNETCoursePeriods), new Action<ASPNETCoursePeriod>(this.detach_ASPNETCoursePeriods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(100)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="NVarChar(10)")]
		public string Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(60)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outline", DbType="NVarChar(500)")]
		public string Outline
		{
			get
			{
				return this._Outline;
			}
			set
			{
				if ((this._Outline != value))
				{
					this.OnOutlineChanging(value);
					this.SendPropertyChanging();
					this._Outline = value;
					this.SendPropertyChanged("Outline");
					this.OnOutlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(60)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(30)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cObjective", DbType="NVarChar(500)")]
		public string cObjective
		{
			get
			{
				return this._cObjective;
			}
			set
			{
				if ((this._cObjective != value))
				{
					this.OncObjectiveChanging(value);
					this.SendPropertyChanging();
					this._cObjective = value;
					this.SendPropertyChanged("cObjective");
					this.OncObjectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntendedAudience", DbType="NVarChar(500)")]
		public string IntendedAudience
		{
			get
			{
				return this._IntendedAudience;
			}
			set
			{
				if ((this._IntendedAudience != value))
				{
					this.OnIntendedAudienceChanging(value);
					this.SendPropertyChanging();
					this._IntendedAudience = value;
					this.SendPropertyChanged("IntendedAudience");
					this.OnIntendedAudienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPrerequisites", DbType="NVarChar(500)")]
		public string DataPrerequisites
		{
			get
			{
				return this._DataPrerequisites;
			}
			set
			{
				if ((this._DataPrerequisites != value))
				{
					this.OnDataPrerequisitesChanging(value);
					this.SendPropertyChanging();
					this._DataPrerequisites = value;
					this.SendPropertyChanged("DataPrerequisites");
					this.OnDataPrerequisitesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASPNETCourse_ASPNETCoursePeriod", Storage="_ASPNETCoursePeriods", ThisKey="CourseID", OtherKey="CourseID")]
		public EntitySet<ASPNETCoursePeriod> ASPNETCoursePeriods
		{
			get
			{
				return this._ASPNETCoursePeriods;
			}
			set
			{
				this._ASPNETCoursePeriods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASPNETCoursePeriods(ASPNETCoursePeriod entity)
		{
			this.SendPropertyChanging();
			entity.ASPNETCourse = this;
		}
		
		private void detach_ASPNETCoursePeriods(ASPNETCoursePeriod entity)
		{
			this.SendPropertyChanging();
			entity.ASPNETCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_ID;
		
		private string _Category_Desc;
		
		private System.Nullable<short> _RowRefrence;
		
		private System.Nullable<short> _ColumnReference;
		
		private string _MenuDesc;
		
		private EntitySet<Article> _Articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_IDChanging(int value);
    partial void OnCategory_IDChanged();
    partial void OnCategory_DescChanging(string value);
    partial void OnCategory_DescChanged();
    partial void OnRowRefrenceChanging(System.Nullable<short> value);
    partial void OnRowRefrenceChanged();
    partial void OnColumnReferenceChanging(System.Nullable<short> value);
    partial void OnColumnReferenceChanged();
    partial void OnMenuDescChanging(string value);
    partial void OnMenuDescChanged();
    #endregion
		
		public Category()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Desc", DbType="NVarChar(100)")]
		public string Category_Desc
		{
			get
			{
				return this._Category_Desc;
			}
			set
			{
				if ((this._Category_Desc != value))
				{
					this.OnCategory_DescChanging(value);
					this.SendPropertyChanging();
					this._Category_Desc = value;
					this.SendPropertyChanged("Category_Desc");
					this.OnCategory_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowRefrence", DbType="SmallInt")]
		public System.Nullable<short> RowRefrence
		{
			get
			{
				return this._RowRefrence;
			}
			set
			{
				if ((this._RowRefrence != value))
				{
					this.OnRowRefrenceChanging(value);
					this.SendPropertyChanging();
					this._RowRefrence = value;
					this.SendPropertyChanged("RowRefrence");
					this.OnRowRefrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnReference", DbType="SmallInt")]
		public System.Nullable<short> ColumnReference
		{
			get
			{
				return this._ColumnReference;
			}
			set
			{
				if ((this._ColumnReference != value))
				{
					this.OnColumnReferenceChanging(value);
					this.SendPropertyChanging();
					this._ColumnReference = value;
					this.SendPropertyChanged("ColumnReference");
					this.OnColumnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDesc", DbType="NVarChar(200)")]
		public string MenuDesc
		{
			get
			{
				return this._MenuDesc;
			}
			set
			{
				if ((this._MenuDesc != value))
				{
					this.OnMenuDescChanging(value);
					this.SendPropertyChanging();
					this._MenuDesc = value;
					this.SendPropertyChanged("MenuDesc");
					this.OnMenuDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Article", Storage="_Articles", ThisKey="Category_ID", OtherKey="Category_ID")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _Name;
		
		private string _PhoneCode;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneCodeChanging(string value);
    partial void OnPhoneCodeChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    #endregion
		
		public Country()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCode", DbType="NVarChar(100)")]
		public string PhoneCode
		{
			get
			{
				return this._PhoneCode;
			}
			set
			{
				if ((this._PhoneCode != value))
				{
					this.OnPhoneCodeChanging(value);
					this.SendPropertyChanging();
					this._PhoneCode = value;
					this.SendPropertyChanged("PhoneCode");
					this.OnPhoneCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Address", Storage="_Addresses", ThisKey="Oid", OtherKey="Country")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Country1 = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Country1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private string _DocName;
		
		private System.Nullable<System.Guid> _UploadDoc;
		
		private string _Description;
		
		private System.Nullable<char> _DocType;
		
		private System.Nullable<System.DateTime> _UploadDate;
		
		private System.Nullable<System.DateTime> _UploadTime;
		
		private string _UploadBy;
		
		private System.Nullable<bool> _Available;
		
		private System.Nullable<bool> _DOF;
		
		private EntityRef<FileDataEx> _FileDataEx;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnUploadDocChanging(System.Nullable<System.Guid> value);
    partial void OnUploadDocChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDocTypeChanging(System.Nullable<char> value);
    partial void OnDocTypeChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    partial void OnUploadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadTimeChanged();
    partial void OnUploadByChanging(string value);
    partial void OnUploadByChanged();
    partial void OnAvailableChanging(System.Nullable<bool> value);
    partial void OnAvailableChanged();
    partial void OnDOFChanging(System.Nullable<bool> value);
    partial void OnDOFChanged();
    #endregion
		
		public Document()
		{
			this._FileDataEx = default(EntityRef<FileDataEx>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(250)")]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDoc", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadDoc
		{
			get
			{
				return this._UploadDoc;
			}
			set
			{
				if ((this._UploadDoc != value))
				{
					if (this._FileDataEx.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadDocChanging(value);
					this.SendPropertyChanging();
					this._UploadDoc = value;
					this.SendPropertyChanged("UploadDoc");
					this.OnUploadDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocType", DbType="NChar(1)")]
		public System.Nullable<char> DocType
		{
			get
			{
				return this._DocType;
			}
			set
			{
				if ((this._DocType != value))
				{
					this.OnDocTypeChanging(value);
					this.SendPropertyChanging();
					this._DocType = value;
					this.SendPropertyChanged("DocType");
					this.OnDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadTime
		{
			get
			{
				return this._UploadTime;
			}
			set
			{
				if ((this._UploadTime != value))
				{
					this.OnUploadTimeChanging(value);
					this.SendPropertyChanging();
					this._UploadTime = value;
					this.SendPropertyChanged("UploadTime");
					this.OnUploadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadBy", DbType="NVarChar(50)")]
		public string UploadBy
		{
			get
			{
				return this._UploadBy;
			}
			set
			{
				if ((this._UploadBy != value))
				{
					this.OnUploadByChanging(value);
					this.SendPropertyChanging();
					this._UploadBy = value;
					this.SendPropertyChanged("UploadBy");
					this.OnUploadByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOF", DbType="Bit")]
		public System.Nullable<bool> DOF
		{
			get
			{
				return this._DOF;
			}
			set
			{
				if ((this._DOF != value))
				{
					this.OnDOFChanging(value);
					this.SendPropertyChanging();
					this._DOF = value;
					this.SendPropertyChanged("DOF");
					this.OnDOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_Document", Storage="_FileDataEx", ThisKey="UploadDoc", OtherKey="Oid", IsForeignKey=true)]
		public FileDataEx FileDataEx
		{
			get
			{
				return this._FileDataEx.Entity;
			}
			set
			{
				FileDataEx previousValue = this._FileDataEx.Entity;
				if (((previousValue != value) 
							|| (this._FileDataEx.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileDataEx.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._FileDataEx.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._UploadDoc = value.Oid;
					}
					else
					{
						this._UploadDoc = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FileDataEx");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailTemplate")]
	public partial class EmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TO;
		
		private string _CC;
		
		private string _BCC;
		
		private string _ReplayTo;
		
		private string _Subject;
		
		private string _Body;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTOChanging(string value);
    partial void OnTOChanged();
    partial void OnCCChanging(string value);
    partial void OnCCChanged();
    partial void OnBCCChanging(string value);
    partial void OnBCCChanged();
    partial void OnReplayToChanging(string value);
    partial void OnReplayToChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    #endregion
		
		public EmailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[TO]", Storage="_TO", DbType="NVarChar(50)")]
		public string TO
		{
			get
			{
				return this._TO;
			}
			set
			{
				if ((this._TO != value))
				{
					this.OnTOChanging(value);
					this.SendPropertyChanging();
					this._TO = value;
					this.SendPropertyChanged("TO");
					this.OnTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="NVarChar(50)")]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCC", DbType="NVarChar(50)")]
		public string BCC
		{
			get
			{
				return this._BCC;
			}
			set
			{
				if ((this._BCC != value))
				{
					this.OnBCCChanging(value);
					this.SendPropertyChanging();
					this._BCC = value;
					this.SendPropertyChanged("BCC");
					this.OnBCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplayTo", DbType="NVarChar(50)")]
		public string ReplayTo
		{
			get
			{
				return this._ReplayTo;
			}
			set
			{
				if ((this._ReplayTo != value))
				{
					this.OnReplayToChanging(value);
					this.SendPropertyChanging();
					this._ReplayTo = value;
					this.SendPropertyChanged("ReplayTo");
					this.OnReplayToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private System.Nullable<int> _SubjectID;
		
		private string _Outline;
		
		private System.Nullable<char> _Status;
		
		private string _Instructor;
		
		private System.Nullable<System.DateTime> _FromDatetime;
		
		private System.Nullable<System.DateTime> _ToDatetime;
		
		private string _RecordedFile;
		
		private string _Audience;
		
		private string _Title;
		
		private string _Description;
		
		private EntitySet<EventAttendee> _EventAttendees;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnOutlineChanging(string value);
    partial void OnOutlineChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    partial void OnInstructorChanging(string value);
    partial void OnInstructorChanged();
    partial void OnFromDatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDatetimeChanged();
    partial void OnToDatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnToDatetimeChanged();
    partial void OnRecordedFileChanging(string value);
    partial void OnRecordedFileChanged();
    partial void OnAudienceChanging(string value);
    partial void OnAudienceChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Event()
		{
			this._EventAttendees = new EntitySet<EventAttendee>(new Action<EventAttendee>(this.attach_EventAttendees), new Action<EventAttendee>(this.detach_EventAttendees));
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outline", DbType="NVarChar(MAX)")]
		public string Outline
		{
			get
			{
				return this._Outline;
			}
			set
			{
				if ((this._Outline != value))
				{
					this.OnOutlineChanging(value);
					this.SendPropertyChanging();
					this._Outline = value;
					this.SendPropertyChanged("Outline");
					this.OnOutlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructor", DbType="NVarChar(150)")]
		public string Instructor
		{
			get
			{
				return this._Instructor;
			}
			set
			{
				if ((this._Instructor != value))
				{
					this.OnInstructorChanging(value);
					this.SendPropertyChanging();
					this._Instructor = value;
					this.SendPropertyChanged("Instructor");
					this.OnInstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDatetime
		{
			get
			{
				return this._FromDatetime;
			}
			set
			{
				if ((this._FromDatetime != value))
				{
					this.OnFromDatetimeChanging(value);
					this.SendPropertyChanging();
					this._FromDatetime = value;
					this.SendPropertyChanged("FromDatetime");
					this.OnFromDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDatetime
		{
			get
			{
				return this._ToDatetime;
			}
			set
			{
				if ((this._ToDatetime != value))
				{
					this.OnToDatetimeChanging(value);
					this.SendPropertyChanging();
					this._ToDatetime = value;
					this.SendPropertyChanged("ToDatetime");
					this.OnToDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordedFile", DbType="NVarChar(200)")]
		public string RecordedFile
		{
			get
			{
				return this._RecordedFile;
			}
			set
			{
				if ((this._RecordedFile != value))
				{
					this.OnRecordedFileChanging(value);
					this.SendPropertyChanging();
					this._RecordedFile = value;
					this.SendPropertyChanged("RecordedFile");
					this.OnRecordedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audience", DbType="NVarChar(200)")]
		public string Audience
		{
			get
			{
				return this._Audience;
			}
			set
			{
				if ((this._Audience != value))
				{
					this.OnAudienceChanging(value);
					this.SendPropertyChanging();
					this._Audience = value;
					this.SendPropertyChanged("Audience");
					this.OnAudienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventAttendee", Storage="_EventAttendees", ThisKey="EventID", OtherKey="EventID")]
		public EntitySet<EventAttendee> EventAttendees
		{
			get
			{
				return this._EventAttendees;
			}
			set
			{
				this._EventAttendees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_Event", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventAttendees(EventAttendee entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_EventAttendees(EventAttendee entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventAttendee")]
	public partial class EventAttendee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _EventID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Title;
		
		private string _Email;
		
		private string _CompanyName;
		
		private string _Country;
		
		private System.Nullable<System.DateTime> _RegisterDatetime;
		
		private int _EventAttendeeID;
		
		private EntityRef<Event> _Event;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(System.Nullable<int> value);
    partial void OnEventIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegisterDatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterDatetimeChanged();
    partial void OnEventAttendeeIDChanging(int value);
    partial void OnEventAttendeeIDChanged();
    #endregion
		
		public EventAttendee()
		{
			this._Event = default(EntityRef<Event>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int")]
		public System.Nullable<int> EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(150)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(150)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(300)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(150)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegisterDatetime
		{
			get
			{
				return this._RegisterDatetime;
			}
			set
			{
				if ((this._RegisterDatetime != value))
				{
					this.OnRegisterDatetimeChanging(value);
					this.SendPropertyChanging();
					this._RegisterDatetime = value;
					this.SendPropertyChanged("RegisterDatetime");
					this.OnRegisterDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventAttendeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventAttendeeID
		{
			get
			{
				return this._EventAttendeeID;
			}
			set
			{
				if ((this._EventAttendeeID != value))
				{
					this.OnEventAttendeeIDChanging(value);
					this.SendPropertyChanging();
					this._EventAttendeeID = value;
					this.SendPropertyChanged("EventAttendeeID");
					this.OnEventAttendeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventAttendee", Storage="_Event", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.EventAttendees.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.EventAttendees.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileDataEx")]
	public partial class FileDataEx : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _DefaultDirectory;
		
		private System.Nullable<int> _Size;
		
		private System.Data.Linq.Binary _Content;
		
		private string _FileName;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private EntitySet<ApplicationModule> _ApplicationModules;
		
		private EntitySet<ApplicationModule> _ApplicationModules1;
		
		private EntitySet<ApplicationModule> _ApplicationModules2;
		
		private EntitySet<ApplicationModule> _ApplicationModules3;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<Article> _Articles1;
		
		private EntitySet<Document> _Documents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnDefaultDirectoryChanging(string value);
    partial void OnDefaultDirectoryChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    #endregion
		
		public FileDataEx()
		{
			this._ApplicationModules = new EntitySet<ApplicationModule>(new Action<ApplicationModule>(this.attach_ApplicationModules), new Action<ApplicationModule>(this.detach_ApplicationModules));
			this._ApplicationModules1 = new EntitySet<ApplicationModule>(new Action<ApplicationModule>(this.attach_ApplicationModules1), new Action<ApplicationModule>(this.detach_ApplicationModules1));
			this._ApplicationModules2 = new EntitySet<ApplicationModule>(new Action<ApplicationModule>(this.attach_ApplicationModules2), new Action<ApplicationModule>(this.detach_ApplicationModules2));
			this._ApplicationModules3 = new EntitySet<ApplicationModule>(new Action<ApplicationModule>(this.attach_ApplicationModules3), new Action<ApplicationModule>(this.detach_ApplicationModules3));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Articles1 = new EntitySet<Article>(new Action<Article>(this.attach_Articles1), new Action<Article>(this.detach_Articles1));
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDirectory", DbType="NVarChar(100)")]
		public string DefaultDirectory
		{
			get
			{
				return this._DefaultDirectory;
			}
			set
			{
				if ((this._DefaultDirectory != value))
				{
					this.OnDefaultDirectoryChanging(value);
					this.SendPropertyChanging();
					this._DefaultDirectory = value;
					this.SendPropertyChanged("DefaultDirectory");
					this.OnDefaultDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(260)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule", Storage="_ApplicationModules", ThisKey="Oid", OtherKey="UploadHeaderImgUrl")]
		public EntitySet<ApplicationModule> ApplicationModules
		{
			get
			{
				return this._ApplicationModules;
			}
			set
			{
				this._ApplicationModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule1", Storage="_ApplicationModules1", ThisKey="Oid", OtherKey="UploadImage1Url")]
		public EntitySet<ApplicationModule> ApplicationModules1
		{
			get
			{
				return this._ApplicationModules1;
			}
			set
			{
				this._ApplicationModules1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule2", Storage="_ApplicationModules2", ThisKey="Oid", OtherKey="UploadImage2Url")]
		public EntitySet<ApplicationModule> ApplicationModules2
		{
			get
			{
				return this._ApplicationModules2;
			}
			set
			{
				this._ApplicationModules2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_ApplicationModule3", Storage="_ApplicationModules3", ThisKey="Oid", OtherKey="UploadImage3Url")]
		public EntitySet<ApplicationModule> ApplicationModules3
		{
			get
			{
				return this._ApplicationModules3;
			}
			set
			{
				this._ApplicationModules3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_Article", Storage="_Articles", ThisKey="Oid", OtherKey="UploadMiddleImage")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_Article1", Storage="_Articles1", ThisKey="Oid", OtherKey="UploadRightImage")]
		public EntitySet<Article> Articles1
		{
			get
			{
				return this._Articles1;
			}
			set
			{
				this._Articles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileDataEx_Document", Storage="_Documents", ThisKey="Oid", OtherKey="UploadDoc")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationModules(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx = this;
		}
		
		private void detach_ApplicationModules(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx = null;
		}
		
		private void attach_ApplicationModules1(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx1 = this;
		}
		
		private void detach_ApplicationModules1(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx1 = null;
		}
		
		private void attach_ApplicationModules2(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx2 = this;
		}
		
		private void detach_ApplicationModules2(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx2 = null;
		}
		
		private void attach_ApplicationModules3(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx3 = this;
		}
		
		private void detach_ApplicationModules3(ApplicationModule entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx3 = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx = null;
		}
		
		private void attach_Articles1(Article entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx1 = this;
		}
		
		private void detach_Articles1(Article entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx1 = null;
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.FileDataEx = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forms")]
	public partial class Form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FormName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Title;
		
		private string _Phone;
		
		private string _Email;
		
		private string _CompanyName;
		
		private string _CompanySize;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _Zip;
		
		private string _BusinessType;
		
		private string _ProductCategory;
		
		private string _ProductInterest;
		
		private string _Comments;
		
		private string _URL;
		
		private string _HearAboutUs;
		
		private string _customfield1;
		
		private string _customfield2;
		
		private string _customfield3;
		
		private string _customfield4;
		
		private string _customfield5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanySizeChanging(string value);
    partial void OnCompanySizeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnBusinessTypeChanging(string value);
    partial void OnBusinessTypeChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnProductInterestChanging(string value);
    partial void OnProductInterestChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnHearAboutUsChanging(string value);
    partial void OnHearAboutUsChanged();
    partial void Oncustomfield1Changing(string value);
    partial void Oncustomfield1Changed();
    partial void Oncustomfield2Changing(string value);
    partial void Oncustomfield2Changed();
    partial void Oncustomfield3Changing(string value);
    partial void Oncustomfield3Changed();
    partial void Oncustomfield4Changing(string value);
    partial void Oncustomfield4Changed();
    partial void Oncustomfield5Changing(string value);
    partial void Oncustomfield5Changed();
    #endregion
		
		public Form()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(50)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanySize", DbType="NVarChar(50)")]
		public string CompanySize
		{
			get
			{
				return this._CompanySize;
			}
			set
			{
				if ((this._CompanySize != value))
				{
					this.OnCompanySizeChanging(value);
					this.SendPropertyChanging();
					this._CompanySize = value;
					this.SendPropertyChanged("CompanySize");
					this.OnCompanySizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessType", DbType="NVarChar(50)")]
		public string BusinessType
		{
			get
			{
				return this._BusinessType;
			}
			set
			{
				if ((this._BusinessType != value))
				{
					this.OnBusinessTypeChanging(value);
					this.SendPropertyChanging();
					this._BusinessType = value;
					this.SendPropertyChanged("BusinessType");
					this.OnBusinessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategory", DbType="NVarChar(50)")]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductInterest", DbType="NVarChar(50)")]
		public string ProductInterest
		{
			get
			{
				return this._ProductInterest;
			}
			set
			{
				if ((this._ProductInterest != value))
				{
					this.OnProductInterestChanging(value);
					this.SendPropertyChanging();
					this._ProductInterest = value;
					this.SendPropertyChanged("ProductInterest");
					this.OnProductInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(500)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearAboutUs", DbType="NVarChar(50)")]
		public string HearAboutUs
		{
			get
			{
				return this._HearAboutUs;
			}
			set
			{
				if ((this._HearAboutUs != value))
				{
					this.OnHearAboutUsChanging(value);
					this.SendPropertyChanging();
					this._HearAboutUs = value;
					this.SendPropertyChanged("HearAboutUs");
					this.OnHearAboutUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customfield1", DbType="NVarChar(MAX)")]
		public string customfield1
		{
			get
			{
				return this._customfield1;
			}
			set
			{
				if ((this._customfield1 != value))
				{
					this.Oncustomfield1Changing(value);
					this.SendPropertyChanging();
					this._customfield1 = value;
					this.SendPropertyChanged("customfield1");
					this.Oncustomfield1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customfield2", DbType="NVarChar(MAX)")]
		public string customfield2
		{
			get
			{
				return this._customfield2;
			}
			set
			{
				if ((this._customfield2 != value))
				{
					this.Oncustomfield2Changing(value);
					this.SendPropertyChanging();
					this._customfield2 = value;
					this.SendPropertyChanged("customfield2");
					this.Oncustomfield2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customfield3", DbType="NVarChar(MAX)")]
		public string customfield3
		{
			get
			{
				return this._customfield3;
			}
			set
			{
				if ((this._customfield3 != value))
				{
					this.Oncustomfield3Changing(value);
					this.SendPropertyChanging();
					this._customfield3 = value;
					this.SendPropertyChanged("customfield3");
					this.Oncustomfield3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customfield4", DbType="NVarChar(MAX)")]
		public string customfield4
		{
			get
			{
				return this._customfield4;
			}
			set
			{
				if ((this._customfield4 != value))
				{
					this.Oncustomfield4Changing(value);
					this.SendPropertyChanging();
					this._customfield4 = value;
					this.SendPropertyChanged("customfield4");
					this.Oncustomfield4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customfield5", DbType="NVarChar(MAX)")]
		public string customfield5
		{
			get
			{
				return this._customfield5;
			}
			set
			{
				if ((this._customfield5 != value))
				{
					this.Oncustomfield5Changing(value);
					this.SendPropertyChanging();
					this._customfield5 = value;
					this.SendPropertyChanged("customfield5");
					this.Oncustomfield5Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleInfo")]
	public partial class ModuleInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Version;
		
		private string _Name;
		
		private string _AssemblyFileName;
		
		private System.Nullable<bool> _IsMain;
		
		private System.Nullable<int> _OptimisticLockField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAssemblyFileNameChanging(string value);
    partial void OnAssemblyFileNameChanged();
    partial void OnIsMainChanging(System.Nullable<bool> value);
    partial void OnIsMainChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    #endregion
		
		public ModuleInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(100)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyFileName", DbType="NVarChar(100)")]
		public string AssemblyFileName
		{
			get
			{
				return this._AssemblyFileName;
			}
			set
			{
				if ((this._AssemblyFileName != value))
				{
					this.OnAssemblyFileNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyFileName = value;
					this.SendPropertyChanged("AssemblyFileName");
					this.OnAssemblyFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Party")]
	public partial class Party : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private System.Data.Linq.Binary _Photo;
		
		private System.Nullable<System.Guid> _Address1;
		
		private System.Nullable<System.Guid> _Address2;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private System.Nullable<int> _ObjectType;
		
		private EntityRef<Person> _Person;
		
		private EntitySet<PhoneNumber> _PhoneNumbers;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address3;
		
		private EntityRef<XPObjectType> _XPObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddress1Changing(System.Nullable<System.Guid> value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(System.Nullable<System.Guid> value);
    partial void OnAddress2Changed();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    partial void OnObjectTypeChanging(System.Nullable<int> value);
    partial void OnObjectTypeChanged();
    #endregion
		
		public Party()
		{
			this._Person = default(EntityRef<Person>);
			this._PhoneNumbers = new EntitySet<PhoneNumber>(new Action<PhoneNumber>(this.attach_PhoneNumbers), new Action<PhoneNumber>(this.detach_PhoneNumbers));
			this._Address = default(EntityRef<Address>);
			this._Address3 = default(EntityRef<Address>);
			this._XPObjectType = default(EntityRef<XPObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					if (this._Address3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="Int")]
		public System.Nullable<int> ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					if (this._XPObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Party_Person", Storage="_Person", ThisKey="Oid", OtherKey="Oid", IsUnique=true, IsForeignKey=false)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Party = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Party = this;
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Party_PhoneNumber", Storage="_PhoneNumbers", ThisKey="Oid", OtherKey="Party")]
		public EntitySet<PhoneNumber> PhoneNumbers
		{
			get
			{
				return this._PhoneNumbers;
			}
			set
			{
				this._PhoneNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Party", Storage="_Address", ThisKey="Address1", OtherKey="Oid", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Parties.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Parties.Add(this);
						this._Address1 = value.Oid;
					}
					else
					{
						this._Address1 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Party1", Storage="_Address3", ThisKey="Address2", OtherKey="Oid", IsForeignKey=true)]
		public Address Address3
		{
			get
			{
				return this._Address3.Entity;
			}
			set
			{
				Address previousValue = this._Address3.Entity;
				if (((previousValue != value) 
							|| (this._Address3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address3.Entity = null;
						previousValue.Parties1.Remove(this);
					}
					this._Address3.Entity = value;
					if ((value != null))
					{
						value.Parties1.Add(this);
						this._Address2 = value.Oid;
					}
					else
					{
						this._Address2 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Address3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XPObjectType_Party", Storage="_XPObjectType", ThisKey="ObjectType", OtherKey="OID", IsForeignKey=true)]
		public XPObjectType XPObjectType
		{
			get
			{
				return this._XPObjectType.Entity;
			}
			set
			{
				XPObjectType previousValue = this._XPObjectType.Entity;
				if (((previousValue != value) 
							|| (this._XPObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XPObjectType.Entity = null;
						previousValue.Parties.Remove(this);
					}
					this._XPObjectType.Entity = value;
					if ((value != null))
					{
						value.Parties.Add(this);
						this._ObjectType = value.OID;
					}
					else
					{
						this._ObjectType = default(Nullable<int>);
					}
					this.SendPropertyChanged("XPObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhoneNumbers(PhoneNumber entity)
		{
			this.SendPropertyChanging();
			entity.Party1 = this;
		}
		
		private void detach_PhoneNumbers(PhoneNumber entity)
		{
			this.SendPropertyChanging();
			entity.Party1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersistentPermission")]
	public partial class PersistentPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _SerializedPermission;
		
		private System.Nullable<System.Guid> _Role;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private EntityRef<RoleBase> _RoleBase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnSerializedPermissionChanging(string value);
    partial void OnSerializedPermissionChanged();
    partial void OnRoleChanging(System.Nullable<System.Guid> value);
    partial void OnRoleChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    #endregion
		
		public PersistentPermission()
		{
			this._RoleBase = default(EntityRef<RoleBase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerializedPermission", DbType="NVarChar(4000)")]
		public string SerializedPermission
		{
			get
			{
				return this._SerializedPermission;
			}
			set
			{
				if ((this._SerializedPermission != value))
				{
					this.OnSerializedPermissionChanging(value);
					this.SendPropertyChanging();
					this._SerializedPermission = value;
					this.SendPropertyChanged("SerializedPermission");
					this.OnSerializedPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					if (this._RoleBase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleBase_PersistentPermission", Storage="_RoleBase", ThisKey="Role", OtherKey="Oid", IsForeignKey=true)]
		public RoleBase RoleBase
		{
			get
			{
				return this._RoleBase.Entity;
			}
			set
			{
				RoleBase previousValue = this._RoleBase.Entity;
				if (((previousValue != value) 
							|| (this._RoleBase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleBase.Entity = null;
						previousValue.PersistentPermissions.Remove(this);
					}
					this._RoleBase.Entity = value;
					if ((value != null))
					{
						value.PersistentPermissions.Add(this);
						this._Role = value.Oid;
					}
					else
					{
						this._Role = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RoleBase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Email;
		
		private EntityRef<User> _User;
		
		private EntityRef<Party> _Party;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Person()
		{
			this._User = default(EntityRef<User>);
			this._Party = default(EntityRef<Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					if (this._Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(100)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_User", Storage="_User", ThisKey="Oid", OtherKey="Oid", IsUnique=true, IsForeignKey=false)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Person = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Party_Person", Storage="_Party", ThisKey="Oid", OtherKey="Oid", IsForeignKey=true)]
		public Party Party
		{
			get
			{
				return this._Party.Entity;
			}
			set
			{
				Party previousValue = this._Party.Entity;
				if (((previousValue != value) 
							|| (this._Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Party.Entity = null;
						previousValue.Person = null;
					}
					this._Party.Entity = value;
					if ((value != null))
					{
						value.Person = this;
						this._Oid = value.Oid;
					}
					else
					{
						this._Oid = default(System.Guid);
					}
					this.SendPropertyChanged("Party");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoneNumber")]
	public partial class PhoneNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _Number;
		
		private System.Nullable<System.Guid> _Party;
		
		private string _PhoneType;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private EntityRef<Party> _Party1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnPartyChanging(System.Nullable<System.Guid> value);
    partial void OnPartyChanged();
    partial void OnPhoneTypeChanging(string value);
    partial void OnPhoneTypeChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    #endregion
		
		public PhoneNumber()
		{
			this._Party1 = default(EntityRef<Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(100)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Party", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					if (this._Party1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyChanging(value);
					this.SendPropertyChanging();
					this._Party = value;
					this.SendPropertyChanged("Party");
					this.OnPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneType", DbType="NVarChar(100)")]
		public string PhoneType
		{
			get
			{
				return this._PhoneType;
			}
			set
			{
				if ((this._PhoneType != value))
				{
					this.OnPhoneTypeChanging(value);
					this.SendPropertyChanging();
					this._PhoneType = value;
					this.SendPropertyChanged("PhoneType");
					this.OnPhoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Party_PhoneNumber", Storage="_Party1", ThisKey="Party", OtherKey="Oid", IsForeignKey=true)]
		public Party Party1
		{
			get
			{
				return this._Party1.Entity;
			}
			set
			{
				Party previousValue = this._Party1.Entity;
				if (((previousValue != value) 
							|| (this._Party1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Party1.Entity = null;
						previousValue.PhoneNumbers.Remove(this);
					}
					this._Party1.Entity = value;
					if ((value != null))
					{
						value.PhoneNumbers.Add(this);
						this._Party = value.Oid;
					}
					else
					{
						this._Party = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Party1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Register")]
	public partial class Register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Title;
		
		private string _Comapny;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Country;
		
		private string _CourseId;
		
		private System.Nullable<System.DateTime> _RegisterDate;
		
		private System.Nullable<int> _CoursePeriodId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnComapnyChanging(string value);
    partial void OnComapnyChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCourseIdChanging(string value);
    partial void OnCourseIdChanged();
    partial void OnRegisterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterDateChanged();
    partial void OnCoursePeriodIdChanging(System.Nullable<int> value);
    partial void OnCoursePeriodIdChanged();
    #endregion
		
		public Register()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comapny", DbType="NVarChar(50)")]
		public string Comapny
		{
			get
			{
				return this._Comapny;
			}
			set
			{
				if ((this._Comapny != value))
				{
					this.OnComapnyChanging(value);
					this.SendPropertyChanging();
					this._Comapny = value;
					this.SendPropertyChanged("Comapny");
					this.OnComapnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(200)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(200)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(30)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(20)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(20)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="NVarChar(50)")]
		public string CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegisterDate
		{
			get
			{
				return this._RegisterDate;
			}
			set
			{
				if ((this._RegisterDate != value))
				{
					this.OnRegisterDateChanging(value);
					this.SendPropertyChanging();
					this._RegisterDate = value;
					this.SendPropertyChanged("RegisterDate");
					this.OnRegisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursePeriodId", DbType="Int")]
		public System.Nullable<int> CoursePeriodId
		{
			get
			{
				return this._CoursePeriodId;
			}
			set
			{
				if ((this._CoursePeriodId != value))
				{
					this.OnCoursePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._CoursePeriodId = value;
					this.SendPropertyChanged("CoursePeriodId");
					this.OnCoursePeriodIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registeration")]
	public partial class Registeration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CourseID;
		
		private string _Name;
		
		private string _Title;
		
		private string _Company;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Add1;
		
		private string _Add2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Country;
		
		private System.Nullable<System.DateTime> _CourseDate;
		
		private int _RowID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(System.Nullable<int> value);
    partial void OnCourseIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAdd1Changing(string value);
    partial void OnAdd1Changed();
    partial void OnAdd2Changing(string value);
    partial void OnAdd2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCourseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCourseDateChanged();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    #endregion
		
		public Registeration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int")]
		public System.Nullable<int> CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(60)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(60)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(60)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add1", DbType="NVarChar(60)")]
		public string Add1
		{
			get
			{
				return this._Add1;
			}
			set
			{
				if ((this._Add1 != value))
				{
					this.OnAdd1Changing(value);
					this.SendPropertyChanging();
					this._Add1 = value;
					this.SendPropertyChanged("Add1");
					this.OnAdd1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add2", DbType="NVarChar(60)")]
		public string Add2
		{
			get
			{
				return this._Add2;
			}
			set
			{
				if ((this._Add2 != value))
				{
					this.OnAdd2Changing(value);
					this.SendPropertyChanging();
					this._Add2 = value;
					this.SendPropertyChanged("Add2");
					this.OnAdd2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(60)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(60)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(60)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(60)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CourseDate
		{
			get
			{
				return this._CourseDate;
			}
			set
			{
				if ((this._CourseDate != value))
				{
					this.OnCourseDateChanging(value);
					this.SendPropertyChanging();
					this._CourseDate = value;
					this.SendPropertyChanged("CourseDate");
					this.OnCourseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private EntitySet<UserUsers_RoleRole> _UserUsers_RoleRoles;
		
		private EntityRef<RoleBase> _RoleBase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    #endregion
		
		public Role()
		{
			this._UserUsers_RoleRoles = new EntitySet<UserUsers_RoleRole>(new Action<UserUsers_RoleRole>(this.attach_UserUsers_RoleRoles), new Action<UserUsers_RoleRole>(this.detach_UserUsers_RoleRoles));
			this._RoleBase = default(EntityRef<RoleBase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					if (this._RoleBase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserUsers_RoleRole", Storage="_UserUsers_RoleRoles", ThisKey="Oid", OtherKey="Roles")]
		public EntitySet<UserUsers_RoleRole> UserUsers_RoleRoles
		{
			get
			{
				return this._UserUsers_RoleRoles;
			}
			set
			{
				this._UserUsers_RoleRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleBase_Role", Storage="_RoleBase", ThisKey="Oid", OtherKey="Oid", IsForeignKey=true)]
		public RoleBase RoleBase
		{
			get
			{
				return this._RoleBase.Entity;
			}
			set
			{
				RoleBase previousValue = this._RoleBase.Entity;
				if (((previousValue != value) 
							|| (this._RoleBase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleBase.Entity = null;
						previousValue.Role = null;
					}
					this._RoleBase.Entity = value;
					if ((value != null))
					{
						value.Role = this;
						this._Oid = value.Oid;
					}
					else
					{
						this._Oid = default(System.Guid);
					}
					this.SendPropertyChanged("RoleBase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserUsers_RoleRoles(UserUsers_RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserUsers_RoleRoles(UserUsers_RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleBase")]
	public partial class RoleBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _Name;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private System.Nullable<int> _GCRecord;
		
		private System.Nullable<int> _ObjectType;
		
		private EntitySet<PersistentPermission> _PersistentPermissions;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<XPObjectType> _XPObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    partial void OnGCRecordChanging(System.Nullable<int> value);
    partial void OnGCRecordChanged();
    partial void OnObjectTypeChanging(System.Nullable<int> value);
    partial void OnObjectTypeChanged();
    #endregion
		
		public RoleBase()
		{
			this._PersistentPermissions = new EntitySet<PersistentPermission>(new Action<PersistentPermission>(this.attach_PersistentPermissions), new Action<PersistentPermission>(this.detach_PersistentPermissions));
			this._Role = default(EntityRef<Role>);
			this._XPObjectType = default(EntityRef<XPObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCRecord", DbType="Int")]
		public System.Nullable<int> GCRecord
		{
			get
			{
				return this._GCRecord;
			}
			set
			{
				if ((this._GCRecord != value))
				{
					this.OnGCRecordChanging(value);
					this.SendPropertyChanging();
					this._GCRecord = value;
					this.SendPropertyChanged("GCRecord");
					this.OnGCRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="Int")]
		public System.Nullable<int> ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					if (this._XPObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleBase_PersistentPermission", Storage="_PersistentPermissions", ThisKey="Oid", OtherKey="Role")]
		public EntitySet<PersistentPermission> PersistentPermissions
		{
			get
			{
				return this._PersistentPermissions;
			}
			set
			{
				this._PersistentPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleBase_Role", Storage="_Role", ThisKey="Oid", OtherKey="Oid", IsUnique=true, IsForeignKey=false)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleBase = null;
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleBase = this;
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XPObjectType_RoleBase", Storage="_XPObjectType", ThisKey="ObjectType", OtherKey="OID", IsForeignKey=true)]
		public XPObjectType XPObjectType
		{
			get
			{
				return this._XPObjectType.Entity;
			}
			set
			{
				XPObjectType previousValue = this._XPObjectType.Entity;
				if (((previousValue != value) 
							|| (this._XPObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XPObjectType.Entity = null;
						previousValue.RoleBases.Remove(this);
					}
					this._XPObjectType.Entity = value;
					if ((value != null))
					{
						value.RoleBases.Add(this);
						this._ObjectType = value.OID;
					}
					else
					{
						this._ObjectType = default(Nullable<int>);
					}
					this.SendPropertyChanged("XPObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersistentPermissions(PersistentPermission entity)
		{
			this.SendPropertyChanging();
			entity.RoleBase = this;
		}
		
		private void detach_PersistentPermissions(PersistentPermission entity)
		{
			this.SendPropertyChanging();
			entity.RoleBase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SEO")]
	public partial class SEO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PageLink;
		
		private string _Title;
		
		private string _Description;
		
		private string _KeyWords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageLinkChanging(string value);
    partial void OnPageLinkChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    #endregion
		
		public SEO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageLink", DbType="NVarChar(50)")]
		public string PageLink
		{
			get
			{
				return this._PageLink;
			}
			set
			{
				if ((this._PageLink != value))
				{
					this.OnPageLinkChanging(value);
					this.SendPropertyChanging();
					this._PageLink = value;
					this.SendPropertyChanged("PageLink");
					this.OnPageLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(1000)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteMap")]
	public partial class SiteMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Title;
		
		private string _URL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public SiteMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(200)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectID;
		
		private string _Outline;
		
		private string _Description;
		
		private string _ImagePath;
		
		private string _Audience;
		
		private string _Title;
		
		private EntitySet<Event> _Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnOutlineChanging(string value);
    partial void OnOutlineChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnAudienceChanging(string value);
    partial void OnAudienceChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Subject()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outline", DbType="NVarChar(400)")]
		public string Outline
		{
			get
			{
				return this._Outline;
			}
			set
			{
				if ((this._Outline != value))
				{
					this.OnOutlineChanging(value);
					this.SendPropertyChanging();
					this._Outline = value;
					this.SendPropertyChanged("Outline");
					this.OnOutlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(500)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audience", DbType="NVarChar(200)")]
		public string Audience
		{
			get
			{
				return this._Audience;
			}
			set
			{
				if ((this._Audience != value))
				{
					this.OnAudienceChanging(value);
					this.SendPropertyChanging();
					this._Audience = value;
					this.SendPropertyChanged("Audience");
					this.OnAudienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_Event", Storage="_Events", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Oid;
		
		private string _StoredPassword;
		
		private string _UserName;
		
		private System.Nullable<bool> _ChangePasswordOnFirstLogon;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<UserUsers_RoleRole> _UserUsers_RoleRoles;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(System.Guid value);
    partial void OnOidChanged();
    partial void OnStoredPasswordChanging(string value);
    partial void OnStoredPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnChangePasswordOnFirstLogonChanging(System.Nullable<bool> value);
    partial void OnChangePasswordOnFirstLogonChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public User()
		{
			this._UserUsers_RoleRoles = new EntitySet<UserUsers_RoleRole>(new Action<UserUsers_RoleRole>(this.attach_UserUsers_RoleRoles), new Action<UserUsers_RoleRole>(this.detach_UserUsers_RoleRoles));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoredPassword", DbType="NVarChar(100)")]
		public string StoredPassword
		{
			get
			{
				return this._StoredPassword;
			}
			set
			{
				if ((this._StoredPassword != value))
				{
					this.OnStoredPasswordChanging(value);
					this.SendPropertyChanging();
					this._StoredPassword = value;
					this.SendPropertyChanged("StoredPassword");
					this.OnStoredPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePasswordOnFirstLogon", DbType="Bit")]
		public System.Nullable<bool> ChangePasswordOnFirstLogon
		{
			get
			{
				return this._ChangePasswordOnFirstLogon;
			}
			set
			{
				if ((this._ChangePasswordOnFirstLogon != value))
				{
					this.OnChangePasswordOnFirstLogonChanging(value);
					this.SendPropertyChanging();
					this._ChangePasswordOnFirstLogon = value;
					this.SendPropertyChanged("ChangePasswordOnFirstLogon");
					this.OnChangePasswordOnFirstLogonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserUsers_RoleRole", Storage="_UserUsers_RoleRoles", ThisKey="Oid", OtherKey="Users")]
		public EntitySet<UserUsers_RoleRole> UserUsers_RoleRoles
		{
			get
			{
				return this._UserUsers_RoleRoles;
			}
			set
			{
				this._UserUsers_RoleRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_User", Storage="_Person", ThisKey="Oid", OtherKey="Oid", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.User = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.User = this;
						this._Oid = value.Oid;
					}
					else
					{
						this._Oid = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserUsers_RoleRoles(UserUsers_RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserUsers_RoleRoles(UserUsers_RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserUsers_RoleRoles")]
	public partial class UserUsers_RoleRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.Guid> _Roles;
		
		private System.Nullable<System.Guid> _Users;
		
		private System.Guid _OID;
		
		private System.Nullable<int> _OptimisticLockField;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolesChanging(System.Nullable<System.Guid> value);
    partial void OnRolesChanged();
    partial void OnUsersChanging(System.Nullable<System.Guid> value);
    partial void OnUsersChanged();
    partial void OnOIDChanging(System.Guid value);
    partial void OnOIDChanged();
    partial void OnOptimisticLockFieldChanging(System.Nullable<int> value);
    partial void OnOptimisticLockFieldChanged();
    #endregion
		
		public UserUsers_RoleRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				if ((this._Roles != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRolesChanging(value);
					this.SendPropertyChanging();
					this._Roles = value;
					this.SendPropertyChanged("Roles");
					this.OnRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsersChanging(value);
					this.SendPropertyChanging();
					this._Users = value;
					this.SendPropertyChanged("Users");
					this.OnUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimisticLockField", DbType="Int")]
		public System.Nullable<int> OptimisticLockField
		{
			get
			{
				return this._OptimisticLockField;
			}
			set
			{
				if ((this._OptimisticLockField != value))
				{
					this.OnOptimisticLockFieldChanging(value);
					this.SendPropertyChanging();
					this._OptimisticLockField = value;
					this.SendPropertyChanged("OptimisticLockField");
					this.OnOptimisticLockFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserUsers_RoleRole", Storage="_Role", ThisKey="Roles", OtherKey="Oid", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserUsers_RoleRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserUsers_RoleRoles.Add(this);
						this._Roles = value.Oid;
					}
					else
					{
						this._Roles = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserUsers_RoleRole", Storage="_User", ThisKey="Users", OtherKey="Oid", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserUsers_RoleRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserUsers_RoleRoles.Add(this);
						this._Users = value.Oid;
					}
					else
					{
						this._Users = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XPObjectType")]
	public partial class XPObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _TypeName;
		
		private string _AssemblyName;
		
		private EntitySet<Party> _Parties;
		
		private EntitySet<RoleBase> _RoleBases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    #endregion
		
		public XPObjectType()
		{
			this._Parties = new EntitySet<Party>(new Action<Party>(this.attach_Parties), new Action<Party>(this.detach_Parties));
			this._RoleBases = new EntitySet<RoleBase>(new Action<RoleBase>(this.attach_RoleBases), new Action<RoleBase>(this.detach_RoleBases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(254)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(254)")]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XPObjectType_Party", Storage="_Parties", ThisKey="OID", OtherKey="ObjectType")]
		public EntitySet<Party> Parties
		{
			get
			{
				return this._Parties;
			}
			set
			{
				this._Parties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XPObjectType_RoleBase", Storage="_RoleBases", ThisKey="OID", OtherKey="ObjectType")]
		public EntitySet<RoleBase> RoleBases
		{
			get
			{
				return this._RoleBases;
			}
			set
			{
				this._RoleBases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parties(Party entity)
		{
			this.SendPropertyChanging();
			entity.XPObjectType = this;
		}
		
		private void detach_Parties(Party entity)
		{
			this.SendPropertyChanging();
			entity.XPObjectType = null;
		}
		
		private void attach_RoleBases(RoleBase entity)
		{
			this.SendPropertyChanging();
			entity.XPObjectType = this;
		}
		
		private void detach_RoleBases(RoleBase entity)
		{
			this.SendPropertyChanging();
			entity.XPObjectType = null;
		}
	}
}
#pragma warning restore 1591
