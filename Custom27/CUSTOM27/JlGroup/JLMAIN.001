*!**************************************************************************
*! Name      : JLMAIN.PRG
*! Developer : Sameh Saiid Ezzat (SSE)
*! Date      : 05/15/2001
*! Purpose   : J & L Custom Process Program .
*!**************************************************************************
*! Parameters: lcEvntFun -> Process event function name without 'lf..'  .
*!             lcFunPars -> Process function parameters, sent as a string.
*!**************************************************************************
*! Returns   : Logical value.
*!**************************************************************************
*
PARAMETER lcEvntFun,lcFunPars

lcFunPars  = IIF(TYPE('lcFunPars') = 'C',lcFunPars,'')
lcFunToRun = 'lf'+ALLTRIM(lcEvntFun)+'('+lcFunPars+')'

*-- Run the function.
llRetValue = EVAL(lcFunToRun)

RETURN llRetValue
*-- End of Program.

*!**************************************************************************
*! Name      : lfJLOrdSav
*! Developer : Sameh Saiid Ezzat (SSE)
*! Date      : 05/15/2001
*! Purpose   : Save data to BomVar & Custom Thread file. 
*! Reference : C102231,1
*!**************************************************************************
*! Example   : lfJLOrdSav()
*!**************************************************************************
*
FUNCTION lfJLOrdSav

SELECT (lcT_BomVar)
LOCATE

*IF !EOF() AND (USED('ThreadCl') OR (laScrMode[4] AND !EMPTY(laData[43])))
IF RECCOUNT() > 0  
  *-- Open the thread color file.
  llOpnThClr = gfOpenFile(gcDataDir+'ThreadCl',gcDataDir+'ThreadCl','SH')
  
  PRIVATE lcAlias , lcSetDelet , lcOrdLnTag , lcBomVrTag
  lcAlias = ALIAS()  
  lcSetDelet = SET('DELETE')
  SET DELETE OFF

  IF laScrMode[3]
    PRIVATE lcTmpBomV2
    lcTmpBomV2 = gfTempName()
    
    SELECT BomVar
    lcBomVrTag = TAG()
    SET ORDER TO TAG cDsgnCode

    COPY STRUCTURE TO (gcWorkDir+lcTmpBomV2) WITH CDX
    USE (gcWorkDir+lcTmpBomV2) IN 0
  ENDIF  

  SELECT (lcOrdLine)
  lcOrdLnTag = TAG()
  SET ORDER TO TAG OrdLine

  *-- If Edit mode
  IF laScrMode[3]
    SCAN
      IF DELETED()
        SELECT (lcT_BomVar)
        SCAN
          SCATTER MEMVAR
          m.cItmMsjor = &lcOrdLine..Style
          m.LineNo    = &lcOrdLine..LineNo
         
          SELECT (lcTmpBomV2)
          APPEND BLANK
          GATHER MEMVAR
          DELETE
        ENDSCAN
      ELSE
        SELECT (lcT_BomVar)
        REPLACE ALL LineNo WITH &lcOrdLine..LineNo
     
        SCAN
          SCATTER MEMVAR 

          SELECT (lcTmpBomV2)
          APPEND BLANK
          GATHER MEMVAR
         
          IF DELETED(lcT_BomVar)
            DELETE
          ENDIF
        ENDSCAN
      ENDIF
    ENDSCAN

    SELECT (lcTmpBomV2)
    SCAN FOR !EMPTY(cDsgnCode)
      IF SEEK(cIDType+cCost_ID+STR(LineNo,6)+cDsgnCode+cStylePos,'BomVar')        
        SELECT BomVar
        =RLOCK()                  && Lock the record after saving
        REPLACE cNameDrp1 WITH &lcTmpBomV2..cNameDrp1 , ;
                cNameDrp2 WITH &lcTmpBomV2..cNameDrp2 , ;
                cNameDrp3 WITH &lcTmpBomV2..cNameDrp3 , ;
                nStitches WITH &lcTmpBomV2..nStitches
        UNLOCK                    && UnLock the record after saving        
        
        IF DELETED(lcTmpBomV2)
          =RLOCK()                  && Lock the record after saving
          DELETE
        ENDIF    
      ELSE
        IF !DELETED()
          SCATTER MEMVAR
          SELECT BomVar
          APPEND BLANK
          GATHER MEMVAR
        ENDIF        
      ENDIF
    ENDSCAN
          
    SELECT (lcTmpThClr)
    SCAN FOR !EMPTY(cThreadCl)
      IF SEEK(cIDType + cCost_ID + STR(LineNo,6) + cDsgnCode + cStylePos + cThreadCl,'ThreadCl')  
        SELECT ThreadCl
        =RLOCK()                  && Lock the record after saving
        REPLACE cComment1 WITH &lcTmpThClr..cComment1
        UNLOCK                    && Lock the record after saving
        
        IF DELETED(lcTmpThClr) OR (SEEK(cIDType + cCost_ID + STR(LineNo,6),'BomVar') AND DELETED('BomVar'))
          SELECT ThreadCl
          =RLOCK()                  && Lock the record after saving
          DELETE
        ENDIF    
      ELSE
        IF !DELETED()
          SCATTER MEMVAR MEMO
          SELECT ThreadCl
          APPEND BLANK
          GATHER MEMVAR MEMO
          IF SEEK(cIDType + cCost_ID + STR(LineNo,6),'BomVar') AND DELETED('BomVar')
            =RLOCK()                  && Lock the record after saving
            DELETE          
          ENDIF
        ENDIF        
      ENDIF
    ENDSCAN

  ELSE           && Add mode laScrMode[4].
    SCAN
      IF !DELETED()
        SELECT (lcT_BomVar)
        REPLACE ALL LineNo WITH &lcOrdLine..LineNo , ;
                    cCost_ID WITH laData[1]
      
        SELECT BomVar
        APPEND FROM (gcWorkDir + lcT_BomVar) FOR !DELETED() AND !EMPTY(cDsgnCode)
      ENDIF
    ENDSCAN

    SELECT (lcTmpThClr)  
    REPLACE ALL cCost_ID WITH laData[1]
    
    SELECT ThreadCl
    APPEND FROM (gcWorkDir + lcTmpThClr) FOR !DELETED() AND !EMPTY(cThreadCl)
  ENDIF
  *-- Endif of Edit mode

  SELECT (lcOrdLine)
  SET ORDER TO TAG (lcOrdLnTag)

  IF laScrMode[3]
    SELECT BomVar
    SET ORDER TO TAG (lcBomVrTag)
  ENDIF  

  IF USED('BomVar2')
    USE IN BomVar2
  ENDIF

  SET DELETE &lcSetDelet
  SELECT (lcAlias)    && Restore old alias.
  
ENDIF  
*-- End of lfJLOrdSav.

*!**************************************************************************
*! Name      : lfJLAddBar
*! Developer : Sameh Saiid Ezzat (SSE)
*! Date      : 05/15/2001
*! Purpose   : Add a new custom Bar to option's pad in Sales Order screen.
*! Reference : C102231,1
*!**************************************************************************
*! Example   : lfJLOrdSav()
*!**************************************************************************
*
FUNCTION lfJLAddBar
DEFINE BAR 17 OF _INQURYPOP PROMPT '\<Design Information Screen' SKIP FOR laScrMode[1] OR EMPTY(laData[2]) OR !llBomVarnt

*C102255,1 Add a new custom bar for J & L for Merchandise screen. [Begin] 
DEFINE BAR 18 OF _INQURYPOP PROMPT '\<Merchandise Information Screen' SKIP FOR laScrMode[1]
*C102255,1 Add a new custom bar for J & L for Merchandise screen. [End]
*-- End of lfJLAddBar.

*!**************************************************************************
*! Name      : lfRunJLInf
*! Developer : Sameh Saiid Ezzat (SSE)
*! Date      : 05/15/2001
*! Purpose   : Run custom Design Info screen from Option's pad in Sales Order Screen.
*! Reference : C102231,1
*!**************************************************************************
*! Example   : lfRunJLInf()
*!**************************************************************************
*
FUNCTION lfRunJLInf
PRIVATE lcOrdAlias

lcOrdAlias = ALIAS()
  
*-- Clear the trapped keys.
PUSH KEY
ON KEY

IF BAR() = 17 OR BAR() = 18
  PUSH MENU _MSYSMENU
  RELEASE PAD _INQUIRY OF _MSYSMENU

  DO CASE
    CASE BAR() = 17
      DO (gcAppHome+'\SOJLINF.FXP') WITH "SO" , laData[1] , m.LineNo , m.Style , laData[2] , m.Store , lcT_BomVar , lnActFolder
      SHOW GET pbConfig,1 PROMPT lcConfig ENABLE
    
    *C102255,1 Run Mechandise Information screen. [Begin] 
    CASE BAR() = 18
      DO (gcScrDir+gcWinAppl+ "\SoJLMer.SPX")
    *C102255,1 Run Mechandise Information screen. [End] 
  
  ENDCASE    

  POP MENU _MSYSMENU
ELSE
  DO (gcAppHome+'\SOJLINF.FXP') WITH "SO" , laData[1] , m.LineNo , m.Style , laData[2] , m.Store , lcT_BomVar , lnActFolder
  SHOW GET pbConfig,1 PROMPT lcConfig ENABLE
ENDIF  
  
*-- Restore the trapped keys.
POP KEY
SELECT (lcOrdAlias)
*-- End of lfRunJLInf.

*!**************************************************************************
*! Name      : lfSOJLMer
*! Developer : Sameh Saiid Ezzat (SSE)
*! Date      : 05/27/2001
*! Purpose   : Save cLevel , cLabel fields from Temp Ordline to Ordline file. 
*! Reference : C102255,1
*!**************************************************************************
*! Example   : lfSOJLMer()
*!**************************************************************************
*
FUNCTION lfSOJLMer
PRIVATE lcAlias , lcOrdLnTag , lnOrdLnRec , lcTmpTag , lnTmpRecNo
lcAlias = ALIAS()

SELECT (lcOrdLine)
*lnTmpRecNo = RECNO()
lcTmpTag = TAG()
SET ORDER TO TAG OrdLine

SELECT OrdLine
*lnOrdLnRec = RECNO()
lcOrdLnTag = TAG()
SET ORDER TO TAG OrdLine
IF SEEK(lcOrdType + laData[1])
  SCAN REST WHILE cOrdType + Order + STR(LineNo,6) = lcOrdType + laData[1]
    IF SEEK(cOrdType + Order + STR(LineNo,6),lcOrdLine)
      =RLOCK()
      REPLACE cLevel WITH &lcOrdLine..cLevel , ;
              cLabel WITH &lcOrdLine..cLabel
      UNLOCK
    ENDIF
  ENDSCAN
ENDIF

SELECT (lcOrdLine)
SET ORDER TO TAG (lcTmpTag)

SELECT OrdLine
SET ORDER TO TAG (lcOrdLnTag)

IF !EMPTY(lcAlias)
  SELECT (lcAlias)
ENDIF
*-- End of lfSOJLMer.

*:**************************************************************************
*:* Name        : lfAccumOTS
*:* Entry       : C102237
*:* Developer   : TMI - TAREK MOHAMED IBRAHIM
*:* Date        : 05/16/2001
*:* Purpose     : A new line will be added right below each style sizw shown in the OTS 
*:*             : screen. This line will show the accumulative OTS balance
*:***************************************************************************
*:* Called from : 
*:***************************************************************************
*:* Passed Parameters : None
*:***************************************************************************
*:* Return      : None
*:***************************************************************************
*:* Example     :  = lfAccumOTS()
*:***************************************************************************
FUNCTION lfAccumOTS
PRIVATE lnCnt
*-- loop throgh (lctmpots)
SELECT (lcTmpots)
GO TOP
*-- For each line in (lctmpots) add accumulative quantities line
FOR lnCnt = 1 TO RECCOUNT()-1
  GOTO lnCnt
  SCATTER MEMVAR
  APPEND BLANK
  REPLACE STYLE  WITH m.STYLE         ,;
          SZCnt  WITH m.SZCnt         ,;
          nQty1  WITH m.nQty1         ,;
          nQty2  WITH nQty1+m.nQty2   ,;
          nQty3  WITH nQty2+m.nQty3   ,;
          nQty4  WITH nQty3+m.nQty4   ,;
          nQty5  WITH nQty4+m.nQty5   ,;
          nQty6  WITH nQty5+m.nQty6   ,;
          nQty7  WITH nQty6+m.nQty7   ,;
          nQty8  WITH nQty7+m.nQty8   ,;
          nQty9  WITH nQty8+m.nQty9   ,;
          nQty10 WITH nQty9+m.nQty10  ,;
          nQty11 WITH m.nQty11        ,;
          nQty12 WITH m.nQty12            
NEXT
*-- end of lfAccumOTS.

*!**************************************************************************
*! Name      : lfAddBarJL
*! Developer : Ahmed Maher (AMH)
*! Date      : 06/07/2001
*! Purpose   : Add a new custom Bar to option's pad in Sales Order screen.
*! Reference : C102357,1
*!**************************************************************************
*! Example   : lfAddBarJL()
*!**************************************************************************
*
FUNCTION lfAddBarJL
IF !llImpCost
  DEFINE BAR 11 OF _OPTIONPOP PROMPT '\<Design Information Screen' SKIP FOR laScrMode[1]
ELSE
  DEFINE BAR 10 OF _OPTIONPOP PROMPT '\<Design Information Screen' SKIP FOR laScrMode[1]
ENDIF
*--end of lfAddBarJL.

*!**************************************************************************
*! Name      : lfRunInfJL
*! Developer : Ahmed Maher (AMH)
*! Date      : 06/07/2001
*! Purpose   : Run custom Design Info screen from Option's pad in Sales Order Screen.
*! Reference : C102357,1
*!**************************************************************************
*! Example   : lfRunInfJL()
*!**************************************************************************
*
FUNCTION lfRunInfJL
PRIVATE lcPoAlias

lcPoAlias = ALIAS()
  
*-- Clear the trapped keys.
PUSH KEY
ON KEY

IF (BAR() = 10 .AND. llImpCost) .OR. (BAR() = 11 .AND. !llImpCost)
  PUSH MENU _MSYSMENU
  RELEASE PAD _OPTIONPOP OF _MSYSMENU
  DO (gcAppHome+'SOJLINF.FXP') WITH "AD" , laData[1] , m.LineNo , m.Style , laData[2] , m.Store , lcT_BomVar , lnActFolder
  POP MENU _MSYSMENU
ENDIF  
  
*-- Restore the trapped keys.
POP KEY
SELECT (lcPoAlias)
*-- End of lfRunInfJL.

*!**************************************************************************
*! Name      : lfUpdIssAd
*! Developer : Ahmed Maher (AMH)
*! Date      : 06/13/2001
*! Purpose   : custom issue adornment order for JL.
*! Reference : C102358,5
*!**************************************************************************
*! Example   : lfUpdIssAd()
*!**************************************************************************
*
FUNCTION LFUPDISSAD
PRIVATE lnAlias, lcOldStyDy, lcOldCutPk, lcOldPosLn
= gfOpenFile(gcDataDir+'ORDHDR','ORDHDR','SH')
= gfOpenFile(gcDataDir+'ORDLINE','ORDLINE','SH')

SELECT STYDYE
lcOldStyDy = SET('ORDER')
SET ORDER TO TAG Stydye

SELECT CUTPICK
lcOldCutPk = SET('ORDER')
SET ORDER TO TAG Cutpkord

SELECT POSLN
lcOldPosLn = SET('ORDER')
SET ORDER TO TAG Posln   &&*cstytype+po+style+STR(lineno,6)+trancd.

llOpenPikt = .F.
IF !USED('PIKTKT')
  =gfOpenFile(gcDataDir+'PIKTKT',gcDataDir+'PIKTKT','SH')
  llOpenPikt = .T.
ENDIF

*--If pulled at zero.
DIME laZeroArry[18]
laZeroArry = 0

SELECT (lcTmpLine)
LOCATE
SCAN FOR TranCd = '2'
  *--Update Ordered qty.
  FOR lnI =1 TO 8
    lcI = STR(lnI,1)
    REPLACE Ord&lcI WITH Qty&lcI
  ENDFOR
  REPLACE TotOrd WITH TotQty
  SCATTER FIELDS Qty1,Qty2,Qty3,Qty4,Qty5,Qty6,Qty7,Qty8,TotQty,Ord1,Ord2,Ord3,Ord4,Ord5,Ord6,Ord7,Ord8,TotOrd TO laNewQArr

  * 1- update Posln
  =SEEK('A'+Po+Style+STR(Lineno,6)+'1','POSLN')
  lcTarWarCd = POSLN.cWareCode
  SELECT POSLN
  SCATTER FIELDS Qty1,Qty2,Qty3,Qty4,Qty5,Qty6,Qty7,Qty8 TO laOLDQArr
  lnOldTotQy = TotQty
  =RLOCK()
  GATHER FROM laNewQArr FIELDS Qty1,Qty2,Qty3,Qty4,Qty5,Qty6,Qty7,Qty8,TotQty,Ord1,Ord2,Ord3,Ord4,Ord5,Ord6,Ord7,Ord8,TotOrd
  UNLOCK

  * 2- Update Poshdr
  SELECT POSHDR
  =SEEK('A'+&lcTmpLine..Po)
  =RLOCK()
  REPLACE nStyOrder WITH nStyOrder - (lnOldTotQy - POSLN.TotQty ),;
          Open      WITH Open      - (lnOldTotQy - POSLN.TotQty ),;
          nICost1   WITH nICost1   - ((lnOldTotQy - POSLN.TotQty )* POSLN.nECost1),;
          nFCost1   WITH nICost1
  UNLOCK

  * 3- Update CutPick
  SELECT CUTPICK
  =SEEK('2'+&lcTmpLine..Po+STR(&lcTmpLine..LineNo,6),'CUTPICK')
  =RLOCK()
  GATHER FROM laNewQArr FIELDS Qty1,Qty2,Qty3,Qty4,Qty5,Qty6,Qty7,Qty8,TotQty
  IF TotQty=0
    DELETE
  ENDIF
  UNLOCK

    
  * 4- Update Order files.
  SELECT ORDHDR
  =SEEK('O'+CUTPICK.Order,'ORDHDR')
  =RLOCK()
  REPLACE TotCut WITH TotCut - ( lnOldTotQy - &lcTmpLine..TotQty)
  UNLOCK
  SELECT ORDLINE
  =SEEK('O'+CUTPICK.Order+STR(INT(VAL(CUTPICK.cOrdLine)),6),'ORDLINE')    
  =RLOCK()
  REPLACE TotCut WITH TotCut - ( lnOldTotQy - &lcTmpLine..TotQty),;
          TotPik WITH TotPik - ( lnOldTotQy - &lcTmpLine..TotQty)
  FOR lnSizeNo = 1 TO 8
    lcSz = STR(lnSizeNo,1)
    REPLACE Cut&lcSz WITH Cut&lcSz - (laOLDQArr[lnSizeNo] - laNewQArr[lnSizeNo]),;
            Pik&lcSz WITH Pik&lcSz - (laOLDQArr[lnSizeNo] - laNewQArr[lnSizeNo])
  ENDFOR
  IF TotPik=0
    REPLACE PIKTKT  WITH ' ',;
            PIKDATE WITH {},;
            PICKED  WITH .F.
  ENDIF
  UNLOCK
  

  *--Update Piktkt.
  SELECT PikTkt
  IF SEEK(POSLN.ShipNo)
    =RLOCK()
    REPLACE Status    WITH 'P',;
            cWareCode WITH lcTarWarCd
    UNLOCK 
  ENDIF

  * 6- Update style.
  =SEEK(POSLN.Style,'STYLE')
  SELECT STYLE
  =RLOCK()
  FOR lnSizeNo = 1 TO 8
    lcSz = STR(lnSizeNo,1)
    REPLACE WIP&lcSz WITH WIP&lcSz + laNewQArr[lnSizeNo],;
            Alo&lcSz WITH Alo&lcSz - (laOLDQArr[lnSizeNo] - laNewQArr[lnSizeNo])
  ENDFOR
  REPLACE TOTWIP WITH WIP1+WIP2+WIP3+WIP4+WIP5+WIP6+WIP7+WIP8,;
          TOTALO WITH ALO1+ALO2+ALO3+ALO4+ALO5+ALO6+ALO7+ALO8
  UNLOCK 


  SELECT STYDYE
  =SEEK(POSLN.Style+lcTarWarCd+SPACE(10))
  =RLOCK()
  FOR lnSizeNo = 1 TO 8
    lcSz = STR(lnSizeNo,1)
    REPLACE WIP&lcSz WITH WIP&lcSz + laNewQArr[lnSizeNo]
  ENDFOR
  REPLACE TOTWIP WITH WIP1+WIP2+WIP3+WIP4+WIP5+WIP6+WIP7+WIP8
  UNLOCK 


  * 7- Update styDye.
  IF ORDLINE.cWareCode = ORDHDR.cWareCode
    SELECT ORDLINE
    =RLOCK()
    REPLACE cWareCode WITH lcTarWarCd
    UNLOCK
  
    SELECT STYDYE
    =SEEK(POSLN.Style+ORDLINE.cWareCode+SPACE(10))
    =RLOCK()
    FOR lnSizeNo = 1 TO 8
      lcSz = STR(lnSizeNo,1)
      REPLACE Alo&lcSz WITH Alo&lcSz + laNewQArr[lnSizeNo],;
              Ord&lcSz WITH Ord&lcSz + laNewQArr[lnSizeNo]
    ENDFOR
    REPLACE TOTORD WITH ORD1+ORD2+ORD3+ORD4+ORD5+ORD6+ORD7+ORD8,;
            TOTALO WITH ALO1+ALO2+ALO3+ALO4+ALO5+ALO6+ALO7+ALO8
    UNLOCK 

    SELECT STYDYE
    =SEEK(POSLN.Style+ORDHDR.cWareCode+SPACE(10))
    =RLOCK()
    FOR lnSizeNo = 1 TO 8
      lcSz = STR(lnSizeNo,1)
      REPLACE Alo&lcSz WITH Alo&lcSz - laOLDQArr[lnSizeNo],;
              Ord&lcSz WITH Ord&lcSz - laNewQArr[lnSizeNo]
    ENDFOR
    REPLACE TOTORD WITH ORD1+ORD2+ORD3+ORD4+ORD5+ORD6+ORD7+ORD8,;
            TOTALO WITH ALO1+ALO2+ALO3+ALO4+ALO5+ALO6+ALO7+ALO8
    UNLOCK 
  ENDIF

  SELECT (lcTmpLine)
ENDSCAN

SELECT POSLN
SET ORDER TO &lcOldPosLn.

SELECT CUTPICK
SET ORDER TO &lcOldCutPk.

SELECT STYDYE
SET ORDER TO &lcOldStyDy.

SELECT (lcTmpLine)
DELETE ALL FOR clotno = 'X'

IF llOpenPikt
  USE IN PIKTKT
ENDIF
SELECT (lcTmpLine)
RETURN