STORE 0 TO LNALIAS
STORE '' TO LCTEMPORDS, LCTEMPQTYS, LCTEMPNOTS
LNALIAS = SELECT(0)
= GFOPENFILE(GCDATADIR+'MAPOALO',GCDATADIR+'MAPOALO','SH')
= LFCRTMPFLS()
LLWORKDEAL = .F.
LNPOMATPOS = LFITMPOS('POFHDR.POMAT')
IF LNPOMATPOS>0 .AND. LAOGVRFLT(LNPOMATPOS,7)='R' .AND. LCRPFORM<>'A'
   LCPOMATFIL = LAOGVRFLT(LNPOMATPOS,6)
   LLWORKDEAL =  .NOT. EMPTY(LCPOMATFIL) .AND. USED(LCPOMATFIL) .AND. RECCOUNT(LCPOMATFIL)>0
ENDIF
LCPO1 = ''
LCPO2 = ''
LCFABRIC1 = ''
SELECT POFHDR
SET RELATION OFF INTO NOTEPAD_A
LOCATE
SELECT POFLN
SET RELATION TO 'M'+CMATTYPE+POMAT INTO NOTEPAD_A ADDITIVE
LCSCNEXP = "FOR POFLN.Trancd = '1'"
LCRLTONVAR = IIF(LCRPFORM='P','P',IIF(LCRPFORM='R',R,IIF(LCRPFORM='C','C','')))
IF TYPE('lcNewMPos')='C' .AND. USED(LCNEWMPOS)
   LCPOMATFIL = LCNEWMPOS
   LLWORKDEAL = RECCOUNT(LCPOMATFIL)>0
ENDIF
IF LLWORKDEAL
   SELECT (LCPOMATFIL)
   SET RELATION TO LCRLTONVAR+POMAT INTO POFHDR ADDITIVE
   SET SKIP TO POFLN
   LOCATE
   LCSCNEXP = "FOR POFLN.Trancd = '1'"
ELSE
   SELECT POFHDR
   SET SKIP TO 'POFLN'
   LOCATE
ENDIF
SCAN &lcScnExp 
   SELECT POFLN
   WAIT WINDOW NOWAIT 'Collecting data '+POMAT+'  Please Wait ... '
   IF (LCPO1<>POMAT) .AND. LLRPPRTPN
      = LFMPOEND()
      LCPO2 = LCPO1
      LCPO1 = POMAT
   ENDIF
   IF ((LCPO2<>POMAT) .OR. (LCFABRIC1<>FABRIC)) .AND. LLRPPRTMN
      = LFFABEND()
      LCFABRIC1 = FABRIC
   ENDIF
   LNRECNO = RECNO()
   LLEVLEXP = EVALUATE(LCRPEXP)
   GOTO IIF(BETWEEN(LNRECNO,1,RECCOUNT()),LNRECNO,RECNO())
   IF  .NOT. LLEVLEXP
      LOOP
   ENDIF
   IF SEEK(POMAT+FABRIC+COLOR,'MAPOALO')
      SELECT MAPOALO
      SCATTER MEMO MEMVAR
      LCPO = POMAT
      LCFABRIC = FABRIC
      LCCOLOR = COLOR
      LCMATTYPE = POFLN.CMATTYPE
      LLSAME = .F.
      SCAN REST WHILE POMAT+FABRIC+COLOR+ORDER=POFLN.POMAT+POFLN.FABRIC+POFLN.COLOR
         IF LCPO=POMAT .AND. LCFABRIC=FABRIC .AND. LCCOLOR=COLOR
            *SELECT (LCDETTMP)
            SELECT (LCDETTMP1)
            IF MAPOALO.NHOUSQTY=0 .AND. EMPTY(MAPOALO.MLNOTES) .AND. LLSAME
               REPLACE MORDRSPO WITH MORDRSPO+'|'+MAPOALO.ORDER
            ELSE
               APPEND BLANK
               GATHER MEMVAR MEMO
               REPLACE TRANCD WITH '1', CMATTYPE WITH POFLN.CMATTYPE, POMAT WITH MAPOALO.POMAT, FABRIC WITH MAPOALO.FABRIC, COLOR WITH MAPOALO.COLOR, MORDRSPO WITH MAPOALO.ORDER, NORDRQTY WITH MAPOALO.NHOUSQTY, MORDRNOT WITH SUBSTR(MAPOALO.MLNOTES,1,60), ORDER WITH ''
               IF MAPOALO.NHOUSQTY=0 .AND. EMPTY(MAPOALO.MLNOTES)
                  LLSAME = .T.
               ELSE
                  LLSAME = .F.
               ENDIF
            ENDIF
            SELECT MAPOALO
         ELSE
            *SELECT (LCDETTMP)
            SELECT (LCDETTMP1)
            LCPO = MAPOALO.POMA
            LCFABRIC = MAPOALO.FABRIC
            LCCOLOR = MAPOALO.COLOR
            LCMATTYPE = POFLN.CMATTYPE
            *SELECT (LCDETTMP)
            SELECT (LCDETTMP1)
            APPEND BLANK
            GATHER MEMVAR MEMO
            REPLACE TRANCD WITH '1', CMATTYPE WITH POFLN.CMATTYPE, POMAT WITH MAPOALO.POMAT, FABRIC WITH MAPOALO.FABRIC, COLOR WITH MAPOALO.COLOR, MORDRSPO WITH MAPOALO.ORDER, NORDRQTY WITH MAPOALO.NHOUSQTY, MORDRNOT WITH SUBSTR(MAPOALO.MLNOTES,1,60), ORDER WITH ''
            IF MAPOALO.NHOUSQTY=0 .AND. EMPTY(MAPOALO.MLNOTES)
               LLSAME = .T.
            ELSE
               LLSAME = .F.
            ENDIF
         ENDIF
         SELECT MAPOALO
      ENDSCAN
      *SELECT (LCDETTMP)
      SELECT (LCDETTMP1)
      IF RECNO('POFLN')=LNFABEND
         IF LLRPPRTMN
            APPEND BLANK
            GATHER MEMVAR MEMO
            REPLACE TRANCD WITH '1', CMATTYPE WITH LCMATTYPE, POMAT WITH LCPO, FABRIC WITH LCFABRIC, COLOR WITH LCCOLOR, MORDRSPO WITH '', NORDRQTY WITH 0, MORDRNOT WITH '', LENDLINE WITH .T., CRECORD WITH 'N1', ORDER WITH ''
            IF  .NOT. EOF('NOTEPAD')
               REPLACE LENDLINE WITH .T.
            ELSE
               REPLACE LENDLINE WITH .F.
            ENDIF
         ENDIF
      ENDIF
      IF (RECNO('POFLN')=LNMPOEND)
         IF LLRPPRTPN
            APPEND BLANK
            GATHER MEMVAR MEMO
            REPLACE TRANCD WITH '1', CMATTYPE WITH LCMATTYPE, POMAT WITH LCPO, FABRIC WITH LCFABRIC, COLOR WITH LCCOLOR, MORDRSPO WITH '', NORDRQTY WITH 0, MORDRNOT WITH '', LENDLINE WITH .T., CRECORD WITH 'N2', ORDER WITH ''
            IF  .NOT. EOF('NOTEPAD_A')
               REPLACE LENDLINE WITH .T.
            ELSE
               REPLACE LENDLINE WITH .F.
            ENDIF
         ENDIF
      ENDIF
      SELECT POFLN
   ELSE
      SELECT POFLN
      SCATTER MEMO MEMVAR
      *SELECT (LCDETTMP)
      SELECT (LCDETTMP1)
      APPEND BLANK
      GATHER MEMVAR MEMO
      *SELECT (LCDETTMP)
      SELECT (LCDETTMP1)
      IF RECNO('POFLN')=LNFABEND
         IF LLRPPRTMN
            APPEND BLANK
            GATHER MEMVAR MEMO
            REPLACE TRANCD WITH '1', MORDRSPO WITH '', NORDRQTY WITH 0, MORDRNOT WITH '', LENDLINE WITH .T., CRECORD WITH 'N1', ORDER WITH ''
            IF  .NOT. EOF('NOTEPAD')
               REPLACE LENDLINE WITH .T.
            ELSE
               REPLACE LENDLINE WITH .F.
            ENDIF
         ENDIF
      ENDIF
      IF (RECNO('POFLN')=LNMPOEND)
         IF LLRPPRTPN
            APPEND BLANK
            GATHER MEMVAR MEMO
            REPLACE TRANCD WITH '1', MORDRSPO WITH '', NORDRQTY WITH 0, MORDRNOT WITH '', LENDLINE WITH .T., CRECORD WITH 'N2', ORDER WITH ''
            IF  .NOT. EOF('NOTEPAD_A')
               REPLACE LENDLINE WITH .T.
            ELSE
               REPLACE LENDLINE WITH .F.
            ENDIF
         ENDIF
      ENDIF
      SELECT POFLN
   ENDIF
ENDSCAN
WAIT CLEAR
IF LLWORKDEAL
   SELECT (LCPOMATFIL)
   SET RELATION TO
   SET SKIP TO
   LCRPEXP = '.T.'
ENDIF
SELECT POFHDR
SET SKIP TO
SET RELATION OFF INTO POFLN
*SELECT (LCDETTMP)
SELECT (LCDETTMP1)
SET RELATION TO LCRPFORM+POMAT+FABRIC+COLOR+TRANCD INTO POFLN ADDITIVE
SET RELATION TO LCRPFORM+POMAT INTO POFHDR ADDITIVE
LOCATE
LCRPEXP = '.T.'
RETURN

PROCEDURE LFCRTMPFLS
PRIVATE LNALIAS
LNALIAS = 0
LNALIAS = SELECT(0)
SELECT MAPOALO
= AFIELDS(LAMLNTMP)
LNNEWFLD = ALEN(LAMLNTMP,1)
DIMENSION LAMLNTMP[ LNNEWFLD+7, 4]
LAMLNTMP[ LNNEWFLD+1, 1] = 'cMatType'
LAMLNTMP[ LNNEWFLD+1, 2] = 'C'
LAMLNTMP[ LNNEWFLD+1, 3] = 1
LAMLNTMP[ LNNEWFLD+1, 4] = 0
LAMLNTMP[ LNNEWFLD+2, 1] = 'TranCd'
LAMLNTMP[ LNNEWFLD+2, 2] = 'C'
LAMLNTMP[ LNNEWFLD+2, 3] = 1
LAMLNTMP[ LNNEWFLD+2, 4] = 0
LAMLNTMP[ LNNEWFLD+3, 1] = 'mOrdrSpo'
LAMLNTMP[ LNNEWFLD+3, 2] = 'M'
LAMLNTMP[ LNNEWFLD+3, 3] = 60
LAMLNTMP[ LNNEWFLD+3, 4] = 0
LAMLNTMP[ LNNEWFLD+4, 1] = 'nOrdrQty'
LAMLNTMP[ LNNEWFLD+4, 2] = 'N'
LAMLNTMP[ LNNEWFLD+4, 3] = 11
LAMLNTMP[ LNNEWFLD+4, 4] = 3
LAMLNTMP[ LNNEWFLD+5, 1] = 'mOrdrNot'
LAMLNTMP[ LNNEWFLD+5, 2] = 'M'
LAMLNTMP[ LNNEWFLD+5, 3] = 60
LAMLNTMP[ LNNEWFLD+5, 4] = 0
LAMLNTMP[ LNNEWFLD+6, 1] = 'lEndLine'
LAMLNTMP[ LNNEWFLD+6, 2] = 'L'
LAMLNTMP[ LNNEWFLD+6, 3] = 1
LAMLNTMP[ LNNEWFLD+6, 4] = 0
LAMLNTMP[ LNNEWFLD+7, 1] = 'cRecord'
LAMLNTMP[ LNNEWFLD+7, 2] = 'C'
LAMLNTMP[ LNNEWFLD+7, 3] = 2
LAMLNTMP[ LNNEWFLD+7, 4] = 0
*CREATE DBF (GCWORKDIR+LCDETTMP) FROM ARRAY LAMLNTMP
CREATE DBF (GCWORKDIR+LCDETTMP1) FROM ARRAY LAMLNTMP
*= GFOPENFILE(GCWORKDIR+LCDETTMP,'','EX')
= GFOPENFILE(GCWORKDIR+LCDETTMP1,'','EX')
*INDEX ON CMATTYPE+POMAT+FABRIC+COLOR+TRANCD TAG LCDETTMP
INDEX ON CMATTYPE+POMAT+FABRIC+COLOR+TRANCD TAG LCDETTMP1
SELECT (LNALIAS)

FUNCTION  LFGETNOTES
PARAMETER LCPRAM
IF LLEXTERNAL
   RETURN ''
ENDIF
STORE '' TO LCTITLE, LCNOTES
*IF &lcDetTmp..cRecord = 'N1'
IF &lcDetTmp1..cRecord = 'N1'
   IF LLRPPRTMN .AND. (RECNO('POFLN')=LNFABEND) .AND.  .NOT. EMPTY(ALLTRIM(NOTEPAD.MNOTES))
      LCTITLE = 'Item  '+POFLN.FABRIC+' Notepad'
      LCNOTES = ALLTRIM(NOTEPAD.MNOTES)
   ENDIF
ELSE
   IF LLRPPRTPN .AND. (RECNO('POFLN')=LNMPOEND) .AND.  .NOT. EMPTY(ALLTRIM(NOTEPAD_A.MNOTES))
      LCTITLE = IIF(POFHDR.CMATTYPE='P','Purchase Order ',IIF(POFHDR.CMATTYPE='R','Return Purchase Order ','Contract '))+'Notepad'
      LCNOTES = ALLTRIM(NOTEPAD_A.MNOTES)
   ENDIF
ENDIF
RETURN ''

FUNCTION  LFGETNOTS2
PARAMETER LCPRAM
IF LLEXTERNAL
   RETURN ''
ENDIF
PRIVATE LNALIAS, LNRECNO
LNALIAS = SELECT(0)
STORE '' TO LCNOTES2
STORE 1 TO LNRECNO
LLPRINTLIN = .F.
= LFMPOEND()
DO CASE
   CASE  .NOT. LLRPPRTPN .AND.  .NOT. LLRPPRTMN
      LLPRINTLIN = .T.
   *CASE llRpPrtPn .AND. llRpPrtMn .AND. &lcDetTmp..cRecord ='N2'
   CASE llRpPrtPn .AND. llRpPrtMn .AND. &lcDetTmp1..cRecord ='N2'
      LLPRINTLIN = .T.
   *CASE llRpPrtPn .AND. !llRpPrtMn .AND. &lcDetTmp..cRecord ='N2'
   CASE llRpPrtPn .AND. !llRpPrtMn .AND. &lcDetTmp1..cRecord ='N2'   
      LLPRINTLIN = .T.
   *CASE llRpPrtMn .AND. !llRpPrtPn .AND. &lcDetTmp..cRecord ='N1'
   CASE llRpPrtMn .AND. !llRpPrtPn .AND. &lcDetTmp1..cRecord ='N1'   
      LLPRINTLIN = .T.
ENDCASE
IF (RECNO('POFLN')=LNMPOEND) .AND. LLPRINTLIN
   LNRECNO = RECNO('NOTEPAD')
   DO CASE
      CASE ALLTRIM(APVENDOR.CVENGRP1)='F'
         IF SEEK('TMATPOF','NOTEPAD') .AND.  .NOT. EMPTY(ALLTRIM(NOTEPAD.MNOTES))
            LCNOTES2 = (ALLTRIM(NOTEPAD.MNOTES))
         ENDIF
      CASE ALLTRIM(APVENDOR.CVENGRP1)='T'
         IF SEEK('TMATPOT','NOTEPAD') .AND.  .NOT. EMPTY(ALLTRIM(NOTEPAD.MNOTES))
            LCNOTES2 = (ALLTRIM(NOTEPAD.MNOTES))
         ENDIF
      CASE EMPTY(ALLTRIM(APVENDOR.CVENGRP1))
         IF SEEK('TMATPO','NOTEPAD') .AND.  .NOT. EMPTY(ALLTRIM(NOTEPAD.MNOTES))
            LCNOTES2 = (ALLTRIM(NOTEPAD.MNOTES))
         ENDIF
   ENDCASE
   IF BETWEEN(LNRECNO,1,RECCOUNT('NOTEPAD'))
      GOTO IN ('NOTEPAD') LNRECNO
   ENDIF
ENDIF
SELECT (LNALIAS)

FUNCTION  LFITMPOS
PARAMETER LCITMINFLT
PRIVATE LNITMPOS
LNITMPOS = ASCAN(LAOGVRFLT,LCITMINFLT)
IF LNITMPOS>0
   LNITMPOS = ASUBSCRIPT(LAOGVRFLT,LNITMPOS,1)
ENDIF
RETURN LNITMPOS
*
