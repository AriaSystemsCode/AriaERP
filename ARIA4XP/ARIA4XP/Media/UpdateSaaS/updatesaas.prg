****************************************************************************************************
* Program : updateSaaS 
* Purpose : copy all files in the SYSFILES or SQLDICTIONARY from the shared SaaS folder to the clients' folders
* Dev.    : MAB - Mohamad Badran
* App     : Aria SaaS A27,A4xp
****************************************************************************************************
*- Modification
*E302987,1 TMI 11/03/2011 Enable calling the CLIENTS.SCX in the case of A27 update
****************************************************************************************************

*E302987,1 TMI 11/03/2011 [Start] comment this part as it is already called from UPDATESAAS40
*!*	_SCReen.Visible = .F. 
*!*	 LOCAL lcsetofdefault
*!*	 lcsetofdefault = ADDBS(JUSTPATH(SYS(16)))
*!*	 SET DEFAULT TO (lcsetofdefault)
*!*	 DO updatesaas WITH "A40"
*!*	 RETURN .T.
*E302987,1 TMI 11/03/2011 [End  ] 

*-- Objectives: Copying system files generated by splitting to all client sysfiles
*-- BADRAN 03/27/2011

FUNCTION updatesaas
 LPARAMETERS cversion
 PRIVATE lcsaftysetting, lcdelsetting
 lcsaftysetting = SET("Safety")
 lcdelsetting = SET("Deleted")
 SET SAFETY Off
 SET DELETED ON
 LOCAL lcextrapath, lcsharedfolder, lclocalsyspath, lcrelease, llupdatexml
 lcsharedfolder = UPPER(ADDBS(FULLPATH(SET("Default"))))
 IF FILE(lcsharedfolder+"SaaSInstallLog.dbf")
    ERASE (lcsharedfolder+"SaaSInstallLog.dbf")
 ENDIF
 CREATE TABLE (lcsharedfolder+"SaaSInstallLog.dbf") (stepid CHAR (2), clientid CHAR (10), logdesc CHAR (200), passed L)
 lclocalsyspath = lcsharedfolder+IIF(cversion=="A27", "SYSFILES\", "SQLDICTIONARY\")
 IF  .NOT. DIRECTORY(lclocalsyspath)
    = addloginfo("01", "", "Invalid installation.", .F.)
    RETURN clearall()
 ENDIF
 TRY
    IF (cversion=="A27")
      *E302987,1 TMI 11/03/2011 [Start] 
      lcClients = 'X'+SUBSTR(SYS(2015),2,7)
      *E302987,1 TMI 11/03/2011 [End  ] 
       IF FILE(lcsharedfolder+"CLIENTS.DBF")
          TRY
             *E302987,1 TMI 11/03/2011 [Start] 
             *USE SHARED lcsharedfolder+"CLIENTS.DBF" IN 0
             SELECT 0 as lSelect,* FROM lcsharedfolder+"CLIENTS.DBF" INTO TABLE lcsharedfolder+"Work\"+lcClients
             USE IN CLIENTS
             SELECT &lcClients
             USE (lcsharedfolder+"Work\"+lcClients) ALIAS CLIENTS
             *E302987,1 TMI 11/03/2011 [End  ] 
          CATCH
             = addloginfo("01", "", "Invalid Clients table", .F.)
             RETURN clearall()
          ENDTRY
       ELSE
          = addloginfo("01", "", "Non-SaaS, Client table doesn't exist.", .F.)
          RETURN clearall()
       ENDIF
       lcrelease = ""
       lcextrapath = "SYSFILES\"
    ELSE
       LOCAL loa5ariaenvironment, lnconnecthandle, lcsysflconnect, lnsqlget

        LOCAL lnDispLogin
       lnDispLogin = SQLGETPROP(0,"DispLogin")
       TRY
          loa5ariaenvironment = CREATEOBJECT('Aria.Environment.AriaEnviromentVariables')
          = SQLSETPROP(0, "DispLogin", 3)
          lcsysflconnect = loa5ariaenvironment.aria50systemfilesconnectionstringodbc
          lnconnecthandle = SQLSTRINGCONNECT(lcsysflconnect)
          IF lnconnecthandle<=0
             = addloginfo("02", "", "Could not connect to SQL System Files. Either System.Master doesn't exist or invalid SQL creditials.", .F.)
             loa5ariaenvironment = .NULL.
             
             RETURN clearall()
          ENDIF
       CATCH
          = addloginfo("02", "", "Could not connect to SQL System Files. Either System.Master doesn't exist or invalid SQL creditials.", .F.)
          RETURN clearall()
       ENDTRY
       = SQLSETPROP(0,"DispLogin",lnDispLogin)

       TRY
          *mmt
          *lnsqlget = SQLEXEC(lnconnecthandle, "Select * From Clients", "CLIENTS")
          lnsqlget = SQLEXEC(lnconnecthandle, "Select 0 as lSelect,* From Clients  Order by CClientID", "CLIENTS")
          *mMt
       CATCH
          = addloginfo("01", "", "Non-SaaS, Client table doesn't exist in System.Master database.", .F.)
          RETURN clearall()
       ENDTRY
       lcrelease = ""
       IF FILE(lcsharedfolder+"InstallLog.xml")
          TRY
             XMLTOCURSOR(lcsharedfolder+"InstallLog.xml", "InstallLogCursor", 512)
             lcrelease = installlogcursor.a4release
          CATCH
             = addloginfo("06", "", "Install log file does not exist.", .F.)
          ENDTRY
       ENDIF
       lcextrapath = "ARIA4XP\SQLDICTIONARY\"
    ENDIF
    *mMt
    *E302987,1 TMI 11/03/2011 [Start] add version parameter
    *DO FORM clients WITH "CLIENTS" 
    DO FORM clients WITH "CLIENTS",cversion
    *E302987,1 TMI 11/03/2011 [End  ] 
    READ EVENTS
    *mmt
    SELECT clients
    *mmt
    *LOCATE 
    *IF EOF()
    *       = addloginfo("03", "", "Non-SaaS, Clients table is empty.", .F.)
    LOCATE FOR lSelect=1
    IF !FOUND()
       = addloginfo("03", "", "Non-SaaS, Clients table is empty. OR You have not select client to update", .F.)
    *mmt       
       RETURN clearall()
    ENDIF
    LOCAL lcclientsyspath
    *MT
    *SCAN
    SCAN FOR lSelect=1
      WAIT WINDOW "Updating client :"+clients.CClientID NOWAIT
    *MT
       lcclientsyspath = ADDBS(UPPER(ALLTRIM(cdatapath)))+lcextrapath
       IF DIRECTORY(lcclientsyspath)
          TRY
             IF (lcclientsyspath<>lclocalsyspath)
                IF (cversion=="A27")
                   = copypermodule(lclocalsyspath, lcclientsyspath)
                ELSE
                   COPY FILE (lclocalsyspath+"*.DBF") TO (lcclientsyspath+"*.DBF")
                   COPY FILE (lclocalsyspath+"*.CDX") TO (lcclientsyspath+"*.CDX")
                   COPY FILE (lclocalsyspath+"*.FPT") TO (lcclientsyspath+"*.FPT")                                      
                   COPY FILE (lclocalsyspath+"ARIA4XP.TXT") TO (lcclientsyspath+"ARIA4XP.TXT")   
                   *MT Copy Aria27 sysfiles folder
                   lcAria27ClientPath = ADDBS(UPPER(ALLTRIM(cdatapath)))+'ARIA27\SYSFILES\'
                   lcSharedSys = ADDBS(lcsharedfolder)+"SYSFILES\"
                   = copypermodule(lcSharedSys , lcAria27ClientPath)
                   IF FILE(lcSharedSys +'a4sysupd.exe')
                     COPY FILE (lcSharedSys +'a4sysupd.exe') TO (lcAria27ClientPath+'a4sysupd.exe')
                   ENDIF
                   IF FILE((ADDBS(lcsharedfolder)+'A4_Release12.XML'))
                     COPY FILE (ADDBS(lcsharedfolder)+'A4_Release12.XML') TO (ADDBS(UPPER(ALLTRIM(cdatapath)))+"ARIA4XP\"+'A4_Release12.XML')
                   ENDIF
                   *MT
                ENDIF
             ENDIF
             = addloginfo("10", ALLTRIM(cclientid), "Folder("+lcclientsyspath+") for Client("+ALLTRIM(cclientid)+") successfully copied.", .T.)
             TRY
                IF  .NOT. EMPTY(lcrelease)
                   COPY FILE (lcsharedfolder+"InstallLog.xml") TO (lcclientsyspath+"A4Release_"+ALLTRIM(STR(lcrelease))+".XML")
                   llupdatexml = .T.
                ENDIF
             CATCH
                = addloginfo("06", ALLTRIM(cclientid), "Unable to copy EDI install log to folder("+lcclientsyspath+") for Client("+ALLTRIM(cclientid)+".", .F.)
             ENDTRY
          CATCH
             = addloginfo("05", ALLTRIM(cclientid), "Can't copy Folder("+lcclientsyspath+") for Client("+ALLTRIM(cclientid)+").", .F.)
          ENDTRY
       ELSE
          = addloginfo("04", ALLTRIM(cclientid), "Folder("+lcclientsyspath+") for Client("+ALLTRIM(cclientid)+") does not exist.", .F.)
       ENDIF
    ENDSCAN
    *MT
     IF (cversion<>"A27")
      WAIT WINDOW "Renaming sysfiles folders...." NOWAIT
      IF !DIRECTORY(ADDBS(lcsharedfolder)+"SAAS_SYSFILES\")
        MD (ADDBS(lcsharedfolder)+"SAAS_SYSFILES\")
      ENDIF
      COPY FILE (ADDBS(lcsharedfolder)+"SYSFILES\"+'*.*') TO (ADDBS(lcsharedfolder)+"SAAS_SYSFILES\"+'*.*')
      ERASE (ADDBS(lcsharedfolder)+"SYSFILES\"+'*.*')
      RD (ADDBS(lcsharedfolder)+"SYSFILES\")
      
      IF !DIRECTORY(ADDBS(lcsharedfolder)+"SAAS_SQLDICTIONARY\")
        MD (ADDBS(lcsharedfolder)+"SAAS_SQLDICTIONARY\")
      ENDIF
      COPY FILE (ADDBS(lcsharedfolder)+"SQLDICTIONARY\"+'*.*') TO (ADDBS(lcsharedfolder)+"SAAS_SQLDICTIONARY\"+'*.*')
      ERASE (ADDBS(lcsharedfolder)+"SQLDICTIONARY\"+'*.*')
      RD (ADDBS(lcsharedfolder)+"SQLDICTIONARY\")
      
    ENDIF
    *MT
 CATCH
    = addloginfo("99", "", "Un-Defined error occured", .F.)
 ENDTRY
 IF llupdatexml
    SELECT *, "YES" AS donotapply FROM InstallLogCursor INTO CURSOR NewInstallLog
    CURSORTOXML("NewInstallLog", lcsharedfolder+"InstallLog.xml", 1, 512)
 ENDIF
 RETURN clearall()
ENDFUNC
**
PROCEDURE AddLogInfo
 LPARAMETERS cstepid, cclientid, clogdesc, lpassed
 INSERT INTO SaaSInstallLog (stepid, clientid, logdesc, passed) VALUES (cstepid, cclientid, clogdesc, lpassed)
ENDPROC
**
FUNCTION ClearAll
 IF USED("SaaSInstallLog")
    USE IN saasinstalllog
 ENDIF
 IF USED("CLIENTS")
    USE IN clients
 ENDIF
 IF USED("InstallLogCursor")
    USE IN installlogcursor
 ENDIF
 IF USED("NewInstallLog")
    USE IN newinstalllog
 ENDIF
 SET SAFETY &lcsaftysetting.
 SET DELETED &lcdelsetting.
 RETURN .T.
ENDFUNC
**
PROCEDURE CopyPerModule
 LPARAMETERS lclocalsyspath, lcclientsyspath
 LOCAL lcsetofdefault, lnselect
 lnselect = SELECT(0)
 lcsetofdefault = FULLPATH(SET("Default"))
 SET DELETED ON
 SET DEFAULT TO (lclocalsyspath)
 USE SHARED (lcclientsyspath+"sydappl.dbf") ORDER CAPP_ID IN 0
 SELECT sydappl
 LOCAL ladir, lnfls, lnflindex, lcleft
 DIMENSION ladir[1, 5]
 lnfls = ADIR(ladir, '*.*', 'D')
 FOR lnflindex = 3 TO lnfls
    IF SUBSTR(ladir(lnflindex, 5), 5, 1)='D'
       LOOP
    ENDIF
    lcleft = UPPER(LEFT(ladir(lnflindex, 1), 2))
    IF (lcleft=="XX") .OR. SEEK(lcleft)
       COPY FILE (lclocalsyspath+ladir(lnflindex, 1)) TO (lcclientsyspath+ladir(lnflindex, 1))
    ENDIF
 ENDFOR
 USE IN sydappl
 SET DEFAULT TO (lcsetofdefault)
 SELECT (lnselect)
ENDPROC


