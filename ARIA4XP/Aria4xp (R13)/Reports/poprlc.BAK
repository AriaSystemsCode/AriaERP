*:**************************************************************************
*: Program file  : POPRLC.PRG 
*: Program desc. : Print Letter of Credit
*: System        : Aria Apparel System (A27).
*: Module        : PURCHASE ORDER  (PO),(MA)
*: Developer     : AYMAN MAHMOUD AHMED- (AYM)
*: Date          : 12/20/2006
*:**************************************************************************
*: Calls : FUNCTIONS  :  lfSETLcno , lfAdrShift , lfVendAdd , lfPrntNp
*:                    :     
*:         PROCEDURE  : gfDispRe
*:**************************************************************************
*: Passed Parameters  : None
*:**************************************************************************
*:T20060915.0011      : Convert to Aria4xp
*:Track no            : N000568
*:**************************************************************************
*N000682,1 MMT 02/06/2013 Globalization changes[Start]
#INCLUDE r:\aria4xp\reports\poprlc.h
*N000682,1 MMT 02/06/2013 Globalization changes[End]
 STORE '' TO ICLCODE

DIMENSION laVenAdd[5]
STORE SPACE(0) TO laVenAdd

DIMENSION laCompAdd[5]
laCompAdd = ''

SELECT SYCCOMP
=SEEK(oAriaApplication.ActiveCompanyID)
laCompAdd[1] = gfGetAdr('Syccomp' , '' , '' , '' , 1)
laCompAdd[2] = gfGetAdr('Syccomp' , '' , '' , '' , 2)
laCompAdd[3] = gfGetAdr('Syccomp' , '' , '' , '' , 3)
laCompAdd[4] = gfGetAdr('Syccomp' , '' , '' , '' , 4)
laCompAdd[5] = gfGetAdr('Syccomp' , '' , '' , '' , 5)
=lfAdrShift('laCompAdd')
*!*	SELECT LC
*!*	GO TOP
*!*	= lfVendAdd()

*Check lc NUMBER
lcLcCond=' .t. '

lclcFltr= lfCheckFilter(1, 'LC.CLCNO')
lllcFltr   = !EMPTY(lclcFltr) AND USED(lclcFltr) AND RECCOUNT(lclcFltr) > 0
IF lllcFltr   
  SELECT (lclcFltr)
  INDEX ON CLCNO  TAG (lclcFltr)
  lcLcCond=lcLcCond+" AND SEEK(CLCNO ,'"+lclcFltr+"')"
ELSE
  IF TYPE("lclcFltr") = "C" AND USED(lclcFltr)
    USE IN (lclcFltr)
  ENDIF
  lclcFltr= ''
ENDIF

SELECT LC
=SEEK('')
loOGScroll.cCROrientation = 'P'
DO gfDispRe WITH EVAL('lcRpForm'), 'FOR ' + lcLcCond

*-- End Of Report Code.
*:**************************************************************************
*-- Functions and Procedures :
*:**************************************************************************
*! Name      : lfWhenGrid()    
*! Developer : ABDOU ELGENDI
*! Date      : 06/13/1999
*! Purpose   : To Set When running the Option Grid.
*!*************************************************************
*! Called from : Option Grid
*! Passed Parameters : None
*:**************************************************************************
*! Return      : None
*:**************************************************************************
*! Example     : =lfWhenGrid()    
*:**************************************************************************

FUNCTION lfWhenGrid
=lfSETLcno()
*-- End Of lfWhenGrid.
*:**************************************************************************
*! Name      : lfSETLcno
*! Developer : ABDOU ELGENDI
*! Date      : 06/13/1999
*! Purpose   : TO SET ORDER TO TAGs When Running The Option Grid
*:**************************************************************************
*! Called from : Option Grid
*:**************************************************************************
*! Calls       : ......
*:**************************************************************************
*! Passed Parameters : None
*:**************************************************************************
*! Return      : None
*:**************************************************************************
*! Example     : =lfSETLcno()
*:**************************************************************************
*
FUNCTION lfSETLcno 
PARAMETERS OpGrdParm
   SET ORDER TO TAG lc       IN lc
   SET ORDER TO TAG Ccomp_id IN Syccomp
   SET ORDER TO TAG Vencode  IN APVENDOR
   SET ORDER TO TAG Notepad  IN Notepad 
*-- End Of lfSETLcno 
*:**************************************************************************
*! Name      : lfAdrShift
*! Developer : ABDOU ELGENDI
*! Date      : 06/14/99
*! Purpose   : used to shift the lacompadd array
*:**************************************************************************
*! Calls     : 
*!             Procedures : ....
*!             Functions  : ....
*:**************************************************************************
*! Called from : variable from report POPRLC.frx 
*:**************************************************************************
*! Passed Parameters  : lcArrayNam
*:**************************************************************************
*! Returns            : None
*:**************************************************************************
*! Example   : = lfAdrShift()
*:**************************************************************************
*
FUNCTION lfAdrShift

PARAMETERS lcArrayNam
FOR lnCount = 1 TO 6
  
*--IF The current Array element is of type character and empty
 IF TYPE(lcArrayNam + "[" + STR(lnCount , 1) + "]") = "C" .AND.;
   EMPTY(&lcArrayNam.[lnCount])
   =ADEL(&lcArrayNam , lnCount)
   lnCount = lnCount - 1
 ENDIF    && End of IF
ENDFOR    && End of FOR Loop

*--FOR Loop to loop the Address Array
FOR lnCount = 1 TO ALEN(&lcArrayNam)
*--IF The current Array element is not of type character
  IF TYPE(lcArrayNam + "[" + STR(lnCount , 1) + "]") <> "C"
    &lcArrayNam.[lnCount] = ''
  ENDIF    && End of IF
ENDFOR    && End of FOR Loop
*-- End Of lfAdrShift
*:**************************************************************************
*! Name      : lfVendAdd
*! Developer : ABDOU ELGENDI
*! Date      : 06/14/99
*! Purpose   : To Get The Address For every Vendor
*! Called from : variable from report POPRLC.frx 
*:**************************************************************************
*! Passed Parameters  : ........
*:**************************************************************************
*! Returns            : None
*:**************************************************************************
*! Example   : = lfVendAdd()
*:**************************************************************************
*
FUNCTION lfVendAdd

=SEEK(lc.Vendor,'APVendor')
laVenAdd[1] = gfGetAdr('APVendor' , '' , '' , '' , 1)
laVenAdd[2] = gfGetAdr('APVendor' , '' , '' , '' , 2)
laVenAdd[3] = gfGetAdr('APVendor' , '' , '' , '' , 3)
laVenAdd[4] = gfGetAdr('APVendor' , '' , '' , '' , 4)
laVenAdd[5] = gfGetAdr('APVendor' , '' , '' , '' , 5)
=lfAdrShift('laVenAdd')

RETURN ''
*-- End Of lfVendAdd
*:**************************************************************************
*! Name      : lfPrntNp
*! Developer : ABDOU ELGENDI
*! Date      : 06/14/99
*! Purpose   : To Print The Note Pad In The End of Every Report
*! Called from : variable from report POPRLC.frx 
*:**************************************************************************
*! Passed Parameters  : .........
*:**************************************************************************
*! Returns            : None
*:**************************************************************************
*! Example   : = lfPrntNp()
*:**************************************************************************
*
FUNCTION lfPrntNp

STORE '' TO   lcNotes , lcEXP
  IF !EMPTY (lC.Expire)
    *N000682,1 MMT 02/06/2013 Globalization changes[Start]
    *lcEXP = "EXPIRE :" + DTOC(LC.Expire)    
    lcEXP = LANG_EXPIRE+ DTOC(LC.Expire)
    *N000682,1 MMT 02/06/2013 Globalization changes[End]
  ENDIF
  *N000682,1 MMT 02/06/2013 Globalization changes[Start]
*!*	  lcNotes = "LC # " + LC.Clcno + CHR(13) + "Date :" + DTOC(LC.Created) +;
*!*	            CHR(13) + lcEXP + CHR(13) + "*--- N o t e  P a d ---*" +;
*!*	            CHR(13) + NOTEPAD.mNotes
  lcNotes = LANG_LCNO+" " + LC.Clcno + CHR(13) + LANG_DATE+ DTOC(LC.Created) +;
            CHR(13) + lcEXP + CHR(13) + LANG_NOTEPAD+;
            CHR(13) + NOTEPAD.mNotes
  *N000682,1 MMT 02/06/2013 Globalization changes[End]            
RETURN lcNotes
*-- End Of lfPrntNp
*:**************************************************************************
*************************************************************
*! Name      : lfCheckFilter
*! Developer : Saeed Mohammed (SMM)
*! Date      : 09/07/2004
*! Purpose   : Check if the filter was selected
*!*************************************************************
FUNCTION lfCheckFilter
LPARAMETERS lnArrayType, lcFilter
LOCAL lcReturn, lnPOS   
DO CASE
  CASE lnArrayType = 1
    lnPOS = ASCAN(loOgScroll.laOGFxFlt,lcFilter) 
    IF lnPos > 0
      lnPOS    = ASUBSCRIPT(loOgScroll.laOGFxFlt,lnPos,1)
      lcReturn = loOgScroll.laOGFxFlt[lnPOS,6]    
    ELSE
      lcReturn = ""     
    ENDIF
  CASE lnArrayType = 2
    lnPOS = ASCAN(loOgScroll.laOGHDFlt,lcFilter) 
    IF lnPos > 0
      lnPOS    = ASUBSCRIPT(loOgScroll.laOGHDFlt,lnPos,1)
      lcReturn = loOgScroll.laOGHDFlt[lnPOS,6]    
    ELSE
      lcReturn = ""     
    ENDIF
  CASE lnArrayType = 3  
    lnPOS = ASCAN(loOgScroll.laOGvrFlt,lcFilter) 
    IF lnPos > 0
      lnPOS    = ASUBSCRIPT(loOgScroll.laOGvrFlt,lnPos,1)
      lcReturn = loOgScroll.laOGvrFlt[lnPOS,6]    
    ELSE
      lcReturn = ""     
    ENDIF
  OTHERWISE
    lcReturn = ""
ENDCASE

RETURN lcReturn
