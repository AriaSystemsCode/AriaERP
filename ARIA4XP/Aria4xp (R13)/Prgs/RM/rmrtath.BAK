*:************************************************************************
*: Program file  : RMRTATH.PRG
*: Program desc. : RETURN AUTHORIZATION.
*: For screen    : RMRTATH.SCX
*: System        : ARIA4
*: Module        : Returns Merchandise Module
*: Developer     : Ahmad Shoukry Mohammed (ASM)
*:*************************************************************
*: Parameters    : lcRetAth --> R/A #
*:*************************************************************
*! Modifications :
*! B999999,1 ASM 06/13/2005 Read Lines For Consolidated Invoice even when No Store was Specified
*! B608234,1 WAM 08/23/2007 Browse shifts lines up when add new line
*! B608275,1 MMT 09/23/2007 put default location the first location in locations combobox[T20070830.0011]
*! B608520,1 WAM 04/17/2008 Remove decimal points from RA quantity [T20080326.0014]
*! B608545,1 WAM 05/08/2008 Don't generate new line# for modified lines [T20080408.0002]
*! B608974,1 MMT 08/18/2009 Fix bug of can add style if Style Segment entry setups is set to yes [T20090805.0008]
*! B609120,1 MMT 12/30/2009 Fix bug of padding RA# with 0'S [T20091217.0017]
*! B609217,1 WAM 04/22/2010 Restrict sales orders to selected account/store [T20100420.0005]
*! E302734,1 MMT 08/23/2010 Modify Screen to be called from the Customer screen Task Pane[T20100307.0001]
*! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[T20100804.0005]
*! B609464,1 MMT 11/22/2010 Error while saving RA has no lines after editing it[T20101028.0017]
*! C201291,1 MMT 11/25/2010 Customization for OSP00 to add PO# per RA line[T20101020.0023]
*! B609577,1 WAM 05/03/2011 Enhance the performace of invoice browse [T20110407.0043]
*! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[T20110328.0001]
*! E303029,1 MMT 12/26/2011 correct the calling of non-major programs within the SaaS environemnt[T20100922.0014]
*************************************************************************
*! E302734,1 MMT 08/23/2010 Modify Screen to be called from the Customer screen Task Pane[Start]
*!*	PARAMETERS lcRetAth
*!*	  DO FORM (oAriaApplication.ScreenHome+"\RM\RMRTATH.SCX") WITH lcRetAth
PARAMETERS lcRetAth,lcAccount,lcStore
*! E303029,1 MMT 12/26/2011 correct the calling of non-major programs within the SaaS environemnt[START]
*N000682,1 MMT 11/22/2012 Globalization changes[Start]
#INCLUDE r:\aria4xp\screens\rmcrmem.h
*N000682,1 MMT 11/22/2012 Globalization changes[END]

*DO FORM (oAriaApplication.ScreenHome+"\RM\RMRTATH.SCX") WITH lcRetAth,lcAccount,lcStore
 =gfCallForm('RMRTATH','RM',"lcRetAth,lcAccount,lcStore")
*! E303029,1 MMT 12/26/2011 correct the calling of non-major programs within the SaaS environemnt[END]
*! E302734,1 MMT 08/23/2010 Modify Screen to be called from the Customer screen Task Pane[End]
RETURN


DEFINE CLASS PRG AS Custom

  *lcRetAth = m.lcRetAth
  loFormSet=.F.
  loForm=.F.

  llEdit = .T.
  llDelete = .T.
  llNotes = .T.
  llObjectLink = .F.

  llCrmIns = IIF('CR' $ oAriaApplication.CompanyInstalledModules,.T.,.F.)

  *-- Array hold the status text
  DECLARE laStatus[4]
  laStatus[1] = "Open"
  laStatus[2] = "Completed"
  laStatus[3] = "Canceled"
  laStatus[4] = "Electronic"

  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  *-- Array hold Consolidated Invoice Orders
  DECLARE laConsInvOrdrs[1]
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

  *-- Var. hold the browse titles.
  lcBrowttl  = "R/A Lines"

  *-- Var. hold the temp. R/A lines file.
  lcTmpRetLn = ""
  lcRCurAlis = ""
  lcKeyRet   = ""

  lnPstRate  = 0         && To hold the PST rate.
  lnCusPstRt = 0         && To hold the default PST rate.

  lcName = ''
  lcFName = ''
  lcStatus = ''
  lcFaddres1 = ''
  lcFaddres2 = ''
  lcFaddres3 = ''
  lcFaddres4 = ''
  lcFaddres5 = ''
  lcTaddres1 = ''
  lcTaddres2 = ''
  lcTaddres3 = ''
  lcTaddres4 = ''
  lcTaddres5 = ''
  lcStyle = ''
  lcDesc = ''
  lcTaxName = ''
  lcReason = ''
  lcCustPLvl = ''
  lcDyeLot = ''
  lcConsol = ''
  lcDefWare = ''
  lcRa_LinNo = ''

  lcWarStat = "DISABLE"
  lcInqStat = "DISABLE"
  lcNewStat = "DISABLE"
  lcLinStat = "DISABLE"
  lcDivStat = "DISABLE"
  lcCurStat = "DISABLE"
  lcExRStat = "DISABLE"
  lcEntrStat = "DISABLE"
  lcRelStat = "DISABLE"
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  lcOrdStat = "DISABLE"
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]
  lcDyeStat = "DISABLE"
  lcObjStat = "DISABLE"
  lcInvStat = "DISABLE"
  *Define variable to control the enabling & disabling of the account field.
  lcAccStat = "ENABLE"

  llTaxYes = .F.
  llMultiWH = .F.
  llDyelot = .F.
  llGlLink = .F.
  llBased = .F.
  llIsCanada = .F.
  llMulCurr = .F.
  llEditExRt = .F.

  *-- Array hold all the available warehouses.
  DECLARE laWareHous[1,2]
  puWareHous = 1

  DECLARE laSize[8] , laQtyStk[8]
  laSize     = ""
  laQtyStk   = 0
  lcStyHdr   = ""
  lnStyLngth = 0

  lnTotQty = 0
  lnprice = 0
  lnTotal = 0
  lnMarker = 0
  lnLine = 0
  lnNoOfLines = 0
  lnScale = 0
  lcScale = ""
  lnDefTaxRt = 0
  lnTaxRate = 0
  lnDiscPCnt = 0
  lnRa_LinNo = 0
  lnTaxzamt = 0

  llBrowse = .F.
  cbComplete = .F.
  llUpdate = .F.
  *Define a flag to know if entered the detail folder or not yet.
  llEnterDet = .F.

  lcCurrCode = oAriaApplication.BaseCurrency &&  Variable to hold currency code.
  lnExRate   = 1          &&  Variable to hold exchange rate.
  lnCurrUnit = 1          &&  Variable to hold currency unit.
  lcUntSin   = '/'        &&  Variable to hold unit sign.
  lcExRSin   = '/'        &&  Variable to hold exchange rate sign.

  llReBrowse = .T.    && Flag to know if execute the browse or not.
  llAddMode  = .F.    && Flag to know if entered the add mode or not.
  llCUpDate  = .F.    && Flag to determine if there is something changed in the screen.

  lnReson1 = 1
  lnReson2 = 1
  lnDiv = 1

  llAlowNew = .T.     && Flag to allow adding new credit memos.
  llNoShow  = .F.     && Flag to force the execution of the show procedure.

  *N038891,1 KHM 01/26/2006 [Start]
  cExtendedSizeScaleTempFile = ''
  *N038891,1 KHM 01/26/2006 [End]

  *!*************************************************************
  *! Name      : lpInit
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Init Event of the FormSet
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : True / Flase
  *!*************************************************************
  FUNCTION lfInit
  LPARAMETERS loFrm
    SET MULTILOCKS ON
    SET DELETED ON

    This.loForm = loFrm
    This.loFormSet = loFrm.Parent
    IF This.llCrmIns
      This.lfopenfile(oAriaApplication.DataDir+'CRMesag',oAriaApplication.DataDir+'TransType')
    ENDIF

    *-- Prepare the R/A line temp. file.
    This.lcTmpRetLn = gfTempName()

    *N038891,1 KHM 01/26/2006 [Start]
    This.cExtendedSizeScaleTempFile = gfTempName()
    *N038891,1 KHM 01/26/2006 [End]

    This.lcRCurAlis = IIF(This.loFormSet.ActiveMode="V" ,'RALINE',This.lcTmpRetLn)
    This.lcKeyRet   = IIF(This.loFormSet.ActiveMode="V" ,"KEY RetAuth.rano" ,"")
    IF !(This.lfopenfile('RETAUTH','RETAUTH') AND This.lfopenfile('RALINE','RALINE') AND ;
       This.lfopenfile('CUSTOMER','CUSTOMER') AND This.lfopenfile('CODES','CCODE_NO') AND ;
       This.lfopenfile('SCALE','SCALE') AND This.lfopenfile('STYLE','STYLE') AND ;
       This.lfopenfile('WAREHOUS','WAREHOUS'))
      RETURN .F.
    ENDIF
    WITH This.loFormSet
      .DataEnvironment.InitialSelectedAlias = 'RETAUTH'
      .cbrowsetabledbengine   = 'SQL'
      .cBrowseFileName        = "RETAUTH"
      .cBrowseIndexExpression = "RANO"
      .cBrowseIndexFields     = "RANO"
      .cBrowseIndexName       = "RETAUTH"
      .cBrowseAliasName       = "RETAUTH"
      .cBrowseTableName       = "RETAUTH"

      *WSH [Start]
      .BrowseTitle            = "Return Authorization"
      *WSH [End]

    ENDWITH

    This.lfopenfile(oAriaApplication.SysPath+'SycComp',oAriaApplication.SysPath+'cComp_Id')

    This.lcTaxName  = gfGetMemVar('M_TAX_DESC' , oAriaApplication.ActiveCompanyID)
    This.lcTaxName  = IIF(EMPTY(This.lcTaxName) , 'Gst Tax' , This.lcTaxName)
    This.loForm.PageFrame.Page1.lblTaxName.Caption = This.lcTaxName
    *-- Var. hold the style header.
    This.lcStyHdr   = gfItemMask("HI")
    This.lnStyLngth = LEN(This.lcStyHdr)
    *-- If calculate tax.
    This.llTaxYes   = ALLTRIM(gfGetMemVar('M_TAX',oAriaApplication.ActiveCompanyID))       = 'Y'
    *-- Get the default tax rate from the setup.
    This.lnDefTaxRt = gfGetMemVar('M_TAX_RATE',oAriaApplication.ActiveCompanyID)
    *-- Multi warehouse.
    This.llMultiWH  = ALLTRIM(gfGetMemVar('M_WareHouse',oAriaApplication.ActiveCompanyID)) = 'Y'
    *-- Use Dyelot or not.
    This.llDyelot   = ALLTRIM(gfGetMemVar('M_DYELOT',oAriaApplication.ActiveCompanyID))    = 'Y'
    *ASM, Hide or Display the DyeLot Control, and change to Configuration if needed [Start]
    IF !This.llDyelot
      STORE .F. TO This.loForm.PageFrame.Page2.lblDyeLot.Visible, ;
                   This.loForm.PageFrame.Page2.kbDyeLot.Visible
    ELSE
      IF ALLTRIM(gfGetMemVar('M_STYCNFG',oAriaApplication.ActiveCompanyID)) = 'Y'
        *N000682,1 MMT 11/20/2012 Globalization Changes[Start]
        *This.loForm.PageFrame.Page2.lblDyeLot.Caption = 'Configuration'
        *N000682,1 11/20/2012 MMT Globlization changes[Start]
*This.loForm.PageFrame.Page2.lblDyeLot.Caption =LANG_CreditMemo_HdrConfig
This.loForm.PageFrame.Page2.lblDyeLot.Caption =IIF(oAriaApplication.oActivelang.cLang_ID = "EN",LANG_CreditMemo_HdrConfig,loFormSet.GetHeaderText("LANG_CreditMemo_HdrConfig",loFormSet.HeaderAlias))
*N000682,1 11/20/2012 MMT Globlization changes[End]

        *N000682,1 11/20/2012 MMT Globlization changes[End]

      ENDIF
    ENDIF
    *ASM, Hide or Display the DyeLot Control, and change to Configuration if needed [End]
    *-- See if there is GL link or not.
    This.llGlLink   = ALLTRIM(gfGetMemVar('M_LINK_GL',oAriaApplication.ActiveCompanyID))   = 'Y'
    *-- Sequence on Division or not.
    This.llBased    = ALLTRIM(gfGetMemVar('M_Div_Seq',oAriaApplication.ActiveCompanyID))   = 'Y'
    *-- If country is Canada
    This.llIsCanada = IIF(UPPER(ALLTRIM(oAriaApplication.DefaultCountry)) = 'CANADA', .T., .F.)
    *-- Multi Currency.
    This.llMulCurr  = gfGetMemVar('llMulCurr',oAriaApplication.ActiveCompanyID)
    *-- Edit Exchange rate.
    This.llEditExRt = gfGetMemVar('LLEDITEXRA',oAriaApplication.ActiveCompanyID)

    *-- If multi currency.
    IF This.llMulCurr
      This.lcCurrCode = SPACE(3)   &&  Variable to hold currency code.
      This.lnExRate   = 0          &&  Variable to hold exchange rate.
      This.lnCurrUnit = 0          &&  Variable to hold currency unit.
      This.lcUntSin   = '/'        &&  Variable to hold unit sign.
      This.lcExRSin   = '/'        &&  Variable to hold exchange rate sign.
      IF !USED("SycCurr")
        *-- Open the currency file if was not open.
        This.lfopenfile(oAriaApplication.SysPath+'SycCurr',oAriaApplication.SysPath+'cCurrCode')
      ENDIF
      IF !USED("SycExch")
        *-- Open the exchange file if was not open.
        This.lfopenfile(oAriaApplication.SysPath+'SycExch','')
      ENDIF
    ELSE
      This.lcCurrCode = oAriaApplication.BaseCurrency &&  Variable to hold currency code.
      This.lnExRate   = 1          &&  Variable to hold exchange rate.
      This.lnCurrUnit = 1          &&  Variable to hold currency unit.
      This.lcUntSin   = '/'        &&  Variable to hold unit sign.
      This.lcExRSin   = '/'        &&  Variable to hold exchange rate sign.
    ENDIF
    *-- Fill the warehouse array.
    IF !This.llMultiWH
      SELECT WAREHOUS
      GO TOP
      This.lcDefWare       = WAREHOUS.cWareCode
      This.laWareHous[1,1] = WAREHOUS.cDesc
      This.laWareHous[1,2] = WAREHOUS.cWareCode
    ELSE
      This.lcDefWare       = ""
      *!* B608275,1 MMT 09/23/2007 put default location the first location in locations combobox[Start]
      *SELECT cDesc , cWareCode ;
        FROM WAREHOUS ;
        INTO ARRAY This.laWareHous
      SELECT cDesc , cWareCode ;
        FROM WAREHOUS ;
        INTO ARRAY This.laWareHous ORDER BY warehous.ldefware DESC
      *!* B608275,1 MMT 09/23/2007 put default location the first location in locations combobox[End]
    ENDIF

  SELECT RALINE
  DIMENSION laFileStru[1]
  =AFIELDS(laFileStru)
  lnFileStru = ALEN(laFileStru,1)
  DIMENSION laFileStru[lnFileStru+3,18]
  laFileStru[lnFileStru+1,1] = 'CSTATUS'
  laFileStru[lnFileStru+1,2] = 'C'
  laFileStru[lnFileStru+1,3] = 1
  laFileStru[lnFileStru+1,4] = 0
  laFileStru[lnFileStru+2,1] = 'NRECNO'
  laFileStru[lnFileStru+2,2] = 'N'
  laFileStru[lnFileStru+2,3] = 5
  laFileStru[lnFileStru+2,4] = 0
  *Add logical field to know if this style was shipped to this customer before or not.
  laFileStru[lnFileStru+3,1] = 'LSHIPPED'
  laFileStru[lnFileStru+3,2] = 'L'
  laFileStru[lnFileStru+3,3] = 1
  laFileStru[lnFileStru+3,4] = 0
  FOR lnLoop = 1  TO 3
   STORE '' TO laFileStru[lnFileStru+lnLoop ,7],laFileStru[lnFileStru+lnLoop  ,8],;
               laFileStru[lnFileStru+lnLoop ,9],laFileStru[lnFileStru+lnLoop  ,10],;
               laFileStru[lnFileStru+lnLoop ,11],laFileStru[lnFileStru+lnLoop ,12],;
               laFileStru[lnFileStru+lnLoop ,13],laFileStru[lnFileStru+lnLoop ,14],;
               laFileStru[lnFileStru+lnLoop ,15],laFileStru[lnFileStru+lnLoop ,16]

    STORE 0 TO  laFileStru[lnFileStru+lnLoop ,17],laFileStru[lnFileStru+lnLoop ,18]
  NEXT

  CREATE TABLE (oAriaApplication.WorkDir + This.lcTmpRetLn) FROM ARRAY laFileStru
  SELECT RetAuth
  *-- If the program was called from another program, force to view mode.
  IF TYPE('This.lcRetAth') = 'C' .AND. This.RetAuth.SEEK(This.lcRetAth)
    This.loFormSet.ActiveMode="V"
  ELSE
    This.loFormSet.ActiveMode="S"
  ENDIF


  *Define variable to control the enabling & disabling of the account field.
  *ASM, Disable Account Code if Invoice or Order # was entered [Start]
  *This.lcAccStat = IIF(This.loFormSet.ActiveMode="V" , "DISABLE" , "ENABLE")
  This.lcAccStat = IIF(This.loFormSet.ActiveMode="V" or ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbInvoice.keyTextBox.Value) OR ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbOrder.keyTextBox.Value), "DISABLE" , "ENABLE")
  *ASM, Disable Account Code if Invoice or Order # was entered [End]

  *-- Default the status varibales of the screen objects to its right values.
  This.lcObjStat = IIF(This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A" , "ENABLE" , "DISABLE")
  This.lcWarStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. This.llMultiWH , "ENABLE" , "DISABLE")
  This.lcInqStat = IIF(!EMPTY(RetAuth.invoice) .AND. !This.loFormSet.ActiveMode="S" , "ENABLE" , "DISABLE")
  This.lcInvStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") , "ENABLE" , "DISABLE")
  This.lcDivStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. This.lnNoOfLines = 0 , "ENABLE" , "DISABLE")

  This.lcCurStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")
  This.lcExRStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. !EMPTY(RetAuth.ccurrcode) .AND. This.llEditExRt .AND. (RetAuth.ccurrcode <> oAriaApplication.BaseCurrency) , "ENABLE" , "DISABLE")

  *Don't include lnNoOfLines when determining the invoice object status
  *                  as it should be always enabled in Add/Edit modes
  This.lcEntrStat= IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EOF(This.lcTmpRetLn) .AND.;
                                               !EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")
  This.lcRelStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) , "ENABLE" ,"DISABLE")
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  This.lcOrdStat = IIF((This.lcRelStat == "ENABLE" .OR. (TYPE('This.laConsInvOrdrs') <> 'U' .AND. ALEN(This.laConsInvOrdrs,1) >1)) , "ENABLE" ,"DISABLE")
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]


  SELECT RETAUTH
  *-- set realtion between R/A header & customer file.
  *Old: SET RELATION TO 'M'+ACCOUNT INTO CUSTOMER

  This.lfControlSource()

  ENDFUNC
*--end of lfInit


  *!*************************************************************
  *! Name      : lfControlSource
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Assign Control Source Property for the Form's Controls
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : True / Flase
  *!*************************************************************
  FUNCTION lfControlSource
  LOCAL lnCount, lcCount

    WITH This.loForm
      .kbRANO.keyTextBox.ControlSource = "RetAuth.rano"
      .kbAccount.keyTextBox.ControlSource = "RetAuth.account"
      .txtAccountName.ControlSource = "ThisFormSet.Prg.lcName"
      .kbStore.keyTextBox.ControlSource = "RetAuth.store"
      .txtStatus.ControlSource = "ThisFormSet.Prg.lcStatus"

      WITH .PageFrame.Page1
        .dtradate.ControlSource = "RetAuth.radate"
        .dtvoid.ControlSource = "RetAuth.void"
        .txtAuth.ControlSource = "RetAuth.auth"
        .txtAuthAmt.ControlSource = "RetAuth.authamt"
        .txtFname.ControlSource = "ThisFormSet.Prg.lcFname"
        .txtFaddress1.ControlSource = "ThisFormSet.Prg.lcFaddres1"
        .txtFaddress2.ControlSource = "ThisFormSet.Prg.lcFaddres2"
        .txtFaddress3.ControlSource = "ThisFormSet.Prg.lcFaddres3"
        .txtFaddress4.ControlSource = "ThisFormSet.Prg.lcFaddres4"
        .txtFaddress5.ControlSource = "ThisFormSet.Prg.lcFaddres5"
        .cbocWareCode.RowSource = "ThisFormSet.Prg.laWareHous"
        .cbocWareCode.ControlSource = "RetAuth.cWareCode"
        .txtTaddress1.ControlSource = "ThisFormSet.Prg.lcTaddres1"
        .txtTaddress2.ControlSource = "ThisFormSet.Prg.lcTaddres2"
        .txtTaddress3.ControlSource = "ThisFormSet.Prg.lcTaddres3"
        .txtTaddress4.ControlSource = "ThisFormSet.Prg.lcTaddres4"
        .txtTaddress5.ControlSource = "ThisFormSet.Prg.lcTaddres5"
        .kbInvoice.keyTextBox.ControlSource = "RetAuth.invoice"
        .chkEntireInvoice.ControlSource = "ThisFormSet.Prg.cbComplete"
        .txtTaxRate.ControlSource = "ThisFormSet.Prg.lntaxrate"
        .kbOrder.keyTextBox.ControlSource = "RetAuth.order"
        .txtCartons.ControlSource = "RetAuth.cartons"
        .txtCustPO.ControlSource = "RetAuth.custpo"
        .cboReason.ControlSource = "RetAuth.reason"
        .cboDivision.ControlSource = "RetAuth.cDivision"
        .txtcretnote1.ControlSource = "RetAuth.cretnote1"
        .txtcretnote2.ControlSource = "RetAuth.cretnote2"
        .kbcCurrCode.keyTextBox.ControlSource = "RetAuth.ccurrcode"
        .txtnExRate.ControlSource = "RetAuth.nexrate"
        .txtnReta_Bud.ControlSource = "RetAuth.nReta_Bud"
        .txtnReta_Rec.ControlSource = "RetAuth.nReta_Rec"
        .txtnReta_Can.ControlSource = "RetAuth.nReta_Can"
        .txtnReta_Opn.ControlSource = "RetAuth.nReta_Opn"
        .txtnRtOpnAmt.ControlSource = "RetAuth.nRtOpnAmt"
      ENDWITH

      WITH .PageFrame.Page2
        .cntStyle.ControlSource = This.lcTmpRetLn+'.Style'
        .txtStyDesc.ControlSource = "ThisFormSet.Prg.lcDesc"
        .kbDyelot.keyTextBox.ControlSource = "ThisFormSet.Prg.lcDyeLot"
        .cboReason.ControlSource = This.lcTmpRetLn+'.Reason'
        .txtPrice.ControlSource = "ThisFormSet.Prg.lnPrice"
        .txtTotQty.ControlSource = "ThisFormSet.Prg.lnTotQty"
        .txtTotal.ControlSource = "ThisFormSet.Prg.lnTotal"
        *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
        .cboEmpl.ControlSource = This.lcTmpRetLn+'.Employee'
        *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]
        FOR lnCount =1 TO 8
          lcCount=ALLTRIM(STR(lnCount))
          .cntSizes.TxtQty&lcCount..ControlSource = This.lcTmpRetLn+'.Qty'+lcCount
        NEXT
      ENDWITH

    ENDWITH
  ENDFUNC
*--end of lfControlSource



  *!*************************************************************
  *! Name      : lpShow
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Refresh Event of the FormSet
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lpShow
  *-- Change the prompt of the delete bar in the edit pad to be canceled
  *-- instead of delete.
  *Old: lcCanBar = "IIF(RetAuth.Status='X' , '\<Uncancel' , '\<Cancel')" && Revise

  *Define a flag to know if entered the detail folder or not yet.
  This.llEnterDet = .F.

  STORE .T. TO This.llEdit, This.llDelete, This.llNotes

  SELECT RETAUTH
  DO CASE
    CASE This.loFormSet.ActiveMode="S"
      *-- Blank the R/A lines temp. file.
      SELECT (This.lcTmpRetLn)
      ZAP
      *-- Initialize the needed variables.
      This.llAddMode = .F.
      This.llCUpDate = .F.
      STORE ' ' TO This.lcName , This.lcFName , This.lcStatus , ;
                   This.lcFaddres1 , This.lcFaddres2 , This.lcFaddres3 ,;
                   This.lcFaddres4 , This.lcFaddres5 , This.lcTaddres1 ,;
                   This.lcTaddres2 , This.lcTaddres3 , This.lcTaddres4 ,;
                   This.lcTaddres5 , This.lcStyle , This.lcDesc ,;
                   This.lcReason , This.lcCustPLvl , This.lcDyeLot ,;
                   This.lcConsol , This.lcRa_LinNo

      STORE 0 TO This.lnTotQty , This.lnprice , This.lnTotal ,;
                 This.lnNoOfLines , This.lnTaxRate , This.lnPstRate , This.lnDiscPCnt , ;
                 This.lnRa_LinNo , This.lnTaxzamt

      This.puWareHous = 1 && Revise
      This.laSize     = ""
      This.laQtyStk   = 0
      This.cbComplete = .F.
      This.lnReson2   = 1 && Revise


      *-- Disable the notes & the object linking buttons in the control pannel.
      *Old: SHOW GET pbNotes  DISABLE
      This.llNotes = .F.
      *Old: SHOW GET pbLinkTo DISABLE && Revise

      *-- Disable the delete button with the cancel icon.
      *Revise: SHOW GET pbDlt,1 DISABLE PROMPT lcCancel && Old
      This.llDelete = .F.

      *Point to the header folder after save or cancel.
      This.loForm.PageFrame.Page1.Activate
      *Disable the detail folder in the select mode
      This.loForm.PageFrame.Page2.Enabled = .F.

    CASE This.loFormSet.ActiveMode="V"
      *-- Define the browse titles.
      *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
      IF !EMPTY(This.loForm.kbrano.KeyTextBox.Value) AND This.CUSTOMER.SEEK("M" + PADR(ALLTRIM(This.loForm.kbAccount.KeyTextBox.Value),5))
        IF Customer.lchkentlm
          This.loForm.Parent.llEntCust = .T.
          This.lfFillEmpArr(This.loForm.Parent,PADR(ALLTRIM(This.loForm.kbAccount.KeyTextBox.Value),5),This.loForm.kbrano.KeyTextBox.Value)
          This.loForm.pageFrame.page2.cboEmpl.Visible = .T.
          This.loForm.pageFrame.page2.lblEmpl.Visible = .T.
          This.loForm.pageFrame.page2.cboEmpl.Requery()
          *This.loForm.pageFrame.page2.cboEmpl.Value = SPACE(12)
        ELSE
          This.loForm.pageFrame.page2.cboEmpl.Visible = .F.
          This.loForm.pageFrame.page2.lblEmpl.Visible = .F.
        ENDIF
      ELSE
        IF !EMPTY(This.loForm.kbAccount.KeyTextBox.Value) AND This.loForm.Parent.llEntCust
           This.lfFillEmpArr(This.loForm.Parent,PADR(ALLTRIM(This.loForm.kbAccount.KeyTextBox.Value),5))
           This.loForm.pageFrame.page2.cboEmpl.Requery()
        ENDIF
      ENDIF
      *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]

      This.lcStatus  = IIF(AT(RetAuth.Status,"OCXE") > 0 , This.laStatus[AT(RetAuth.Status,"OCXE")] , "")

      *-- Get the tax rate from the lines file.
      This.lnTaxRate = IIF(This.RALINE.SEEK(RetAuth.rano),RALINE.Tax_Rate , 0)

      *Pick the store address in the from address if the store field is not empty.
      IF (!EMPTY(RetAuth.Store) .AND. This.CUSTOMER.SEEK('S'+RetAuth.Account+RetAuth.Store)) .OR. ;
         (EMPTY(RetAuth.Store) .AND.  This.CUSTOMER.SEEK('M'+RetAuth.Account))
      *-- Get the current customer info (name & address).
        This.lcName    = CUSTOMER.BTNAME
        This.lcFName    = CUSTOMER.STNAME
        This.lcFaddres1 = CUSTOMER.cAddress1
        This.lcFaddres2 = CUSTOMER.cAddress2
        This.lcFaddres3 = CUSTOMER.cAddress3
        This.lcFaddres4 = ALLTRIM(CUSTOMER.cAddress4)+', '+ALLTRIM(CUSTOMER.cAddress5)
        This.lcFaddres5 = CUSTOMER.cAddress6

      ELSE
        STORE SPACE(30) TO This.lcName , This.lcFName , This.lcFaddres1 ,;
                           This.lcFaddres2 , This.lcFaddres3 , This.lcFaddres4 ,;
                           This.lcFaddres5
      ENDIF
      *-- Fill the warehouse popup with the right value.
      This.puWareHous = IIF(ASCAN(This.laWareHous,RetAuth.cwarecode) > 0 , ASUBSCRIPT(This.laWareHous , ASCAN(This.laWareHous,RetAuth.cwarecode) , 1) , 0) && Revise
      *-- Get the warehouse address.
      IF This.WAREHOUS.SEEK(RetAuth.cwarecode)
        This.lcTaddres1 = WAREHOUS.cAddress1
        This.lcTaddres2 = WAREHOUS.cAddress2
        This.lcTaddres3 = WAREHOUS.cAddress3
        This.lcTaddres4 = ALLTRIM(WAREHOUS.cAddress4)+', '+ALLTRIM(WAREHOUS.cAddress5)
        This.lcTaddres5 = WAREHOUS.cAddress6
      ELSE
        STORE SPACE(30) TO This.lcTaddres1 , This.lcTaddres2 , This.lcTaddres3 ,;
                           This.lcTaddres4 , This.lcTaddres5
      ENDIF
      *-- Define check box "[] return entire invoice".
      This.cbComplete = IIF(RetAuth.cintr_inv='Y',.T.,.F.)


      *-- Search for the first R/A line in the master file.
      =This.RALINE.SEEK(RetAuth.rano)
      * Read the RALINE records in a Temprory File even in the View Mode
      lcTemp = DBF('Raline')
      SELECT * , 'S' AS 'CSTATUS' , RECNO() AS 'NRECNO' , ;
             IIF(!EMPTY(RetAuth.cwarecode) , .T. , .F.) AS 'LSHIPPED', ;
             style as OldSty ;
        FROM RALINE ;
       WHERE Raline.rano = RetAuth.rano ;
        INTO DBF (oAriaApplication.WorkDir + This.lcTmpRetLn)

      *-- Change the delete prompt in the toolbar & the delete message.
      *Old: lcPromp    = IIF(RetAuth.Status = 'X' , lcUnCan , lcCancel )
      *Old: lcDelMesag = IIF(RetAuth.Status = 'X' , "uncancel" , "cancel" )
      *Old: SHOW GET pbDlt,1 PROMPT lcPromp && Revise

      *-- Control the enabling & disabling of the edit button in the control pannel.
      IF RetAuth.Status $ 'XC'
        *Old: SHOW GET pbEdt DISABLE
        This.llEdit = .F.
      ELSE
        *Old: SHOW GET pbEdt ENABLE
        This.llEdit = .T.
      ENDIF

      *-- Enable the notes & the object linking buttons in the control pannel.
      *Old: SHOW GET pbNotes  ENABLE
      This.llNotes = .T.
      *Old: SHOW GET pbLinkTo ENABLE && Revise
      This.llObjectLink = .T.

      *B99999,1 18/04/2006 MMT,fix bug of enabled account field in view mode[Start]
      This.loForm.kbAccount.Enabled = .F.
      *B99999,1 18/04/2006 MMT,fix bug of enabled account field in view mode[End]
      *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
      IF This.CUSTOMER.SEEK("M" + RETAUTH.Account) AND Customer.lchkentlm
        This.loForm.Parent.llEntCust = .T.
        This.lfFillEmpArr(This.loForm.Parent,RETAUTH.Account,RETAUTH.Store)
        This.loForm.pageFrame.page2.cboEmpl.Requery()
        This.loForm.pageFrame.page2.cboEmpl.Visible = .T.
        This.loForm.pageFrame.page2.lblEmpl.Visible = .T.
      ELSE
        This.loForm.pageFrame.page2.cboEmpl.Visible = .F.
        This.loForm.pageFrame.page2.lblEmpl.Visible = .F.
      ENDIF
      *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]
    CASE This.loFormSet.ActiveMode="E"
      *-- Define the browse titles.
      This.llCUpDate = .T.
      _TALLY    = 0

      *Add lShipped field in the temp lines file.
      *-- Select the current R/A lines in the temp. file.
      This.Raline.Seek(RetAuth.rano) && In Case RaLine is SQL, this will retrieve all the Lines of the RA
      SELECT * , 'S' AS 'CSTATUS' , RECNO() AS 'NRECNO' , ;
             IIF(!EMPTY(RetAuth.cwarecode) , .T. , .F.) AS 'LSHIPPED', ;
             style as OldSty ;
        FROM RALINE ;
       WHERE Raline.rano = RetAuth.rano ;
        INTO DBF (oAriaApplication.WorkDir + This.lcTmpRetLn)

      This.lnNoOfLines = _TALLY

      *B608545,1 WAM 05/08/2008 Get the last RA line number
      DECLARE laRa_LinNo[1]
      SELECT MAX(cRa_LinNo) FROM RALINE ;
      WHERE Rano = RetAuth.rano INTO ARRAY laRa_LinNo
			
			*B609464,1 MMT 11/22/2010 Error while saving RA has no lines after editing it[Start]
			laRa_LinNo[1] = IIF(This.lnNoOfLines > 0,laRa_LinNo[1],'0')
			*B609464,1 MMT 11/22/2010 Error while saving RA has no lines after editing it[End]
			
      This.lnRa_LinNo = VAL(laRa_LinNo[1])
      *B608545,1 WAM 05/08/2008 (End)

      GO TOP

      *-- Enable the notes & the object linking buttons in the control pannel.
      *Old: SHOW GET pbNotes  ENABLE
      This.llNotes = .T.
      *Old: SHOW GET pbLinkTo ENABLE && Revise
      This.llObjectLink = .T.

    CASE This.loFormSet.ActiveMode="A"
      *-- Define the needed variables incase of add mode.
      IF !This.llAddMode
        *-- Flag to know if enter the add mode before or not.
        This.llAddMode  = .T.
        This.llCUpDate  = .T.
        *-- Blank the temp. R/A lines file.
        SELECT (This.lcTmpRetLn)
        ZAP
        *-- Initialize the needed variables.
        STORE ' ' TO This.lcName , This.lcFName , ;
                     This.lcFaddres1 , This.lcFaddres2 , This.lcFaddres3 ,;
                     This.lcFaddres4 , This.lcFaddres5 , This.lcStyle , This.lcDesc ,;
                     This.lcReason , This.lcCustPLvl , This.lcDyeLot ,;
                     This.lcConsol , This.lcRa_LinNo

        STORE 0 TO This.lnTotQty,This.lnprice,This.lnTotal,;
                   This.lnNoOfLines,This.lnTaxRate,This.lnPstRate,This.lnDiscPCnt ,;
                   This.lnRa_LinNo , This.lnTaxzamt

        *-- Default the tax rate from the company setup.
        This.lnTaxRate = This.lnDefTaxRt

        *-- Set R/A status to be open.
        REPLACE RetAuth.Status WITH 'O' IN RetAuth
        This.lcStatus   = IIF(AT(RetAuth.Status,"OCXE") > 0 , This.laStatus[AT(RetAuth.Status,"OCXE")] , "")

        REPLACE RetAuth.radate  WITH oAriaApplication.SystemDate IN RetAuth
        REPLACE RetAuth.void  WITH IIF(DOW(oAriaApplication.SystemDate+10) <> 7 , oAriaApplication.SystemDate+10 , oAriaApplication.SystemDate+12) IN RetAuth
        REPLACE RetAuth.cartons WITH 1 IN RetAuth
        REPLACE RetAuth.cintr_inv WITH 'N' IN RetAuth

        *-- Get the warehouse value & its address.
        REPLACE RetAuth.cwarecode  WITH This.laWareHous[1,2]  IN RetAuth
        This.puWareHous = 1 && Revise
        IF This.WAREHOUS.SEEK(RetAuth.cwarecode)
          This.lcTaddres1 = WAREHOUS.cAddress1
          This.lcTaddres2 = WAREHOUS.cAddress2
          This.lcTaddres3 = WAREHOUS.cAddress3
          This.lcTaddres4 = ALLTRIM(WAREHOUS.cAddress4)+', '+ALLTRIM(WAREHOUS.cAddress5)
          This.lcTaddres5 = WAREHOUS.cAddress6
        ELSE
          STORE SPACE(30) TO This.lcTaddres1 , This.lcTaddres2 , This.lcTaddres3 ,;
                             This.lcTaddres4 , This.lcTaddres5
        ENDIF
        This.laSize     = ""
        This.laQtyStk   = 0
        This.cbComplete = .F.

        *-- Fill the codes popups with the default values.
        *-- (Header reason , Division , Detail Reason).
        This.lnReson2   = 1
        This.loForm.PageFrame.Page1.cboReason.Value = This.loForm.PageFrame.Page1.cboReason.CodeDefaultValue
        This.loForm.PageFrame.Page1.cboDivision.Value = This.loForm.PageFrame.Page1.cboDivision.CodeDefaultValue

        *Old: _CUROBJ = OBJNUM(RetAuth.Account) && Revise
        This.loForm.kbAccount.KeyTextBox.SetFocus()
      ENDIF
      This.cbComplete = IIF(RetAuth.cintr_inv = 'Y' , .T. , .F.)

      *-- Disable the notes button in the control pannel.
      *Old: SHOW GET pbNotes DISABLE
      This.llNotes = .F.
  ENDCASE

  IF !This.loFormSet.ActiveMode="S"
    *Enable the detail folder.
    This.loForm.PageFrame.Page2.Enabled = .T.
  ELSE
    This.loFormSet.lcsydkey = "Z"+"'"+This.loForm.kbRANO.KeyTextBox.Value+"'"
    This.loForm.kbRANO.Enabled = .T.
    This.loForm.kbRANO.KeyTextBox.SetFocus()
  ENDIF
  This.loForm.kbStore.Enabled = INLIST(This.loFormSet.ActiveMode,'A','E')



  *-- Assign the status of each object on the screen does not use var. "lcObjStat"
  This.lcObjStat = IIF(This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A" , "ENABLE" , "DISABLE")
  *Enable the warehouse popup even there is invoice.
  This.lcWarStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. This.llMultiWH , "ENABLE" , "DISABLE")
  This.lcInqStat = IIF(!EMPTY(RetAuth.invoice) .AND. !This.loFormSet.ActiveMode="S" , "ENABLE" , "DISABLE")

  *Don't include lnNoOfLines when determining the invoice object status
  *                  as it should be always enabled in Add/Edit modes
  This.lcInvStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A"), "ENABLE" , "DISABLE")

  *Disable the division if entered any styles.
  This.lcDivStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. This.lnNoOfLines = 0 , "ENABLE" , "DISABLE")

  This.lcCurStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")
  This.lcExRStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. !EMPTY(RetAuth.ccurrcode) .AND. This.llEditExRt .AND. (RetAuth.ccurrcode <> oAriaApplication.BaseCurrency) , "ENABLE" , "DISABLE")

  *Don't include lnNoOfLines when determining the invoice object status
  *                  as it should be always enabled in Add/Edit modes
  This.lcEntrStat= IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EOF(This.lcTmpRetLn) .AND. !EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")

  This.lcRelStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) , "ENABLE" ,"DISABLE")
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  This.lcOrdStat = IIF((This.lcRelStat == "ENABLE" .OR. (TYPE('This.laConsInvOrdrs') <> 'U' .AND. ALEN(This.laConsInvOrdrs,1) >1)) , "ENABLE" ,"DISABLE")
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

  *Define variable to control the enabling & disabling of the account field.
  *This.lcAccStat = IIF(This.loFormSet.ActiveMode="V" , "DISABLE" , "ENABLE")
  This.lcAccStat = IIF(This.loFormSet.ActiveMode="V" or ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbInvoice.keyTextBox.Value) OR ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbOrder.keyTextBox.Value), "DISABLE" , "ENABLE")
  *ASM, Disable Account Code if Invoice or Order # was entered [End]

  *-- Set flag to rebrowse in the detail folder.
  This.llReBrowse = .T.

  *Old: = lfActFolder()


  IF This.loForm.PageFrame.ActivePage=1
      This.lfRefHdr()
  ELSE
    *B608234,1 WAM 08/23/2007 Browse shifts lines up when add new line
    *This.lfRefDet()
    *B608234,1 WAM 08/23/2007 (End)
  ENDIF
  *B608234,1 WAM 08/23/2007 Browse shifts lines up when add new line
  This.lfRefDet()
  *B608234,1 WAM 08/23/2007 (End)


  *-- Select the main file.
  SELECT RETAUTH

  ENDFUNC
*--end of lpShow


  *!*************************************************************
  *! Name      : lfRefHdr
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Activate Event of the PageFrame.Page1
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfRefHdr
  PRIVATE lnCount , lcCount

  WITH This.loForm
    *Refresh the account objects by the variable defined.
    .kbAccount.Enabled =  (This.lcAccStat='ENABLE')
    *-- Refresh the objects in screen : (lcRtAth1)

    WITH .PageFrame.Page1
      STORE (This.lcObjStat='ENABLE') TO .dtVoid.Enabled, .txtAuth.Enabled, ;
        .txtAuthAmt.Enabled, .cboReason.Enabled, .txtTaxRate.Enabled, ;
        .txtcretnote1.Enabled, .txtcretnote2.Enabled

      *Disable the division if entered any styles.
      This.lcDivStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. This.lnNoOfLines = 0 , "ENABLE" , "DISABLE")

      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
      *.cmdInvoice.Enabled =(This.lcInqStat='ENABLE')
      *.kbinvoice.Enabled = (This.lcInvStat='ENABLE')
      *.chkEntireInvoice.Enabled = (This.lcEntrStat='ENABLE')
      .cmdInvoice.Enabled = (This.lcInqStat='ENABLE') .AND. !This.loForm.PageFrame.Page1.chkEntireInvoice.Value
      .kbinvoice.Enabled  = (This.lcInvStat='ENABLE') .AND. !This.loForm.PageFrame.Page1.chkEntireInvoice.Value
      .chkEntireInvoice.Enabled = (This.lcEntrStat='ENABLE')
      .kbOrder.Enabled    = (This.lcOrdStat='ENABLE') .AND. !This.loForm.PageFrame.Page1.chkEntireInvoice.Value
      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

      .txtCustPO.Enabled = (This.lcRelStat='ENABLE')
      *Enable the cartons field to let the user change it's numer to be used while printing the stickers.
      .txtCartons.Enabled = (This.lcInvStat='ENABLE')
      .cbocWareCode.Enabled = (This.lcWarStat='ENABLE')
      .cboDivision.Enabled = (This.lcDivStat='ENABLE')
      .kbcCurrCode.Enabled = (This.lcCurStat='ENABLE')
      .txtnExRate.Enabled = (This.lcExRStat='ENABLE')
    ENDWITH

  ENDWITH

  ENDFUNC
*--end of lfRefHdr

  *!*************************************************************
  *! Name      : lfRefDet
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Activate Event of the PageFrame.Page2
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfRefDet

  This.lfopenfile(oAriaApplication.DataDir+'INVHDR',oAriaApplication.DataDir+'INVHDR')
  This.lfopenfile(oAriaApplication.DataDir+'INVLINE',oAriaApplication.DataDir+'INVLINE')
  This.lfopenfile(oAriaApplication.DataDir+'STYDYE',oAriaApplication.DataDir+'STYDYE')
  This.llEnterDet = .T.
  SELECT RETAUTH
  This.lfBrLine()
  *This.loForm.PageFrame.Page2.grdRALines.SetFocus()

  ENDFUNC
*--end of lfRefDet

  *!*************************************************************
  *! Name      : lfvRANO
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbRANO Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvRANO

  *-- Fill the R/A with zeros on the left if not browsing.
  This.llBrowse = This.loForm.kbrano.SelectedFromBrowse
  This.llBrowse  = IIF((!This.llBrowse .AND. "?" $ This.loForm.kbrano.KeyTextBox.Value) .OR. This.llBrowse , .T. , .F.)
  *! B609120,1 MMT 12/30/2009 Fix bug of padding RA# with 0'S [Start]
  *This.loForm.kbrano.KeyTextBox.Value = IIF(This.llBrowse .OR. EMPTY(This.loForm.kbrano.KeyTextBox.Value) , This.loForm.kbrano.KeyTextBox.Value , PADL(ALLTRIM(This.loForm.kbrano.KeyTextBox.Value) , 6
  This.loForm.kbrano.KeyTextBox.Value = IIF(This.llBrowse .OR. EMPTY(This.loForm.kbrano.KeyTextBox.Value) , This.loForm.kbrano.KeyTextBox.Value , ALLTRIM(This.loForm.kbrano.KeyTextBox.Value))
  *! B609120,1 MMT 12/30/2009 Fix bug of padding RA# with 0'S [End]


  IF (This.llBrowse .OR. !EMPTY(This.loForm.kbrano.KeyTextBox.Value))
    *-- Fill the browse fields.
    lcBrFields = "Retauth.rano:7 :H='R/A#', Retauth.status:2 :H='S', "+;
                 "Retauth.account:6 :H='Acct#', "+;
                 "lcDummy=LOOKUP(CUSTOMER.BtName,'M'+Retauth.account,CUSTOMER.ACCOUNT,'CUSTOMER') :H='Name':15, "+;
                 "Retauth.store:9 :H='Store', Retauth.radate:8 :H='Issued', "+;
                 "Retauth.void:8 :H='Void', Retauth.auth:7 :H='Auth.', "+;
                 "Retauth.tran:7 :H='Credit #'"

    *Give the ability to browse RAs by customer.
    IF !EMPTY(This.loForm.kbrano.KeyTextBox.Value) AND !EMPTY(This.loForm.kbAccount.KeyTextBox.Value) AND !This.RETAUTH.SEEK(This.loForm.kbrano.KeyTextBox.Value)
      SELECT RETAUTH
      This.RETAUTH.SetOrder('Retautha')

      DECLARE laRA[1]
      laRA[1]   = This.loForm.kbrano.KeyTextBox.Value
      =gfBrows("RetAuth.Account" , "RANO" , "laRA")
      This.loForm.kbrano.KeyTextBox.Value = IIF(This.loForm.kbrano.KeyTextBox.Value = laRA[1] , SPACE(6) , laRA[1])

      This.RETAUTH.SetOrder('Retauth')

      This.llBrowse = .F.
    ENDIF

    This.loForm.kbrano.KeyTextBox.Refresh()

    *If the RA object not empty, call global function to handle the modes.
    IF This.llBrowse OR !EMPTY(This.loForm.kbrano.KeyTextBox.Value)
      *-- Call global function to handle the action & the screen mode
      *-- according to this action.
      *Old: =gfSeekRec()
      IF EMPTY(This.loForm.kbrano.KeyTextBox.Value) OR ALLTRIM(This.loForm.kbrano.KeyTextBox.Value)='?'
        IF !oAriaApplication.oToolBar.cmdFind.Click()
          This.loForm.kbrano.KeyTextBox.Value = ''
          RETURN 0
        ENDIF
      ELSE
         This.loFormSet.SeekRecord(This.loForm.kbrano.KeyTextBox.Value)
         IF This.loFormSet.ActiveMode<>'V'
           This.loForm.kbrano.KeyTextBox.Value = ''
           RETURN 0
         ENDIF
      ENDIF
      *-- Blank the credit memo field to get a seq. no. upon saving.
      This.loForm.kbrano.KeyTextBox.Value = IIF(This.loFormSet.ActiveMode="A" , SPACE(6) , This.loForm.kbrano.KeyTextBox.Value)
    ENDIF

  ENDIF
  This.llBrowse = .F.

  SELECT RETAUTH

  RETURN 1
  ENDFUNC
*--end of lfvRANO


  *!*************************************************************
  *! Name      : lfvAccount
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbAccount Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvAccount

  *! B609603,1 SAB 09/26/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  DIMENSION This.laConsInvOrdrs [1,1]
  *! B609603,1 SAB 09/26/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

  This.llBrowse = This.loForm.kbAccount.SelectedFromBrowse
  IF (This.llBrowse .OR. !(This.loForm.kbAccount.KeyTextBox.Value == This.loForm.kbAccount.KeyTextBox.OldValue))
    IF !This.CUSTOMER.SEEK ("M" + This.loForm.kbAccount.KeyTextBox.Value) .OR. This.llBrowse
      *-- Call the main customer browse.
      XACCOUNT  = This.loForm.kbAccount.KeyTextBox.Value
      DO CUSBROWM WITH XACCOUNT
      This.loForm.kbAccount.KeyTextBox.Value = XACCOUNT
    ENDIF
    *we still validition for cancelled and potentail customer
    IF !EMPTY(This.loForm.kbAccount.KeyTextBox.Value) .AND. ! CUSTOMER.Status $ 'AH'
      *Message : 46038
      *"Unable to create a new R/A, customer status might be canceled or potential."
      *Button  : 00000
      *                         <  Ok  >
      =gfModalGen('TRM46038B00000','ALERT','R/A')
      This.loForm.kbAccount.KeyTextBox.Value = ''
      This.loForm.kbStore.KeyTextBox.Value = ''
      This.loForm.kbStore.KeyTextBox.Refresh()
      This.loForm.txtAccountName.Value = ''
      This.loForm.txtAccountName.Refresh()
     RETURN 0
    ENDIF

    This.loForm.kbAccount.KeyTextBox.Refresh()

    *Pick the store address in the from address if the store field is not empty.
    IF (!EMPTY(This.loForm.kbStore.KeyTextBox.Value) .AND. ;
       This.CUSTOMER.SEEK('S'+This.loForm.kbAccount.KeyTextBox.Value+This.loForm.kbStore.KeyTextBox.Value) .OR. ;
       (EMPTY(This.loForm.kbStore.KeyTextBox.Value) .AND.  This.CUSTOMER.SEEK('M'+This.loForm.kbAccount.KeyTextBox.Value)))
      *-- Get the current customer address.


      *Get the main account addresses or main store addresses not
      *the alternatives addresses for the account or the store.
      This.lcFName    = CUSTOMER.STNAME
      This.lcFaddres1 = CUSTOMER.cAddress1
      This.lcFaddres2 = CUSTOMER.cAddress2
      This.lcFaddres3 = CUSTOMER.cAddress3
      This.lcFaddres4 = ALLTRIM(CUSTOMER.cAddress4)+','+ALLTRIM(CUSTOMER.cAddress5)
      This.lcFaddres5 = CUSTOMER.cAddress6

    ELSE
      STORE SPACE(1) TO This.lcFName,This.lcFaddres1,This.lcFaddres2,This.lcFaddres3,This.lcFaddres4,This.lcFaddres5
    ENDIF

    IF This.CUSTOMER.SEEK("M" + This.loForm.kbAccount.KeyTextBox.Value)
      This.lcName     = CUSTOMER.BTname
      This.lcCustPLvl = CUSTOMER.PRICELVL
      This.lnCusPstRt = CUSTOMER.nTaxRate
      This.lnPstRate  = IIF(This.llIsCanada , CUSTOMER.nTaxRate , 0)
      This.lnTaxRate  = IIF(!This.llIsCanada , CUSTOMER.nTaxRate , 0)
      *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
      IF Customer.lchkentlm
        This.loForm.Parent.llEntCust = .T.
        This.lfFillEmpArr(This.loForm.Parent,This.loForm.kbAccount.KeyTextBox.Value)
        This.loForm.pageFrame.page2.cboEmpl.Requery()
        This.loForm.pageFrame.page2.cboEmpl.Visible = .T.
        This.loForm.pageFrame.page2.lblEmpl.Visible = .T.
      ELSE
        This.loForm.pageFrame.page2.cboEmpl.Visible = .F.
        This.loForm.pageFrame.page2.lblEmpl.Visible = .F.
      ENDIF
      *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]

      This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox.Value = CUSTOMER.cCurrCode
      IF This.llMulCurr
        IF This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox.Value = oAriaApplication.BaseCurrency
          REPLACE RetAuth.ncurrunit WITH 1
          This.loForm.PageFrame.Page1.txtnExRate.Value = 1
        ELSE
          *-- If the currency is different from the base currency, get the rate & the unit.
          lcCurrency = This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox.Value
          lnCurrUnit = This.lnCurrUnit
          REPLACE RetAuth.nexrate WITH gfChkRate('lnCurrUnit' , lcCurrency , oAriaApplication.SystemDate,;
                                 .T. , oAriaApplication.ActiveCompanyID , .F. , This.llEditExRt) IN RetAuth
          This.lnCurrUnit = lnCurrUnit
          REPLACE RetAuth.ncurrunit WITH This.lnCurrUnit IN RetAuth
          This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox.Value = lcCurrency
        ENDIF
      ELSE
        This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox.Value = oAriaApplication.BaseCurrency
        REPLACE RetAuth.ncurrunit WITH 1 IN RetAuth
        This.loForm.PageFrame.Page1.txtnExRate.Value = 1
      ENDIF
    ELSE
      *-- If the customer not found, blank the related variable.
      STORE SPACE(5) TO This.loForm.kbAccount.KeyTextBox.Value
      STORE SPACE(1) TO This.lcName , This.lcCustPLvl
      This.lnCusPstRt = 0
      This.lnPstRate  = 0

      This.lnTaxRate  = IIF(This.loFormSet.ActiveMode="S" , 0 , This.lnDefTaxRt)
      This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox.Value = IIF(This.loFormSet.ActiveMode="S" , "" , oAriaApplication.BaseCurrency)
      REPLACE RetAuth.ncurrunit WITH IIF(This.loFormSet.ActiveMode="S" , 0 , 1) IN RetAuth
      This.loForm.PageFrame.Page1.txtnExRate.Value = IIF(This.loFormSet.ActiveMode="S" , 0 , 1)
    ENDIF
    This.lcExRStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. !EMPTY(RetAuth.ccurrcode) .AND. This.llEditExRt .AND. (RetAuth.ccurrcode <> oAriaApplication.BaseCurrency) , "ENABLE" , "DISABLE")

    This.loForm.txtAccountName.Refresh()
    WITH This.loForm.PageFrame.Page1
      .Refresh()
      .txtnExRate.Enabled = (This.lcExRStat='ENABLE')
    ENDWITH
    *If the RA object is empty, go to fill it.
    IF This.loFormSet.ActiveMode="S" AND EMPTY(RetAuth.rano) && Global
      *This.loForm.kbRANO.KeyTextBox.SetFocus()
      RETURN -1
    ENDIF
  ENDIF
  This.llBrowse   = .F.
  SELECT RETAUTH

  RETURN 1
  ENDFUNC
*--end of lfvAccount


  *!*************************************************************
  *! Name      : lfvStore
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbStore Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvStore

  This.llBrowse = This.loForm.kbStore.SelectedFromBrowse
  * IF ACCOUNT CODE IS EMPTY AND ENTRING STORE CODE
  IF EMPTY(RetAuth.Account) .AND. !EMPTY(This.loForm.kbStore.KeyTextBox.Value) && Global
    *Message : 02040
    *"You have to enter an account code."
    *Button  : 00000
    *                       <  Ok  >
    =gfModalGen('TRM02040B00000','ALERT')
    This.loForm.kbStore.KeyTextBox.Value = ''
    RETURN -1
  ENDIF

  IF (This.llBrowse .OR. !(This.loForm.kbStore.KeyTextBox.Value == This.loForm.kbStore.KeyTextBox.OldValue))
    IF !This.CUSTOMER.SEEK ('S'+RetAuth.Account+This.loForm.kbStore.KeyTextBox.Value) .OR. This.llBrowse
      xStore = This.loForm.kbStore.KeyTextBox.Value
      *-- Call function to browse the available stores for the current customer.
      IF !CUSBROWS(RetAuth.Account,.T.)
        This.llBrowse = .F.
        This.loForm.kbStore.KeyTextBox.Value = SPACE(8)
      ELSE
        This.loForm.kbStore.KeyTextBox.Value = xStore
      ENDIF
    ENDIF
    This.loForm.kbStore.KeyTextBox.Refresh()
    IF !(This.loForm.kbStore.KeyTextBox.Value == This.loForm.kbStore.KeyTextBox.OldValue)
      *-- If there is valid store entered, get its address.
      *Get the main account addresses or main store addresses not
      *the alternatives addresses for the account or the store. [Begin]
      IF !EMPTY(This.loForm.kbStore.KeyTextBox.Value)
        This.lcFName    = CUSTOMER.STNAME
        This.lcFaddres1 = CUSTOMER.cAddress1
        This.lcFaddres2 = CUSTOMER.cAddress2
        This.lcFaddres3 = CUSTOMER.cAddress3
        This.lcFaddres4 = ALLTRIM(CUSTOMER.cAddress4)+','+ALLTRIM(CUSTOMER.cAddress5)
        This.lcFaddres5 = CUSTOMER.cAddress6
      ELSE
        *-- If there is no store entered, get the customer address.
        IF This.CUSTOMER.SEEK("M" + RetAuth.Account)
          This.lcFName    = CUSTOMER.STNAME
          This.lcFaddres1 = CUSTOMER.cAddress1
          This.lcFaddres2 = CUSTOMER.cAddress2
          This.lcFaddres3 = CUSTOMER.cAddress3
          This.lcFaddres4 = ALLTRIM(CUSTOMER.cAddress4)+','+ALLTRIM(CUSTOMER.cAddress5)
          This.lcFaddres5 = CUSTOMER.cAddress6
        ELSE
          *-- If there is no customer , blank the address fields.
          REPLACE RetAuth.Account WITH SPACE(5) IN RetAuth
          STORE SPACE(1) TO This.lcFName,This.lcFaddres1,This.lcFaddres2,;
                            This.lcFaddres3,This.lcFaddres4,This.lcFaddres5
        ENDIF
      ENDIF
      *-- Refresh the customer name & address objects.
      This.loForm.PageFrame.Page1.Refresh()
    ENDIF
  ENDIF

  *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
  IF !EMPTY(This.loForm.kbStore.KeyTextBox.Value)
    lnOldSelect = SELECT()
    SELECT CUSTOMER
    lcCustKey = EVALUATE(KEY())
    IF This.CUSTOMER.SEEK('M'+RetAuth.Account) AND Customer.lchkentlm
      This.lfFillEmpArr(This.loForm.Parent,RetAuth.Account,This.loForm.kbStore.KeyTextBox.Value)
      This.loForm.pageFrame.page2.cboEmpl.Requery()
      This.loForm.Parent.llEntCust = .T.
    ENDIF
    This.CUSTOMER.SEEK(lcCustKey)
    SELECT(lnOldSelect)
  ENDIF
  *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]

  This.llBrowse = .F.
  SELECT RETAUTH

  RETURN 1
  ENDFUNC
*--end of lfvStore


  *!*************************************************************
  *! Name      : lfvWareHouse
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the cboWareCode Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvWareHouse

  *display message if user select location not assign to style[start]
  PRIVATE lnRecNo
  lcPrvAlis = ALIAS()      && Save current alias.
  lnRecNo=RECNO()
  llFirst   = .T.          && flag to display the message only once.
  llAssign  = .F.          && Flag to assign all styles to changed warehouse.
  SELECT (This.lcTmpRetLn)      && Select temp. file hold return auth lines.
  IF RECCOUNT()>0
    *--if there is one or more style assign to location
    *Open the stydye file to avoid error 'alias not found' when editing an existing RA, and try to change the warehouse.
    This.lfopenfile(oAriaApplication.DataDir+'STYDYE',oAriaApplication.DataDir+'STYDYE')
    SELECT (This.lcTmpRetLn)
    SCAN
    *-- Check if there is any styles not assigned to the changed warehouse.
      lcTemp = PADR(EVALUATE(This.lcTmpRetLn+'.Style'),19)
      IF !This.StyDye.SEEK(lcTemp + This.loForm.PageFrame.Page1.cbocWareCode.Value + SPACE(10))
        IF llFirst
          llFirst = .F.
          *** There is one or more styles not assigned to location: laWareHous[puWareHous,2]. ***
          *** <  Assign  > - < Cancel > ***
          IF gfModalGen("QRM46034B46003" , "DIALOG" , This.loForm.PageFrame.Page1.cbocWareCode.Value) = 1
            *--Set flag to assign the unsaaigned styles to the current warehouse.
            llAssign = .T.
          ENDIF
        ENDIF
        *--Assign the styles to the selected location.
        IF llAssign
          REPLACE RetAuth.cwarecode WITH This.loForm.PageFrame.Page1.cbocWareCode.Value IN RetAuth
          =This.WareHous.SEEK(RetAuth.cwarecode)
          DO gpAdStyWar WITH PADR(EVALUATE(This.lcTmpRetLn+'.Style'),19) , SPACE(10) , This.loForm.PageFrame.Page1.cbocWareCode.Value
        ELSE
          *-- Do not assign & restore the old location.
          This.loForm.PageFrame.Page1.cbocWareCode.Value = This.loForm.PageFrame.Page1.cbocWareCode.OldValue
          =This.WareHous.SEEK(This.loForm.PageFrame.Page1.cbocWareCode.Value)
          *--refresh oldvalue
          This.loForm.PageFrame.Page1.cbocWareCode.Refresh()
          SELECT(lcPrvAlis)
          RETURN
        ENDIF
      ENDIF
      SELECT (This.lcTmpRetLn)
    ENDSCAN
  ENDIF
  SELECT(lcPrvAlis)
  *-- If enetered valid warehouse, get its address.
  IF This.WareHous.SEEK(RetAuth.cwarecode)
    This.lcTaddres1 = WAREHOUS.cAddress1
    This.lcTaddres2 = WAREHOUS.cAddress2
    This.lcTaddres3 = WAREHOUS.cAddress3
    This.lcTaddres4 = ALLTRIM(WAREHOUS.cAddress4)+', '+ALLTRIM(WAREHOUS.cAddress5)
    This.lcTaddres5 = WAREHOUS.cAddress6
  ENDIF
  This.loForm.PageFrame.Page1.Refresh()

  ENDFUNC
*--end of lfvWareHouse


  *!*************************************************************
  *! Name      : lfvVoid
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the dtVoid Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvVoid

  IF This.loForm.PageFrame.Page1.dtVoid.Value < RetAuth.radate
    *** Void after cannot be less than the entered date. ***
    *** <  Ok  > ***
    =gfModalGen("INM46016B00000" , "DIALOG")
    This.loForm.PageFrame.Page1.dtVoid.Value = This.loForm.PageFrame.Page1.dtVoid.OldValue
    RETURN 0
  ENDIF

  ENDFUNC
*--end of lfvVoid


  *!*************************************************************
  *! Name      : lfvInqInv
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called in the Click event of the cmdInvoice Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvInqInv

  *Open the invoice header file.
  This.lfopenfile(oAriaApplication.DataDir+'InvHdr',oAriaApplication.DataDir+'InvHdr')

  This.INVHDR.SetOrder('INVHDR')
  *-- If there is valid invoice, inquire with the invoice no.
  IF This.INVHDR.SEEK(RetAuth.invoice)
    *-- Call the invoice inquire screen.
    lcInv = '"'+RetAuth.invoice+'"'
    oAriaApplication.DoProgram("AWRARDINV",lcInv,.F.,'AR')
  ELSE
    *** Invoice # RetAuth.invoice is missing, Unable to inquire. ***
    *** <  Ok  > ***
    =gfModalGen("TRM46011B00000" , "DIALOG" , RetAuth.invoice)
  ENDIF

  ENDFUNC
*--end of lfvInqInv


  *!*************************************************************
  *! Name      : lfvInvoice
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbInvoice Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvInvoice
  LOCAL kbInvoice

  *Open the invoice header file & the consolidated invoice header file.
  This.lfopenfile(oAriaApplication.DataDir+'InvHdr',oAriaApplication.DataDir+'InvHdr')
  This.lfopenfile(oAriaApplication.DataDir+'ConsInvH',oAriaApplication.DataDir+'ConsInvH')

  kbInvoice = This.loForm.PageFrame.Page1.kbInvoice.KeyTextBox
  This.llBrowse = kbInvoice.Parent.SelectedFromBrowse
  IF (This.llBrowse .OR. !(kbInvoice.Value == kbInvoice.OldValue))
    lcInvExp = IIF(EMPTY(RetAuth.Store) , ".T." , "((INVHDR.CONSOL='Y' AND This.CONSINVH.SEEK(kbInvoice.Value+RetAuth.Store)) OR INVHDR.STORE=RetAuth.Store)")
    IF !EMPTY(kbInvoice.Value) .OR. This.llBrowse
      *-- Add zeros to the right of the invoice no.
      kbInvoice.Value = IIF(This.llBrowse .OR. EMPTY(kbInvoice.Value)  .OR. ("?" $ kbInvoice.Value) , kbInvoice.Value , PADL(ALLTRIM(kbInvoice.Value) , 6 , "0"))
      SELECT INVHDR
      This.INVHDR.SetOrder('INVHDRA')
      IF This.INVHDR.SEEK(RetAuth.Account + kbInvoice.Value) .AND. &lcInvExp .AND. !This.llBrowse
        *Do not accept any voided invoices.
        IF InvHdr.Status = 'V'
          *** Cannot accept voided invoices. ***
          *** < Ok > ***
          =gfModalGen("INM46032B00000" , "Dialog")
          kbInvoice.Value  = kbInvoice.OldValue
        ENDIF
      ELSE
        *B609577,1 WAM 05/03/2011 Enhance the performace of invoice browse
*!*	        IF This.INVHDR.SEEK(RetAuth.Account)
*!*	          LOCATE REST WHILE Account = RetAuth.Account FOR Invhdr.status<>'V' AND ;
*!*	                            IIF(EMPTY(RetAuth.Store),.T.,STORE=RetAuth.Store OR ;
*!*	                            (CONSOL='Y' AND This.CONSINVH.SEEK(INVHDR.INVOICE+RetAuth.Store) ))
*!*	        ENDIF
*!*	        IF !FOUND()

          lcAccount = RetAuth.Account
          lcStore   = RetAuth.Store
          llFound   = .F.
          IF !EMPTY(lcStore)
            SELECT * FROM INVHDR WHERE Account+Store+Invoice = lcAccount+lcStore AND STATUS <> 'V' UNION ;
           (SELECT INVHDR.* FROM INVHDR INNER JOIN CONSINVH ON INVHDR.INVOICE = CONSINVH.INVOICE WHERE INVHDR.ACCOUNT = lcAccount AND INVHDR.STATUS <> 'V' AND CONSINVH.STORE=lcStore) ;
            INTO CURSOR tmpInvoices
            llFound = _TALLY > 0
          ELSE
            IF This.INVHDR.SEEK(lcAccount)
              LOCATE REST WHILE Account = lcAccount FOR Invhdr.status <> 'V'
              llFound = FOUND()
            ENDIF
          ENDIF
          IF !llFound
          *B609577,1 WAM 05/03/2011 (ENd)

          *** There is no records to display. ***
          *** <  Ok  > ***
          =gfModalGen("INM00052B00000" , "Dialog")
          kbInvoice.Value  = kbInvoice.OldValue
        ELSE
          *-- Do the soft seek to get the first available record
          *-- similar to the entered invoice.
          IF RECNO(0) >0 .AND. RECNO(0) <= RECCOUNT()
            GO RECNO(0)
          ELSE
            GO TOP
          ENDIF
          *-- Set the browse fields.
          lcBrfields = "INVOICE :H='Invoice' , STATUS :H='S' ,"+;
                       "INVDATE :H='Date' , STORE :H='Store' ,"+;
                       "ORDER :H='Order' ,"+;
                       "lcDummy = LOOKUP(CUSTOMER.StName,'M'+RetAuth.Account,CUSTOMER.Account,'CUSTOMER'):H='Name':22 ,"+;
                       "lcTrmDesc = gfCodDes(cTermCode,'CTERMCODE'):23:R:H='Terms' ,"+;
                       "Rep1  :H='Rp1' , Rep2 :H='Rp2', TOTALCHG :H='Amount',"+;
                       "Note1 :H='Note1' , Note2 :H='Note2'"

          lcFile_ttl = "Invoices"
          DECLARE laInvoice[1]
          laInvoice[1] = kbInvoice.Value

          *B609577,1 WAM 05/03/2011 Enhance the performace of invoice browse
          *B609577,1 WAM 05/03/2011 use the ARIABROW function and Pass the INVHDR as the master table to be able to use the task pane and the Add/Remove browse features

*!*	          lcKey      = "RetAuth.Account FOR IIF(EMPTY(RetAuth.Store),Invhdr.status<>'V',;
*!*	                       ((Invhdr.status<>'V' AND CONSOL='Y' AND SEEK(INVHDR.INVOICE+RetAuth.Store,'CONSINVH')) ;
*!*	                       OR (Invhdr.status<>'V' AND STORE=RetAuth.Store)))"

          IF !EMPTY(lcStore)
             =ARIABROW("", 'INVOICES', .F., .F., .F., .F., .F., .F., "invoice", "laInvoice", .T., .F.,.F., 'INVHDR')
             USE IN tmpInvoices
             SELECT INVHDR
          ELSE
            lcKey = "RetAuth.Account FOR Invhdr.status<>'V'"
          *B609577,1 WAM 05/03/2011 (End)

            *-- Call the global browse.
            =gfBrows(lcKey,"invoice","laInvoice")
          *B609577,1 WAM 05/03/2011 Enhance the performace of invoice browse
          ENDIF
          *B609577,1 WAM 05/03/2011 (End)

          kbInvoice.Value  = IIF(kbInvoice.Value = laInvoice[1] , kbInvoice.OldValue , laInvoice[1])
        ENDIF
      ENDIF
    ENDIF

    *-- Get the default values for the current customer+invoice.
    IF This.INVHDR.SEEK(RetAuth.Account + kbInvoice.Value) .AND. InvHdr.Status <> 'V' .AND. !EMPTY(kbInvoice.Value)

      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
      IF INVHDR.Consol = 'Y'
        SELECT DISTINCT ORDER FROM CONSINVH WHERE CONSINVH.Invoice = INVHDR.Invoice INTO ARRAY This.laConsInvOrdrs
      ENDIF
      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

      *Don't re collect invoice data if there is lines in the detail folder
      *otherwise enavle Return Entire INV. Check Box
      IF EOF(This.lcTmpRetLn)
        This.cbComplete = .F. && Private
        *-- If multi warehouse & the invoice consoloidated & exist in the
        *-- consolidated invoice header.
        IF This.llMultiWH .AND. INVHDR.Consol = 'Y' .AND. This.CONSINVH.SEEK(kbInvoice.Value + RetAuth.Store)
          REPLACE RetAuth.cwarecode WITH IIF(This.llMultiWH , CONSINVH.cWareCode , This.lcDefWare) IN RetAuth
          *Adjust the popup returned row.
          This.puWareHous  = IIF(ASCAN(This.laWareHous,RetAuth.cwarecode) > 0 , ASUBSCRIPT(This.laWareHous , ASCAN(This.laWareHous,RetAuth.cwarecode) , 1) , 1) && Revise

          *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
          *REPLACE RetAuth.order WITH CONSINVH.ORDER,RetAuth.custpo WITH CONSINVH.CustPo, ;
             RetAuth.cartons WITH CONSINVH.Cartons, RetAuth.ccurrcode WITH INVHDR.cCurrCode, ;
             RetAuth.ncurrunit WITH INVHDR.nCurrUnit, RetAuth.nexrate WITH INVHDR.nExRate, ;
             RetAuth.cDivision WITH CONSINVH.cDivision IN RetAuth
          REPLACE RetAuth.custpo WITH CONSINVH.CustPo, ;
             RetAuth.cartons WITH CONSINVH.Cartons, RetAuth.ccurrcode WITH INVHDR.cCurrCode, ;
             RetAuth.ncurrunit WITH INVHDR.nCurrUnit, RetAuth.nexrate WITH INVHDR.nExRate, ;
             RetAuth.cDivision WITH CONSINVH.cDivision IN RetAuth
          IF !(TYPE('This.laConsInvOrdrs') <> 'U' .AND. ALEN(This.laConsInvOrdrs,1) >1)
            REPLACE RetAuth.ORDER WITH CONSINVH.ORDER
          ENDIF
          *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

          This.lnTaxRate   = CONSINVH.TAX_RATE
          This.lnPstRate   = CONSINVH.nPstRate
          This.lnDiscPCnt  = CONSINVH.DiscPCnt
          This.lcCustPLvl  = IIF(LEN(ALLTRIM(This.lcCustPLvl))=0,'A',This.lcCustPLvl)
          This.lcConsol    = INVHDR.Consol
        ELSE
          *-- If single or multi warehouse or the invoice not consoloidated or
          *-- the invoice does not exist in the consolidated invoice header.
          REPLACE RetAuth.cwarecode WITH IIF(This.llMultiWH , INVHDR.cWareCode , This.lcDefWare) IN RetAuth
          *Adjust the popup returned row.
          This.puWareHous  = IIF(ASCAN(This.laWareHous,RetAuth.cwarecode) > 0 , ASUBSCRIPT(This.laWareHous , ASCAN(This.laWareHous,RetAuth.cwarecode) , 1) , 1) && Revise
          REPLACE RetAuth.order WITH INVHDR.ORDER, RetAuth.custpo WITH INVHDR.CustPo, ;
             RetAuth.cartons WITH INVHDR.Cartons, RetAuth.ccurrcode WITH INVHDR.cCurrCode, ;
             RetAuth.ncurrunit WITH INVHDR.nCurrUnit, RetAuth.nexrate WITH INVHDR.nExRate, ;
             RetAuth.cDivision WITH INVHDR.cDivision IN RetAuth
          This.lnTaxRate   = INVHDR.TAX_RATE
          This.lnPstRate   = INVHDR.nPstRate
          This.lnDiscPCnt  = INVHDR.DiscPCnt
          This.lcCustPLvl  = IIF(LEN(ALLTRIM(This.lcCustPLvl))=0,'A',This.lcCustPLvl)
          This.lcConsol    = INVHDR.Consol
        ENDIF
      ELSE && Else IF EOF() Get invoice order # and CUSTPO#
        REPLACE RetAuth.order WITH INVHDR.ORDER, RetAuth.custpo WITH INVHDR.CustPo IN RetAuth
      ENDIF
    ELSE
      kbInvoice.Value = SPACE(6)
      REPLACE  RetAuth.order WITH SPACE(6), RetAuth.custpo WITH SPACE(15), ;
         RetAuth.cartons WITH 1, RetAuth.ccurrcode WITH CUSTOMER.cCurrCode, ;
         RetAuth.ncurrunit WITH 0, RetAuth.nexrate WITH 0 IN RetAuth
      This.lnPstRate  = IIF(This.llIsCanada , CUSTOMER.nTaxRate , 0)
      This.lnTaxRate  = IIF(!This.llIsCanada , CUSTOMER.nTaxRate , 0)
      This.lnDiscPCnt = 0
      This.lcCustPLvl = IIF(LEN(ALLTRIM(This.lcCustPLvl))=0,'A',This.lcCustPLvl)
      This.lcConsol   = "N"
    ENDIF
    SELECT INVHDR
    This.INVHDR.SetOrder('INVHDR')
  ENDIF

  *-- Update the status variables for all the objects in the main screen.
  This.lcObjStat = IIF(This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A" , "ENABLE" , "DISABLE")
  *Enable the warehouse popup even there is invoice.
  This.lcWarStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. This.llMultiWH , "ENABLE" , "DISABLE")
  This.lcInqStat = IIF(!EMPTY(kbInvoice.Value) .AND. !This.loFormSet.ActiveMode="S" , "ENABLE" , "DISABLE")

  *Don't include lnNoOfLines when determining the invoice object status
  *as it should be always enabled in Add/Edit modes
  This.lcInvStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") , "ENABLE" , "DISABLE")

  *Disable the division if entered any styles.
  This.lcDivStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(kbInvoice.Value) .AND. This.lnNoOfLines = 0 , "ENABLE" , "DISABLE")

  This.lcCurStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(kbInvoice.Value) , "ENABLE" , "DISABLE")
  This.lcExRStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. !EMPTY(RetAuth.ccurrcode) .AND. This.llEditExRt .AND. (RetAuth.ccurrcode <> oAriaApplication.BaseCurrency) , "ENABLE" , "DISABLE")

  *Don't include lnNoOfLines when determining the invoice object status
  * as it should be always enabled in Add/Edit modes

  This.lcEntrStat= IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EOF(This.lcTmpRetLn) .AND. !EMPTY(kbInvoice.Value) , "ENABLE" , "DISABLE")

  This.lcRelStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(kbInvoice.Value) , "ENABLE" ,"DISABLE")
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  This.lcOrdStat = IIF((This.lcRelStat == "ENABLE" .OR. (TYPE('This.laConsInvOrdrs') <> 'U' .AND. ALEN(This.laConsInvOrdrs,1) >1)) , "ENABLE" ,"DISABLE")
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]


  *-- Refresh the objects in the main screen.

  WITH This.loForm.PageFrame.Page1
    .Refresh()
    .txtTaxRate.Enabled = (This.lcObjStat='ENABLE')
    .cmdInvoice.Enabled =(This.lcInqStat='ENABLE')
    .kbinvoice.Enabled = (This.lcInvStat='ENABLE')
    .chkEntireInvoice.Enabled = (This.lcEntrStat='ENABLE')
    *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
    *.kbOrder.Enabled = (This.lcRelStat='ENABLE')
    .kbOrder.Enabled = (This.lcOrdStat='ENABLE')
    *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

    .txtCustPO.Enabled = (This.lcRelStat='ENABLE')
    *Enable the cartons field to let the user change it's numer to be used while printing the stickers.
    .txtCartons.Enabled = (This.lcInvStat='ENABLE')
    .cbocWareCode.Enabled = (This.lcWarStat='ENABLE')
    .cboDivision.Enabled = (This.lcDivStat='ENABLE')
    .kbcCurrCode.Enabled = (This.lcCurStat='ENABLE')
    .txtnExRate.Enabled = (This.lcExRStat='ENABLE')
  ENDWITH

  This.llBrowse = .F.
  SELECT RETAUTH
  This.loForm.PageFrame.Page1.cboDivision.Refresh()
  *ASM, Disable Account Code if Invoice or Order # was entered [Start]
  This.lcAccStat = IIF(This.loFormSet.ActiveMode="V" or ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbInvoice.keyTextBox.Value) OR ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbOrder.keyTextBox.Value), "DISABLE" , "ENABLE")
  This.loForm.kbAccount.Enabled =  (This.lcAccStat='ENABLE')
  *ASM, Disable Account Code if Invoice or Order # was entered [End]

  RETURN 1
  ENDFUNC
*--end of lfvInvoice


  *!*************************************************************
  *! Name      : lfvOrder
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbOrder Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvOrder
  LOCAL kbOrder

  *Open the Order header file.
  This.lfopenfile(oAriaApplication.DataDir+'OrdHdr',oAriaApplication.DataDir+'OrdAcct')

  kbOrder = This.loForm.PageFrame.Page1.kbOrder.KeyTextBox
  This.llBrowse = kbOrder.Parent.SelectedFromBrowse
  IF (This.llBrowse .OR. !(kbOrder.Value == kbOrder.OldValue))
    kbOrder.Value = IIF(!This.llBrowse .AND. !EMPTY(kbOrder.Value) .AND. !("?" $ kbOrder.Value) , PADL(ALLTRIM(kbOrder.Value) , 6 , "0") , kbOrder.Value)
    SELECT ORDHDR
    This.ORDHDR.SetOrder('ORDACCT')
    *-- If the entered invalid order # , browse the available orders.

    *B609217,1 WAM 04/22/2010 Restrict sales orders to selected account/store
    *IF (!EMPTY(kbOrder.Value) .AND. !This.ORDHDR.SEEK(RetAuth.Account+"O"+kbOrder.Value)) .OR. This.llBrowse

    This.lfopenfile(oAriaApplication.DataDir+'ORDLINE',oAriaApplication.DataDir+'ORDLINST')
    IF (!EMPTY(kbOrder.Value) .AND. (!This.ORDHDR.SEEK(RetAuth.Account+"O"+kbOrder.Value) OR ;
        !This.ORDLINE.SEEK("O"+kbOrder.Value+ALLTRIM(RetAuth.Store))) ) .OR. This.llBrowse
    *B609217,1 WAM 04/22/2010 (End)

      IF RECNO(0) >0 .AND. RECNO(0) <= RECCOUNT()
        GO RECNO(0)
      ELSE
        GO TOP
      ENDIF
      *-- Set the browse fields.
      *B609217,1 WAM 04/22/2010 Following lines are commented out
*!*	      lcBrFields = [Order:H="Order#",status:1:H="S",Season:H="SE",cDivision:H="DI",]+;
*!*	                   [CustPo=IIF(multipo,'*Multi_PO*',custpo):H="Cust. P.O#",]+;
*!*	                   [ACCOUNT:H="Acct",store=IIF(MULTI='Y','*Multi*',STORE):H="Store",]+;
*!*	                   [Open:H="Open.Qty.",OpenAmt:H="Open.Amt.",Ship:H="Ship.Qty.",Shipamt:H="Ship.Amt.",]+;
*!*	                   [start:H="Start",Complete:H="Complete"]
*!*	      lcFile_ttl  = "Orders"
*!*	      DECLARE laOrders[1]
*!*	      laOrders[1] = kbOrder.Value
*!*	      *-- call the global browse to browse the available orders.
*!*	      =gfBrows("RetAuth.Account" , "Order" , "laOrders")
*!*	      kbOrder.Value   = IIF(kbOrder.Value = laOrders[1] , kbOrder.OldValue , laOrders[1])

      *B609217,1 WAM 04/22/2010 Call the global order browse
      XORDER = ''
      XSTORE  = RetAuth.Store

      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
      *kbOrder.Value = IIF(ORDBROWA(RetAuth.Account ,.T.,'O'),XORDER,'')
      *_SCREEN.Visible = .T.
      *ACTIVATE WINDOW Debug
      *SUSPEND
      IF !(This.lcOrdStat == "ENABLE" .AND. (TYPE('This.laConsInvOrdrs') <> 'U' .AND. ALEN(This.laConsInvOrdrs) >1))
        kbOrder.Value = IIF(ORDBROWA(RetAuth.Account ,.T.,'O'),XORDER,'')
      ELSE
        kbOrder.Value = This.lfOrderBrowse(RetAuth.Account, XORDER)
      ENDIF
      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

      *B609217,1 WAM 04/22/2010 (End)

    ENDIF
    kbOrder.Parent.Refresh()
  ENDIF

  This.llBrowse = .F.

  SELECT RETAUTH

  *ASM, Disable Account Code if Invoice or Order # was entered [Start]
  This.lcAccStat = IIF(This.loFormSet.ActiveMode="V" or ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbInvoice.keyTextBox.Value) OR ;
                       !EMPTY(This.loForm.PageFrame.Page1.kbOrder.keyTextBox.Value), "DISABLE" , "ENABLE")
  This.loForm.kbAccount.Enabled =  (This.lcAccStat='ENABLE')
  *ASM, Disable Account Code if Invoice or Order # was entered [End]

  RETURN 1
  ENDFUNC
*--end of lfvOrder


  *!*************************************************************
  *! Name      : lfvCurrency
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbCurrCode Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvCurrency
  LOCAL kbCurrCode

  *-- Added condition to prevent user from editing currency
  *-- if the this RA has lines or return by invioce.
  kbCurrCode = This.loForm.PageFrame.Page1.kbcCurrCode.KeyTextBox
  This.llBrowse = kbCurrCode.Parent.SelectedFromBrowse
  IF This.llBrowse .OR. !(kbCurrCode.Value == kbCurrCode.OldValue)
    lcCurCode = kbCurrCode.Value
    *-- Call global function to browse the available currencies.
    IF !gfCurrBrow(@lcCurCode)
      kbCurrCode.Value = kbCurrCode.OldValue
    ELSE
      kbCurrCode.Value = lcCurCode
    ENDIF

    IF !EMPTY(kbCurrCode.Value)
      lnCurrUnit = This.lnCurrUnit
      REPLACE RetAuth.nexrate WITH gfChkRate('lnCurrUnit' , kbCurrCode.Value , oAriaApplication.SystemDate,;
                           .T. , oAriaApplication.ActiveCompanyID , .F. , This.llEditExRt) IN RetAuth
      This.lnCurrUnit = lnCurrUnit
      REPLACE RetAuth.ncurrunit WITH This.lnCurrUnit IN RetAuth

      IF !(kbCurrCode.Value == oAriaApplication.BaseCurrency)
        IF RetAuth.nexrate = 0 .AND. This.llEditExRt
          *** A valid ALLTRIM(kbCurrCode.Value) to ALLTRIM(gcBaseCurr) ***
          *** exchange rate could not be found on DTOC(gdSysDate) ***
          *** <  Ok  > ***
          lcTmpTxt = ALLTRIM(kbCurrCode.Value) + "|" + ALLTRIM(oAriaApplication.BaseCurrency) + "|" + DTOC(oAriaApplication.SystemDate)
          =gfModalGen("INM46000B00000" , "DIALOG" , lcTmpTxt)
        ENDIF
      ELSE
        REPLACE RetAuth.nexrate WITH 1, RetAuth.ncurrunit WITH 1 IN RetAuth
      ENDIF
      *-- Got exchange rate sign and unit sign.
      This.lcUntSin = ' '
      lcUntSin = This.lcUntSin
      This.lcExRSin = gfGetExSin(@lcUntSin, kbCurrCode.Value)
      This.lcUntSin = lcUntSin
    ENDIF
  ELSE
    kbCurrCode.Value = kbCurrCode.OldValue
  ENDIF

  This.lcExRStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EMPTY(RetAuth.invoice) .AND. !EMPTY(kbCurrCode.Value) .AND. This.llEditExRt .AND. (kbCurrCode.Value <> oAriaApplication.BaseCurrency) , "ENABLE" , "DISABLE")

  *-- Refresh the currency & its exchange rate objects.
  kbCurrCode.Parent.Refresh()
  This.loForm.PageFrame.Page1.txtnExRate.Refresh()

  This.llBrowse = .F.

  RETURN 1
  ENDFUNC
*--end of lfvCurrency


  *!*************************************************************
  *! Name      : lfvExRate
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the txtnExRate Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvExRate

  WITH This.loForm.PageFrame.Page1
    IF .txtnexrate.OldValue <>  .txtnexrate.Value .OR. .txtnexrate.Value <=0
      *-- The exchange rate should not be equal or less than zero.
      IF .txtnexrate.Value <=0
        *** The exchange rate must be greater than zero. ***
        *** <  Ok  > ***
        =gfModalGen("INM46001B00000" , "DIALOG")
        .txtnexrate.Value = IIF(.txtnexrate.OldValue > 0 , .txtnexrate.OldValue , .txtnexrate.Value)
        RETURN (IIF(.txtnexrate.OldValue > 0 , 0 , 1))
      ELSE
        RETURN 1
      ENDIF
    ENDIF
  ENDWITH

  ENDFUNC
*--end of lfvExRate


  *!*************************************************************
  *! Name      : lfvEntireInvoice
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called when checking the chkEntireInvoice Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvEntireInvoice
  LOCAL chkEntire

  *Open the invoice line & the consolidated invoice line file.
  This.lfopenfile(oAriaApplication.DataDir+'ConsInvL',oAriaApplication.DataDir+'ConsInvL')
  This.lfopenfile(oAriaApplication.DataDir+'InvLine',oAriaApplication.DataDir+'InvLine')

  chkEntire = This.loForm.PageFrame.Page1.chkEntireInvoice
  *IF !(chkEntire.OldValue == chkEntire.Value) && No need for this condition as it is called in
  *the InterActiveChange event
  This.cbComplete = chkEntire.Value
  IF .T.
    REPLACE RetAuth.cintr_inv WITH IIF(This.cbComplete , 'Y' , 'N') IN RetAuth
    DO CASE
      *-- If the Returne entire invoice check box was checked.
      CASE chkEntire.Value
        STORE 0 TO This.lnNoOfLines , _TALLY
        REPLACE RetAuth.nreta_bud WITH 0, RetAuth.nreta_opn WITH 0, ;
           RetAuth.nRtOpnAmt WITH 0 IN RetAuth
        IF This.llMultiWH .AND. This.lcConsol = 'Y'
          This.lnRa_LinNo = 1

          SELECT Consinvl
          *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
          **B999999,1 ASM 06/13/2005 Read Lines For Consolidated Invoice even when No Store was Specified [Start]
          **This.Consinvl.SEEK(RetAuth.invoice+RetAuth.Store)
          **SCAN REST WHILE invoice + store = RetAuth.invoice + RetAuth.Store
          *This.Consinvl.SEEK(RetAuth.invoice+IIF(EMPTY(RetAuth.Store),'',RetAuth.Store))
          *SCAN REST WHILE invoice + store = RetAuth.invoice + IIF(EMPTY(RetAuth.Store),'',RetAuth.Store)
          **B999999,1 ASM 06/13/2005 Read Lines For Consolidated Invoice even when No Store was Specified [End]
*          This.Consinvl.SEEK(RetAuth.invoice+IIF(EMPTY(RetAuth.Store),SPACE(8),RetAuth.Store)+IIF(EMPTY(RetAuth.Order),'',RetAuth.Order))
*          SCAN REST WHILE invoice + store + order = RetAuth.invoice + IIF(EMPTY(RetAuth.Store),SPACE(8),RetAuth.Store) + IIF(EMPTY(RetAuth.Order),'',RetAuth.Order)
          LOCAL lcOrderFilter
          lcOrderFilter = IIF(EMPTY(RetAuth.Order),"","FOR Order='" +  RetAuth.Order + "'")

          This.Consinvl.SEEK(RetAuth.invoice+IIF(EMPTY(RetAuth.Store),'',RetAuth.Store))
          SCAN REST WHILE invoice + store = RetAuth.invoice + IIF(EMPTY(RetAuth.Store),'',RetAuth.Store) &lcOrderFilter.
          *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]
            SELECT (This.lcTmpRetLn)
            APPEND BLANK
            *include discount percentage when calculating the price and total amount
            REPLACE Account    WITH Consinvl.account ;
                    Style      WITH Consinvl.style ;
                    cRA_LinNo  WITH ALLTRIM(STR(This.lnRa_LinNo)) ;
                    Dyelot     WITH Consinvl.dyelot ;
                    REASON     WITH RetAuth.reason ;
                    Price      WITH Consinvl.price * (1 - This.lnDiscPCnt / 100) ;
                    Qty1       WITH Consinvl.qty1 ;
                    Qty2       WITH Consinvl.qty2 ;
                    Qty3       WITH Consinvl.qty3 ;
                    Qty4       WITH Consinvl.qty4 ;
                    Qty5       WITH Consinvl.qty5 ;
                    Qty6       WITH Consinvl.qty6 ;
                    Qty7       WITH Consinvl.qty7 ;
                    Qty8       WITH Consinvl.qty8 ;
                    TotQty     WITH Qty1+Qty2+Qty3+Qty4+Qty5+Qty6+Qty7+Qty8 ;
                    nOpnQty1   WITH Consinvl.qty1 ;
                    nOpnQty2   WITH Consinvl.qty2 ;
                    nOpnQty3   WITH Consinvl.qty3 ;
                    nOpnQty4   WITH Consinvl.qty4 ;
                    nOpnQty5   WITH Consinvl.qty5 ;
                    nOpnQty6   WITH Consinvl.qty6 ;
                    nOpnQty7   WITH Consinvl.qty7 ;
                    nOpnQty8   WITH Consinvl.qty8 ;
                    nTotOpnQty WITH nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8 ;
                    TAX_Rate   WITH IIF(This.llTaxYes , This.lnTaxRate , 0) ;
                    nPstRate   WITH IIF(This.llTaxYes .AND. This.llIsCanada , This.lnPstRate , 0) ;
                    Amount     WITH Consinvl.price * (1 - This.lnDiscPCnt / 100) * Consinvl.totqty ;
                    CSTATUS    WITH "A"

            *Add true in the logical field to know that this line was
            *shipped to the customer befor.
            REPLACE lShipped  WITH .T.

            *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
            IF !USED('OrdLine')
              =gfOpenTable('OrdLine','ORDLINST','SH', 'Ordline')    && CORDTYPE+ORDER+STORE+STYLE+STR(LINENO,6)
            ENDIF
            IF gfSeek('O'+CONSINVL.Order+CONSINVL.Store+CONSINVL.STYLE,'Ordline') AND !EMPTY(Ordline.Employee)
              REPLACE Employee WITH Ordline.Employee
            ENDIF
            *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

            *-- Call global function to add audit fields info.
            =gfAdd_Info(This.lcTmpRetLn)

            *-- Total Budget.
            REPLACE RetAuth.nreta_bud WITH RetAuth.nreta_bud + EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
               RetAuth.nreta_opn WITH RetAuth.nreta_opn + EVALUATE(This.lcTmpRetLn+'.nTotOpnQty'), ;
               RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt + (EVALUATE(This.lcTmpRetLn+'.nTotOpnQty') * Consinvl.price) IN RetAuth

            This.lnRa_LinNo = This.lnRa_LinNo + 1
            SELECT Consinvl
          ENDSCAN

          *include discount percentage & taxes & charges when calculating the total amount
          llIsEnglnd = IIF(UPPER(ALLTRIM(oAriaApplication.DefaultCountry)) = 'ENG', .T., .F.)
          IF llIsEnglnd
            lnOther = INVHDR.ncharges
          ELSE
            lnOther = INVHDR.freight + INVHDR.cod + INVHDR.insur
          ENDIF

          lnDiscAmt = RetAuth.nRtOpnAmt * (This.lnDiscPCnt / 100)

          This.lnTaxzamt = (RetAuth.nRtOpnAmt - lnDiscAmt + lnOther ) * (This.lnTaxRate / 100)
          REPLACE RetAuth.nRtOpnAmt WITH ;
             RetAuth.nRtOpnAmt + lnOther + This.lnTaxzamt - lnDiscAmt IN RetAuth

          This.lnNoOfLines = This.lnRa_LinNo
          SELECT (This.lcTmpRetLn)
          GO TOP
        ELSE
          This.lnRa_LinNo = 1

          SELECT INVLINE
          This.INVLINE.SEEK(RetAuth.invoice)
          SCAN REST WHILE Invoice = RetAuth.invoice
            SELECT (This.lcTmpRetLn)
            APPEND BLANK

            *include discount percentage when calculating the price and total amount
            REPLACE Account    WITH Invline.account ;
                    Style      WITH Invline.style ;
                    cRA_LinNo  WITH ALLTRIM(STR(This.lnRa_LinNo)) ;
                    Dyelot     WITH Invline.dyelot ;
                    REASON     WITH RetAuth.reason ;
                    Price      WITH Invline.price  * (1 - This.lnDiscPCnt / 100) ;
                    Qty1       WITH Invline.qty1 ;
                    Qty2       WITH Invline.qty2 ;
                    Qty3       WITH Invline.qty3 ;
                    Qty4       WITH Invline.qty4 ;
                    Qty5       WITH Invline.qty5 ;
                    Qty6       WITH Invline.qty6 ;
                    Qty7       WITH Invline.qty7 ;
                    Qty8       WITH Invline.qty8 ;
                    TotQty     WITH Qty1+Qty2+Qty3+Qty4+Qty5+Qty6+Qty7+Qty8 ;
                    nOpnQty1   WITH Invline.qty1 ;
                    nOpnQty2   WITH Invline.qty2 ;
                    nOpnQty3   WITH Invline.qty3 ;
                    nOpnQty4   WITH Invline.qty4 ;
                    nOpnQty5   WITH Invline.qty5 ;
                    nOpnQty6   WITH Invline.qty6 ;
                    nOpnQty7   WITH Invline.qty7 ;
                    nOpnQty8   WITH Invline.qty8 ;
                    nTotOpnQty WITH nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8 ;
                    TAX_Rate   WITH IIF(This.llTaxYes , This.lnTaxRate , 0) ;
                    nPstRate   WITH IIF(This.llTaxYes .AND. This.llIsCanada , This.lnPstRate , 0) ;
                    Amount     WITH (Invline.price * (1 - This.lnDiscPCnt / 100)) * Invline.totqty ;
                    CSTATUS    WITH "A"

            *Add true in the logical field to know that this line was
            *shipped to the customer befor.
            REPLACE lShipped  WITH .T.

            *! B609603,1 SAB 09/26/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
            IF !USED('OrdLine')
              =gfOpenTable('OrdLine','ORDLINST','SH', 'Ordline')    && CORDTYPE+ORDER+STORE+STYLE+STR(LINENO,6)
            ENDIF
            IF gfSeek('O'+Invline.Order+Invline.Store+Invline.STYLE,'Ordline') AND !EMPTY(Ordline.Employee)
              REPLACE Employee WITH Ordline.Employee
            ENDIF
            *! B609603,1 SAB 09/26/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

            *-- Call global function to add audit fields info.
            =gfAdd_Info(This.lcTmpRetLn)
            *-- Total Budget.

            REPLACE RetAuth.nreta_bud WITH RetAuth.nreta_bud + EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
               RetAuth.nreta_opn WITH RetAuth.nreta_opn + EVALUATE(This.lcTmpRetLn+'.nTotOpnQty'), ;
               RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt + (EVALUATE(This.lcTmpRetLn+'.nTotOpnQty') * InvLine.price) IN RetAuth



            This.lnRa_LinNo = This.lnRa_LinNo + 1
            SELECT InvLine
          ENDSCAN
          *include discount percentage & taxes & charges when calculating the total amount

          llIsEnglnd = IIF(UPPER(ALLTRIM(oAriaApplication.DefaultCountry)) = 'ENG', .T., .F.)
          IF llIsEnglnd
            lnOther = INVHDR.ncharges
          ELSE
            lnOther = INVHDR.freight + INVHDR.cod + INVHDR.insur
          ENDIF

          lnDiscAmt = RetAuth.nRtOpnAmt * (This.lnDiscPCnt / 100)

          This.lnTaxzamt = (RetAuth.nRtOpnAmt - lnDiscAmt + lnOther ) * (This.lnTaxRate / 100)
          REPLACE RetAuth.nRtOpnAmt WITH ;
             RetAuth.nRtOpnAmt + lnOther + This.lnTaxzamt - lnDiscAmt IN RetAuth

          This.lnNoOfLines = This.lnRa_LinNo
          SELECT (This.lcTmpRetLn)
          GO TOP
        ENDIF
      *-- If the Returne entire invoice check box was unchecked.
      CASE !chkEntire.Value
        *-- Blank the temp. R/A lines file.
        SELECT (This.lcTmpRetLn)
        ZAP
        *-- Set the lines counter to zero.
        This.lnNoOfLines = 0
    ENDCASE

    *-- Update the status variable to refresh the objects.
    *Don't include lnNoOfLines when determining the invoice object status
    *as it should be always enabled in Add/Edit modes
    This.lcEntrStat= IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EOF(This.lcTmpRetLn) .AND. !EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")

    chkEntire.Enabled = (This.lcEntrStat='ENABLE')
    *Don't include lnNoOfLines when determining the invoice object status
    *as it should be always enabled in Add/Edit modes
    This.lcInvStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A"), "ENABLE" , "DISABLE")

    WITH This.loForm.PageFrame.Page1
      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
      *.kbinvoice.Enabled = (This.lcInvStat='ENABLE')
      .kbinvoice.Enabled  = (This.lcInvStat='ENABLE') .AND. !This.loForm.PageFrame.Page1.chkEntireInvoice.Value
      .kbOrder.Enabled    = (This.lcOrdStat='ENABLE') .AND. !This.loForm.PageFrame.Page1.chkEntireInvoice.Value
      .cmdInvoice.Enabled = (This.lcInqStat='ENABLE') .AND. !This.loForm.PageFrame.Page1.chkEntireInvoice.Value
      *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]
      .Refresh()
    ENDWITH

  ENDIF

  SELECT RETAUTH

  ENDFUNC
*--end of lfvEntireInvoice


  *!*************************************************************
  *! Name      : lfvTaxRate
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the txtTaxRate Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvTaxRate
  PRIVATE lnCurRecNo

  SELECT (This.lcTmpRetLn) && Private
  lnCurRecNo = RECNO()

  *-- Update the tax rate in the R/A lines temp. files.
  REPLACE ALL TAX_RATE WITH This.lnTaxRate, CSTATUS  WITH IIF(CSTATUS = 'S','M',CSTATUS)
  *-- Restore the lines pointer.
  IF lnCurRecNo > 0 .AND. lnCurRecNo <= RECCOUNT()
    GOTO lnCurRecNo
  ENDIF

  This.loForm.PageFrame.Page1.txtTaxRate.Refresh()

  SELECT RETAUTH

  ENDFUNC
*--end of lfvTaxRate


  *!*************************************************************
  *! Name      : lfvReson1
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the cboReason Control in the Header Page
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvReson1


  *If not entered the detail folder, appy header reason to all lines reason
  IF !This.llEnterDet AND This.lnNoOfLines > 0
    SELECT (This.lcTmpRetLn)
    REPLACE ALL REASON  WITH RetAuth.reason, CSTATUS WITH IIF(CSTATUS = 'S','M',CSTATUS)
    *-- Select the main file.
    SELECT RETAUTH
  ENDIF

  RETURN 1
  ENDFUNC
*--end of lfvReson1


  *!*************************************************************
  *! Name      : lfBrLine
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Format the Grid Lines
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfBrLine
  LOCAL lnCol

  *-- Prepare the alias, key, browse title for the current browse.
  This.lcRCurAlis = IIF(This.loFormSet.ActiveMode='V' , 'RALINE'  , This.lcTmpRetLn)
  This.lcKeyRet   = IIF(This.loFormSet.ActiveMode='V' , "KEY RetAuth.RANO" , "")
  * Read the RALINE records in a Temprory File even in the View Mode
  This.lcRCurAlis = This.lcTmpRetLn

  SELECT (This.lcRCurAlis)

  WITH This.loForm.PageFrame.Page2.grdRALines

    .RecordSource=''
    .ColumnCount=0
    .RecordSource = This.lcRCurAlis
    .ColumnCount=6
    lnCol = 0
    This.lfAddGridCol(@lnCol,"Style","Style",,150)
    This.lfAddGridCol(@lnCol,"IIF(ThisFormSet.Prg.Style.Seek(Style),Style.Desc,'')","Description",,150)
    This.lfAddGridCol(@lnCol,"gfCodDes(Reason,'REASON')",'Reason',,100)
    *B608520,1 WAM 04/17/2008 Remove decimal points from RA quantity
    *This.lfAddGridCol(@lnCol,"TotQty","Qty",,50)
    This.lfAddGridCol(@lnCol,"TotQty","Qty",,50,'99999999')
    *B608520,1 WAM 04/17/2008 (End)

    This.lfAddGridCol(@lnCol,"Price","Price",,75)
    This.lfAddGridCol(@lnCol,"Amount","Total",,75)

    *! C201291,1 MMT 11/25/2010 Customization for OSP00 to add PO# per RA line[Start]
	IF ASCAN(This.loForm.parent.laEvntTrig, PADR('ADDPOCOL',10)) <> 0
	  =This.loForm.parent.mDoTrigger(PADR('ADDPOCOL',10))
	ENDIF
    *! C201291,1 MMT 11/25/2010 Customization for OSP00 to add PO# per RA line[End]

    This.lfWhenBrow()

  ENDWITH

  ENDFUNC
*--end of lfBrLine


  *!*************************************************************
  *! Name      : lfAddGridCol
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Add a Column to the Grid
  *!*************************************************************
  *! Parameters: Column No, Control Source, Caption, Header Alignment, Width, InputMask
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfAddGridCol
  LPARAMETERS lnCol, lcControlSource, lcCaption, lnHdrAligment, lnWidth, lcInputMask

  lnCol = lnCol +1
  WITH This.loForm.PageFrame.Page2.grdRALines
    .columns(lnCol).ControlSource  = lcControlSource
    .columns(lnCol).Header1.Caption = lcCaption
    .columns(lnCol).Header1.Alignment = IIF(TYPE('lnHdrAligment')='N',lnHdrAligment,0)
    .columns(lnCol).Width = IIF(TYPE('lnWidth')='N',lnWidth,75)
    IF TYPE('lcInputMask')='C'
      .columns(lnCol).InputMask = lcInputMask
    ENDIF
  ENDWITH

  ENDFUNC
*--end of lfAddGridCol

  *!*************************************************************
  *! Name      : lfWhenBrow
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the AfterRowColChange Event of the Grid
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfWhenBrow

  *-- Refresh the browse pointer.
  SELECT (This.lcRCurAlis)
  This.lnMarker   = RECNO(This.lcRCurAlis)

  *-- If there is no lines in the browse.
  IF BOF() .OR. EOF()
    *-- Store zero to qty. array, & blank its headers.
    This.laQtyStk = 0
    This.laSize   = ""

    *-- Set the status variables to disable.
    This.lcLinStat = "DISABLE"
    This.lcDyeStat = "DISABLE"

    *-- Set the needed variables.
    This.lcStyle    = ""
    This.lcRa_LinNo = ""
    This.lcDesc     = ""
    This.lcReason   = ""
    This.lcDyeLot   = ""
    This.lnTotQty   = 0
    This.lnprice    = 0
    This.lnTotal    = 0
    This.lcScale    = ""
    This.lnScale    = 0
    This.loForm.PageFrame.Page2.cntSizes.Scale = This.lcScale
    *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
    This.loForm.PageFrame.Page2.cboEmpl.Value = SPACE(12)
    *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]


    *-- Refresh the scale sizes & qty.
    FOR lnCount = 1 TO 8
      *SHOW GET This.laSize  [lnCount] DISABLE && Revise
      *SHOW GET This.laQtyStk[lnCount] DISABLE && Revise
    ENDFOR
  ELSE
    This.lcStyle = EVALUATE(This.lcTmpRetLn+'.Style')
    *-- Update the status variables (Enable -or- Disable)
    This.lcLinStat = IIF(This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A" , "ENABLE" , "DISABLE")
    This.lcDyeStat = IIF(This.llDyelot .AND. This.STYLE.SEEK(PADR(This.lcStyle,19)) .AND. ;
                    STYLE.cdye_flg = 'Y' , "ENABLE" , "DISABLE")

    *-- Set the needed variables.
    This.lcStyle    = Style
    This.lcRa_LinNo = cRa_LinNo
    This.lcDesc     = IIF(This.Style.SEEK(Style),Style.Desc,"")
    This.lcReason  = REASON
    This.lcDyeLot  = Dyelot
    This.lnTotQty  = Totqty
    This.lnprice  = Price
    This.lnTotal   = Amount
    This.lcScale   = IIF(!EMPTY(This.lcStyle) .AND. This.STYLE.SEEK(PADR(This.lcStyle,19)) , Style.Scale , "")
    This.lnScale   = IIF(!EMPTY(This.lcScale) .AND. This.SCALE.SEEK("S" + This.lcScale) , SCALE.Cnt , 0)
    This.loForm.PageFrame.Page2.cntSizes.Scale = This.lcScale
    *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
    This.loForm.PageFrame.Page2.cboEmpl.Value = Employee
    *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[End]

    *-- Refresh the scale sizes & qty.
    FOR lnCount = 1 TO 8
      lcCount   = STR(lnCount,1)
      IF lnCount <= This.lnScale
        This.laQtyStk[lnCount] = Qty&lcCount
        This.laSize  [lnCount] = IIF(This.lnScale = 0 , "" , SCALE.SZ&lcCount)
        *SHOW GET This.laSize  [lnCount] &This.lcLinStat && Revise
        *SHOW GET This.laQtyStk[lnCount] &This.lcLinStat && Revise
      ELSE
        This.laQtyStk[lnCount] = 0
        This.laSize  [lnCount] = ""
        *SHOW GET This.laSize  [lnCount] DISABLE && Revise
        *SHOW GET This.laQtyStk[lnCount] DISABLE && Revise
      ENDIF

      *In case modifying the style, and the scale of the new style has sizese
      *less than the old one, recalculate qtys and amount.
      IF !This.loFormSet.ActiveMode="V"
        *ASM, No need for replacing fields with memory variables
        *REPLACE QTY&lcCount     WITH This.laQtyStk[lnCount] ;
                Totqty          WITH This.laQtyStk[1]+This.laQtyStk[2]+This.laQtyStk[3]+This.laQtyStk[4]+This.laQtyStk[5]+This.laQtyStk[6]+This.laQtyStk[7]+This.laQtyStk[8] ;
                Amount          WITH TOTQTY * PRICE ;
                nOpnQty&lcCount WITH IIF(lnCount <= This.lnScale,nOpnQty&lcCount,0);
                nTotOpnQty      WITH nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8 ;
                CSTATUS         WITH IIF(CSTATUS = 'S','M',CSTATUS)
        REPLACE Totqty          WITH qty1+qty2+qty3+qty4+qty5+qty6+qty7+qty8 ;
                Amount          WITH TOTQTY * PRICE ;
                nOpnQty&lcCount WITH IIF(lnCount <= This.lnScale,nOpnQty&lcCount,0);
                nTotOpnQty      WITH nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8 ;
                CSTATUS         WITH IIF(CSTATUS = 'S','M',CSTATUS)
      ENDIF
    ENDFOR
  ENDIF
  *-- Set the new button status.
  This.lcNewStat = IIF(This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A" , "ENABLE", "DISABLE")

  *-- Refresh the objects in screen
  WITH This.loForm.PageFrame.Page2
    STORE (This.lcLinStat='ENABLE') TO .cntStyle.Enabled, .cboReason.Enabled, ;
       .txtPrice.Enabled, .cntSizes.Enabled, .cmdRemove.Enabled
    .kbDyelot.Enabled = (This.lcLinStat='ENABLE' AND This.lcDyeStat='ENABLE')
    .cmdNew.Enabled = (This.lcNewStat='ENABLE')
    *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
    STORE (This.lcLinStat='ENABLE') TO .cboEmpl.Enabled
    *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[ENd]

    .cntStyle.Refresh()
    .txtStyDesc.Refresh()
    .cboReason.Refresh()
    .txtPrice.Refresh()
    .txtTotQty.Refresh()
    .txtTotal.Refresh()
    .cmdRemove.Refresh()
    .kbDyelot.Refresh()
    .cmdNew.Refresh()
    .cntSizes.Refresh()

  ENDWITH

  ENDFUNC
*--end of lfWhenBrow


  *!*************************************************************
  *! Name      : lfvNewLine
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Click Event of the cmdNew Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvNewLine

  llAddLine = .T.

  *-- Fill the detail reason popup with the right value.
  This.lcReason = RetAuth.reason && Private  Global



  *-- Add new line in the temp. R/A lines file.
  SELECT (This.lcTmpRetLn)
  LOCATE FOR EMPTY(STYLE)
  IF !FOUND()
    APPEND BLANK
  ENDIF
  BLANK
  REPLACE RaNo    WITH IIF(This.loFormSet.ActiveMode="E" , RetAuth.rano , SPACE(6)) ;
          Account WITH RetAuth.Account ;
          Reason  WITH This.lcReason ;
          CSTATUS WITH 'A'

  *-- Call global function to add audit fields info.
  =gfAdd_Info(This.lcTmpRetLn)

  *-- Add 1 to the lines records counter.
  This.lnNoOfLines = This.lnNoOfLines + 1

  *-- Refresh the detail folder.
  This.loForm.PageFrame.Page2.grdRALines.Refresh()
  This.lfWhenBrow()
  This.loForm.PageFrame.Page2.cntStyle.SetFocus()


  ENDFUNC
*--end of lfvNewLine


  *!*************************************************************
  *! Name      : lfvRemLine
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Click Event of the cmdRemove Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvRemLine

  *-- Confirm Removing current line.
  *** Are you sure you want to "Remove" this record? ***
  *** < Yes > - < No > ***

  *B608234,1 WAM 08/23/2007 Fix message
  *IF gfModalGen("QRM00002B00006","ALERT") = 1
  IF gfModalGen("QRM00002B00006","ALERT","remove") = 1
  *B608234,1 WAM 08/23/2007 (End)


    *-- Decrease the lines with 1.
    This.lnNoOfLines = This.lnNoOfLines - 1

    *-- Get the original Qty. & open qty. from the RALINE file if not new record.
    IF EVALUATE(This.lcTmpRetLn+'.cStatus') = "A"
      lnDeduct   = 0
    ELSE
      IF This.RALINE.SEEK(RetAuth.rano + PADR(EVALUATE(This.lcTmpRetLn+'.Style'),19))
        lnOldRAOpn = RALINE.nTotOpnQty
        lnCurRAOpn = MAX(0 , EVALUATE(This.lcTmpRetLn+'.nTotOpnQty') + EVALUATE(This.lcTmpRetLn+'.TotQty') - RALINE.TotQty)
        lnDeduct   = IIF(EVALUATE(This.lcTmpRetLn+'.cStatus') = "S" , lnOldRAOpn , ;
                         IIF(lnCurRAOpn < lnOldRAOpn , ;
                             lnOldRAOpn - lnCurRAOpn , 0))
      ELSE
        lnDeduct   = 0
      ENDIF
    ENDIF

    *-- Total Canceled Qty.
    REPLACE RetAuth.nreta_can WITH RetAuth.nreta_can + lnDeduct, ;
            RetAuth.nreta_opn WITH RetAuth.nreta_opn - EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
            RetAuth.nreta_bud WITH RetAuth.nreta_can + RetAuth.nreta_opn, ;
            RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt - (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')) IN RetAuth

    *-- Delete the current line.
    SELECT (This.lcTmpRetLn)
    REPLACE cStatus WITH SUBSTR('DDS',AT(cStatus,'SMA'),1)
    DELETE
    *B608234,1 WAM 08/23/2007 Do not go top after delete line
    *GO TOP
    *B608234,1 WAM 08/23/2007 (End)

    *-- If there is no lines in the R/A temp. lines file.
    IF This.lnNoOfLines = 0 && Private

      *Don't include lnNoOfLines when determining the invoice object status
      *as it should be always enabled in Add/Edit modes
      This.lcEntrStat= IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EOF(This.lcTmpRetLn) .AND. !EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")
      This.lfRefHdr()
    ENDIF
    *B608234,1 WAM 08/23/2007 Do not go top after delete line
    *This.loForm.PageFrame.Page2.grdRALines.Refresh()
    This.loForm.PageFrame.Page2.grdRALines.Setfocus
    *B608234,1 WAM 08/23/2007 (End)

    This.lfWhenBrow()

  ENDIF

  ENDFUNC
*--end of lfvRemLine

  *!*************************************************************
  *! Name      : lfvSizesEntry
  *! Developer : Khalid Mohi El-Din Mohamed
  *! Date      : 02/06/2006
  *! Purpose   : Before valid style check if extended size scale.
  *!*************************************************************
  *! Parameters:
  *!*************************************************************
  *! Return    :
  *!*************************************************************
  *  N038891,1 KHM 01/26/2006
  *!*************************************************************
  FUNCTION lfvSizesEntry
  LPARAMETERS lcStyleV
  PRIVATE llReturnValue
  llReturnValue = .F.
  *-- If the style division different from the header division, reenter the style.
  IF STYLE.cDivision <> RetAuth.cDivision
    *** Style / Division confilct! ***
    *** <  Ok  > ***
    =gfModalGen("INM46003B00000" , "DIALOG")
    This.lfStyCan()
    RETURN .F.
  ENDIF
  *! E303029,1 MMT 12/26/2011 correct the calling of non-major programs within the SaaS environemnt[START]	
  *DO FORM (oAriaApplication.ScreenHome+"RM\RMSSCL") WITH This,lcStyleV TO llReturnValue
  loCallingForm = This
  lcStyleValue = lcStyleV
  =gfCallForm('RMSSCL','RM',"loCallingForm ,lcStyleValue","llReturnValue")
  *! E303029,1 MMT 12/26/2011 correct the calling of non-major programs within the SaaS environemnt[END]
  IF llReturnValue
    *-- Fill the detail reason popup with the right value.
    This.lcReason = RetAuth.reason && Private  Global

    lcTempFile = This.cExtendedSizeScaleTempFile


    SELECT (lcTempFile)
    SCAN FOR TotQty > 0
      SELECT (This.lcTmpRetLn)
      LOCATE FOR EMPTY(STYLE)
      IF !FOUND()
        APPEND BLANK
      ENDIF
      REPLACE RaNo    WITH IIF(This.loFormSet.ActiveMode="E" , RetAuth.rano , SPACE(6)) ;
              Account WITH RetAuth.Account ;
              Reason  WITH This.lcReason ;
              CSTATUS WITH 'A';
              Style   WITH EVALUATE(lcTempFile+'.Style')

      This.lfvStyle(.F.,0,Style, ' ', Style)

      SELECT (This.lcTmpRetLn)
      REPLACE PRICE    WITH EVALUATE(lcTempFile+'.Price') ;
              Qty1     WITH EVALUATE(lcTempFile+'.Qty1') ;
              Qty2     WITH EVALUATE(lcTempFile+'.Qty2') ;
              Qty3     WITH EVALUATE(lcTempFile+'.Qty3') ;
              Qty4     WITH EVALUATE(lcTempFile+'.Qty4') ;
              Qty5     WITH EVALUATE(lcTempFile+'.Qty5') ;
              Qty6     WITH EVALUATE(lcTempFile+'.Qty6') ;
              Qty7     WITH EVALUATE(lcTempFile+'.Qty7') ;
              Qty8     WITH EVALUATE(lcTempFile+'.Qty8') ;
              TotQty   WITH EVALUATE(lcTempFile+'.TotQty') ;
              REASON   WITH RetAuth.reason ;
              TAX_RATE WITH IIF(This.llTaxYes , This.lnTaxRate , 0) ;
              nPstRate WITH IIF(This.llTaxYes .AND. This.llIsCanada , This.lnPstRate , 0) ;
              Dyelot   WITH This.lcDyeLot ;
              CSTATUS  WITH IIF(CSTATUS = 'S','M',CSTATUS)

      *-- Call global function to add audit fields info.
      =gfAdd_Info(This.lcTmpRetLn)

      *-- Add 1 to the lines records counter.
      This.lnNoOfLines = This.lnNoOfLines + 1

      REPLACE RetAuth.nreta_opn WITH RetAuth.nreta_opn + EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
              RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt + (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')),;
              RetAuth.nreta_bud WITH RetAuth.nreta_can + RetAuth.nreta_opn IN RetAuth
      This.lnTotQty  = Totqty
      This.lnTotal   = Amount

    ENDSCAN
    SELECT (This.lcTmpRetLn)
    LOCATE
    This.lfWhenBrow()
  ENDIF


  *!*************************************************************
  *! Name      : lfvStyle
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the cntStyle control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvStyle
  LPARAMETERS llBrowse,lnItemPart,lcValue,lcOldValue,lcStyleVal

  *This.lcStyle = EVALUATE(This.lcTmpRetLn+'.Style')

  *! B608974,1 MMT 08/18/2009 Fix bug of can add style if Style Segment entry setups is set to yes [START]
  *This.lcStyle = lcValue
  This.lcStyle = lcStyleVal
  *! B608974,1 MMT 08/18/2009 Fix bug of can add style if Style Segment entry setups is set to yes [END]

  *-- If do not change the style & do not press the browse icon.
  IF (lcOldValue = This.lcStyle .OR. EMPTY(This.lcStyle)) .AND. !llBrowse
    RETURN
  ENDIF
  SELECT STYLE

  llBrowse = .F.
  IF llBrowse .OR. !This.Style.SEEK(PADR(This.lcStyle,19))
    *Enable the soft seek in the style browse.
    *-- Call the global style browse.
    This.lcStyle = PADR(gfStyBrw("I" , This.lcStyle , "" , .F.),19)
    SELECT (This.lcTmpRetLn)
    This.lfBrLine()
  ENDIF

  llBrowse = .F.

  *-- If enter valid style.
  IF !EMPTY(This.lcStyle) .AND. This.STYLE.SEEK(PADR(This.lcStyle,19))
    *-- Get the selected style discount code..
    lcDiscCode = Style.cDiscCode

    *-- If the style division different from the header division, reenter the style.
    IF STYLE.cDivision <> RetAuth.cDivision
      *** Style / Division confilct! ***
      *** <  Ok  > ***
      =gfModalGen("INM46003B00000" , "DIALOG")
      This.lfStyCan()
      RETURN .F.
    *--program enter this path if style.cdivision equal ladata[19]
    *-- we put endif instead of else to allow the program alwayse enter
    *ELSE
    ENDIF &&STYLE.cDivision <> RetAuth.cDivision
      *-- Check if the entered style assigned to the header warehouse.
      IF !This.StyDye.SEEK(PADR(This.lcStyle,19) + RetAuth.cwarecode + SPACE(10))
        *** Style: ALLTRIM(lcStyle) is not assigned ***
        *** to warehouse: ALLTRIM(laData[7])   ***
        *** <  Add  > - < Reenter > ***
        lcTmpTxt = ALLTRIM(This.lcStyle) + "|" + ALLTRIM(RetAuth.cwarecode)
        IF gfModalGen("QRM46004B00031" , "DIALOG" , lcTmpTxt) = 1
          *-- Call global function to assign the warehouse.
          DO gpAdStyWar WITH PADR(This.lcStyle,19) , SPACE(10) , RetAuth.cwarecode
        ELSE
          *-- Reenter the style.
          This.lfStyCan()
          RETURN .F.
        ENDIF
      ENDIF &&!SEEK(PADR(This.lcStyle,19) + RetAuth.cwarecode + SPACE(10) , 'StyDye')
      *-- Get the style scale.
      This.Style.SEEK(PADR(This.lcStyle,19))
      IF This.Scale.SEEK('S' + STYLE.SCALE)
        This.lnScale     = SCALE.CNT
        FOR lnCount = 1 TO 8
          lcCount = ALLTRIM(STR(lnCount))
          This.laSize[lnCount] = SCALE.SZ&lcCount
          IF lnCount <= This.lnScale
            *SHOW GET This.laQtyStk[lnCount] ENABLE && Revise
          ELSE
            *SHOW GET This.laQtyStk[lnCount] DISABLE &&Revise
          ENDIF
        ENDFOR
      ENDIF && SEEK('S' + STYLE.SCALE , 'SCALE')
      *-- Get the customer price level.
      This.loForm.PageFrame.Page2.cntSizes.Scale = STYLE.SCALE
      This.lcCustPLvl = IIF(LEN(ALLTRIM(This.lcCustPLvl))=0,'A',This.lcCustPLvl)

      This.lcDyeLot  = SPACE(10)
      llRetry   = .F.
      llShipped = .F.

      *-- Get the tax rate from the invoice header file.
      IF !EMPTY(RetAuth.invoice)
        This.InvHdr.SEEK(RetAuth.invoice)
        SELECT INVLINE
        This.INVLINE.SetOrder('INVLINES')
        IF This.INVLINE.SEEK(PADR(This.lcStyle,19) + RetAuth.cwarecode)
          This.lnprice = InvLine.PRICE * (1-This.lnDiscPCnt/100)
          IF This.llDyelot
            This.lcDyeLot = InvLine.Dyelot
          ENDIF
          llShipped  = .T.
        ELSE
          llRetry    = .T.
        ENDIF
      ELSE && !EMPTY(RetAuth.invoice) && Global
        *-- If no invoice was entered then search the lines for price.
        llRetry = .T.
      ENDIF && !EMPTY(RetAuth.invoice) && Global

      *-- Search for the style in the invoice header file if there is no invoice #.
      IF llRetry
        SELECT INVLINE
        This.INVLINE.SetOrder('INVLINES')
        SELECT INVHDR
        *-- Make invhdra the active index tag
        SET ORDER TO TAG INVHDRA DESCENDING && Revise
        =This.INVHDR.SEEK(RetAuth.Account)
        *-- Searching for the last invoice this style was shipped on using
        *-- the same current currency.
        WAIT WINDOW 'Searching for the last invoice this style was shipped on ....' NOWAIT

        SCAN REST WHILE ACCOUNT = RetAuth.Account FOR Status <> 'V'

          IF (This.llMulCurr .AND. (INVHDR.cCurrCode = RetAuth.ccurrcode)) .OR. !This.llMulCurr
            lcSrchInv = INVHDR.INVOICE
            SELECT INVLINE
            IF This.INVLINE.SEEK(PADR(This.lcStyle,19) + lcSrchInv)
              This.lnprice   = PRICE * (1-INVHDR.DISCPCNT/100)
              llShipped = .T.
              IF This.llDyelot
                This.lcDyeLot = IIF(InvHdr.cWareCode=RetAuth.cwarecode,InvLine.Dyelot,SPACE(10))
              ENDIF
              *Exit for the scan to take the latest invoice price.
              EXIT
            ENDIF &&SEEK(PADR(This.lcStyle,19) + lcSrchInv , "INVLINE")
          ENDIF &&(This.llMulCurr .AND. (INVHDR.cCurrCode = RetAuth.ccurrcode)) .OR. !This.llMulCurr
          SELECT INVHDR
        ENDSCAN
        WAIT CLEAR
        SELECT INVLINE
        This.INVLINE.SetOrder('INVLINE')
        SELECT INVHDR
        This.INVHDR.SetOrder('INVHDR')

      ENDIF && llRetry

      IF !llShipped
        *** This style was not shipped to this customer! continue? ***
        *** <  Yes  > - <  No  > ***
        IF gfModalGen("QRM46005B00006" , "DIALOG") = 2
          This.lfStyCan()
          RETURN .F.
        ENDIF
        This.lnPstRate = This.lnCusPstRt
      ENDIF && !llShipped
    IF !llShipped

      *Move this line after checking if this style was shipped to the customer or not.
      This.lnprice = This.lfGetprice(This.lcStyle,This.lcCustPLvl,This.lnTotQty)

      *-- If the discount code for the selected style not empty.
      IF !EMPTY(lcDiscCode)
        *-- Get the discount percentage for this discount code from the codes file.
        DECLARE laStyDisc[1,2]
        lnDiscPCnt = This.lnDiscPCnt
        laStyDisc[1,1] = 'DISCPCNT'
        laStyDisc[1,2] = 'lnDiscPCnt'
        =gfRltFld(lcDiscCode , @laStyDisc , "CDISCCODE")
        This.lnDiscPCnt = lnDiscPCnt
        *-- If the discount percentage greater than zero...
        IF This.lnDiscPCnt > 0 && Private
          lcTmpStr = ALLTRIM(STR(This.lnDiscPCnt)) +"|" + ALLTRIM(STR(This.lnprice,10,3)) + ;
                     "|" + ALLTRIM(STR(This.lnprice * This.lnDiscPCnt /100,10,3)) + "|" + ;
                     ALLTRIM(STR(This.lnprice - (This.lnprice * This.lnDiscPCnt / 100),10,3))
          *** There is discount percentage on this style : {lnDiscPcnt} ***
          *** Gross Price is : {lnPrice}
          *** Discount amount is : {lnPrice * lnDiscPcnt /100}
          *** Net Price is : {lnPrice - (lnPrice * lnDiscPcnt / 100)}
          =gfModalGen("INM46030B00000" , "DIALOG" , lcTmpStr)

          *-- Get a discount on the total gross price, & inform the user.
          This.lnprice = This.lnprice - (This.lnprice * This.lnDiscPCnt / 100)
        ENDIF && This.lnDiscPCnt > 0
      ENDIF && !EMPTY(lcDiscCode)
    ENDIF && !llShipped
    *Adjust Open and Open Amount for case of changing the style.
    IF !This.loFormSet.ActiveMode="V"
      *-- Total Open Qty.
      REPLACE RetAuth.nreta_opn WITH RetAuth.nreta_opn - EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
              RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt - (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')) IN RetAuth
    ENDIF


    *-- Add line into the R/A temp. file.
    SELECT (This.lcTmpRetLn)
    REPLACE STYLE    WITH PADR(This.lcStyle,19) ;
            PRICE    WITH This.lnprice ;
            REASON   WITH RetAuth.reason ;
            TAX_RATE WITH IIF(This.llTaxYes , This.lnTaxRate , 0) ;
            nPstRate WITH IIF(This.llTaxYes .AND. This.llIsCanada , This.lnPstRate , 0) ;
            Dyelot   WITH This.lcDyeLot ;
            CSTATUS  WITH IIF(CSTATUS = 'S','M',CSTATUS)

    *Add true in the logical field if this style was shipped to this customer befor.
    REPLACE lShipped  WITH llShipped
  ELSE && !EMPTY(This.lcStyle) .AND. SEEK(PADR(This.lcStyle,19) , "STYLE")
    *-- Reenter the style.
    This.lfStyCan()
    RETURN .F.
  ENDIF && !EMPTY(This.lcStyle) .AND. SEEK(PADR(This.lcStyle,19) , "STYLE")

  SELECT (This.lcTmpRetLn) && Private
  This.loForm.PageFrame.Page2.Refresh()

  *-- Call the when browse function.
  This.lfWhenBrow()
  *Adjust Open and Open Amount for case of changing the style.
  IF !This.loFormSet.ActiveMode="V"
    *-- Total Open Qty.
    REPLACE RetAuth.nreta_opn WITH RetAuth.nreta_opn + EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
            RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt + (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')),;
            RetAuth.nreta_bud WITH RetAuth.nreta_can + RetAuth.nreta_opn IN RetAuth
    This.lnTotQty  = Totqty
    This.lnTotal   = Amount
  ENDIF

  This.loForm.PageFrame.Page2.kbDyeLot.lcStyleCode = lcStyleVal
  This.loForm.PageFrame.Page2.kbDyeLot.lcWarecode  = This.loForm.PageFrame.Page1.cbocWareCode.Value


  ENDFUNC
*--end of lfvStyle


  *!*************************************************************
  *! Name      : lfStyCan
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Cancel adding a style
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfStyCan

  SELECT (This.lcTmpRetLn)
  IF EVALUATE(This.lcTmpRetLn+'.CSTATUS') = 'A'
    *-- If the record was new, change the status to be "S->Same"
    REPLACE CSTATUS WITH 'S'
    DELETE
    GO TOP
    This.lcStyle     = EVALUATE(This.lcTmpRetLn+'.STYLE')
    *-- Subtract 1 from the records counter.
    This.lnNoOfLines = This.lnNoOfLines - 1
    IF This.lnNoOfLines = 0
      *Don't include lnNoOfLines when determining the invoice object status
      *as it should be always enabled in Add/Edit modes
      This.lcEntrStat= IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") .AND. EOF(This.lcTmpRetLn) .AND. !EMPTY(RetAuth.invoice) , "ENABLE" , "DISABLE")
      This.lcInvStat = IIF((This.loFormSet.ActiveMode="E" .OR. This.loFormSet.ActiveMode="A") , "ENABLE" , "DISABLE")
    ENDIF
  ELSE
    This.lcStyle = EVALUATE(This.lcTmpRetLn+'.STYLE')
  ENDIF
  This.loForm.PageFrame.Page2.Refresh()
  *-- Call the when browse function.
  This.lfWhenBrow()

  ENDFUNC
*--end of lfStyCan


  *!*************************************************************
  *! Name      : lfGetprice
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Get Style Price
  *!*************************************************************
  *! Parameters:  lcStyle : Style
  *!              lcLevel : Price level
  *!              lnQuantity : Total Quantity
  *!*************************************************************
  *! Return    : Alternative price
  *!*************************************************************
  FUNCTION lfGetprice
  PARAMETERS lcStyle,lcLevel,lnQuantity
  PRIVATE lnStyPric,lcLevel,lnQuantity

  *Get the style price level.
  This.Style.SEEK(This.lcStyle)
  IF lcLevel = 'Q'
    DO CASE
      CASE Style.nAtQtyC > 0 AND lnQuantity > Style.nAtQtyC
        lcLevel = 'C'
      CASE Style.nAtQtyB > 0 AND lnQuantity > Style.nAtQtyB
        lcLevel = 'B'
      OTHERWISE
        lcLevel = 'A'
    ENDCASE
  ELSE
    lcLevel=IIF(INLIST(lcLevel,'A','B','C'),lcLevel,'A')
  ENDIF

  lnStyPric = IIF(!This.llMulCurr OR RetAuth.ccurrcode = oAriaApplication.BaseCurrency,Style.Price&lcLevel,;
                        gfStyPrice(This.lcStyle,This.lcCustPLvl,RetAuth.ccurrcode))

  *Call global function to get the price level.
  *Call local function to select between the different existing
  *price levels if the selected one is zero.
  *ASM, Call the global function lfCheckPri instead of lfCheckPric [Start]
  *RETURN(IIF(lnStyPric = 0 , This.lfCheckPric(This.lcStyle,lcLevel) , lnStyPric))
  RETURN(IIF(lnStyPric = 0 , lfCheckPri(This.lcStyle,lcLevel) , lnStyPric))
  *ASM, Call the global function lfCheckPri instead of lfCheckPric [End]
  ENDFUNC
*--end of lfGetprice


  *!*************************************************************
  *! Name      : lfCheckPric
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Select alternative price level (No Need for it. Replaced by the global function lfCheckPri
  *!*************************************************************
  *! Parameters:  lcStyle : Style
  *!              lcLevel : Price level
  *!*************************************************************
  *! Return    : Alternative price
  *!*************************************************************
  FUNCTION lfCheckPric
  PARAMETERS lcStyle,lcLevel
  PRIVATE lcTitle,lcPrompt,lcPrompt1,lcPrompt2,lcPrompt3,lnStyPric,lnStyPric1,;
          lnStyPric2,lnStyPric3, lnPrice

  *Seek in the style file to get the right price level.
  This.Style.SEEK(This.lcStyle)
  lcTitle  = PROPER(This.lcStyHdr)+': '+This.lcStyle
  lnStyPric1 = IIF(!This.llMulCurr OR RetAuth.ccurrcode=oAriaApplication.BaseCurrency,Style.PriceA,;
                         gfStyPrice(This.lcStyle,'A',RetAuth.ccurrcode))
  lnStyPric2 = IIF(!This.llMulCurr OR RetAuth.ccurrcode=oAriaApplication.BaseCurrency,Style.PriceB,;
                         gfStyPrice(This.lcStyle,'B',RetAuth.ccurrcode))
  lnStyPric3 = IIF(!This.llMulCurr OR RetAuth.ccurrcode=oAriaApplication.BaseCurrency,Style.PriceC,;
                         gfStyPrice(This.lcStyle,'C',RetAuth.ccurrcode))
  lnStyPric  = IIF(lnStyPric1 >0,1,IIF(lnStyPric2 >0,2,AT(lcLevel,'ABC')))
  lcPrompt   = "Price level '"+lcLevel+"' is zero. Proceed with"
  lcPrompt1  = 'Price level A, '+ALLTRIM(STR(lnStyPric1,12,2))
  lcPrompt2  = 'Price level B, '+ALLTRIM(STR(lnStyPric2,12,2))
  lcPrompt3  = 'Price level C, '+ALLTRIM(STR(lnStyPric3,12,2))

  This.lnprice    = 1

  *Call screen to select price levels.
  *DO (oAriaApplication.ScreenHome+"SOSTYPRI.SPX")

  RETURN(EVAL('lnStyPric'+STR(This.lnprice,1))) && Private

  ENDFUNC
*--end of lfCheckPric



  *!*************************************************************
  *! Name      : lfvReson2
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the cboReason Control in the Details Page
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvReson2

  *-- Update the R/A lines temp. file.
  REPLACE CSTATUS WITH IIF(CSTATUS = 'S','M',CSTATUS) IN (This.lcTmpRetLn)

  RETURN 1
  ENDFUNC
*--end of lfvReson2


  *!*************************************************************
  *! Name      : lfvPrice
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the txtPrice Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvPrice

  *Update the open amounts in the header folder if change the price.
  *-- Total Open Amount.
  REPLACE RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt - ;
     (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')) IN RetAuth

  *-- Update the price & the amount in the R/A lines temp. files.
  SELECT (This.lcTmpRetLn)
  REPLACE Price   WITH This.lnprice ;
          Amount  WITH Totqty * Price ;
          CSTATUS WITH IIF(CSTATUS = 'S','M',CSTATUS)

  *Update the open amounts in the header folder if change the price.
  *-- Total Open Amount.
  REPLACE RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt + ;
     (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')) IN RetAuth

  *-- Refresh the objects in the detail screen.
  This.lnprice  = Price
  This.lnTotal  = Amount
  This.loForm.PageFrame.Page2.Refresh()

  ENDFUNC
*--end of lfvPrice


  *!*************************************************************
  *! Name      : lfvTotQty
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the txtTotQty Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvTotQty

  *-- Update the amount in the R/A lines temp. files.
  SELECT (This.lcTmpRetLn)
  REPLACE Amount  WITH This.lnTotqty * Price, ;
          CSTATUS WITH IIF(CSTATUS = 'S','M',CSTATUS)

  This.lnTotal  = Amount
  This.loForm.PageFrame.Page2.Refresh()


  ENDFUNC
*--end of lfvTotQty


  *!*************************************************************
  *! Name      : lfvQty
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the Qty of the Sizes
  *!*************************************************************
  *! Parameters: lnFrom -> No. to know the qty. no.
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvQty
  PARAMETERS lnFrom
  LOCAL lcFrom, loFrom

  lcFrom = ALLTRIM(STR(lnFrom))
  loFrom = This.loForm.PageFrame.Page2.cntSizes.txtQty&lcFrom

  IF loFrom.OldValue <> loFrom.Value

    *-- Total Open Qty.
    REPLACE RetAuth.nreta_opn WITH RetAuth.nreta_opn - EVALUATE(This.lcTmpRetLn+'.TotQty'), ;
            RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt - (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')) IN RetAuth

    IF This.RALINE.SEEK(RetAuth.rano + PADR(EVALUATE(This.lcTmpRetLn+'.Style'),19)) AND ;
       EVALUATE(This.lcTmpRetLn+'.cStatus') <> "A"
      lnOldRAOpn = RALINE.nTotOpnQty - EVALUATE(This.lcTmpRetLn+'.TotQty')
    ENDIF

    *-- Update the qty., total qty. and amount in the R/A lines temp. files.
    SELECT (This.lcTmpRetLn)
    REPLACE Totqty     WITH qty1+qty2+qty3+qty4+qty5+qty6+qty7+qty8
    REPLACE Amount     WITH TOTQTY * PRICE, CSTATUS    WITH IIF(CSTATUS = 'S','M',CSTATUS)

    *-- If this record is added new in this session, Default the open qty. with
    *-- the entered qty.
    IF EVALUATE(This.lcTmpRetLn+'.cStatus') = "A"
      REPLACE nOpnQty&lcFrom WITH qty&lcFrom, ;
              nTotOpnQty     WITH qty1+qty2+qty3+qty4+qty5+qty6+qty7+qty8
    ENDIF

    *-- Get the original Qty. & open qty. from the RALINE file if not new record.
    IF EVALUATE(This.lcTmpRetLn+'.cStatus') = "A"
      lnOldRAOpn = 0
      lnCurRAOpn = 0
    ELSE
      IF This.RALINE.SEEK(RetAuth.rano + PADR(EVALUATE(This.lcTmpRetLn+'.Style'),19))
        lnCurRAOpn = MAX(0 , RALINE.nTotOpnQty - EVALUATE(This.lcTmpRetLn+'.TotQty'))
      ELSE
        lnOldRAOpn = 0
        lnCurRAOpn = 0
      ENDIF
    ENDIF

    *Check if this style was shipped to this customer before.
    IF !EVALUATE(This.lcTmpRetLn+'.lShipped')
      *Get the price level per qty.
      This.lcCustPLvl = IIF(EMPTY(CUSTOMER.PRICELVL) , "A" , CUSTOMER.PRICELVL)
      IF This.lcCustPLvl = "Q"
        lnCurPrice = This.lfGetprice(This.lcStyle,This.lcCustPLvl,EVALUATE(This.lcTmpRetLn+'.TOTQTY'))

        *Calculate the discount for the current style price.
        lnCurPrice = This.lfCalcDisc(This.lcStyle , lnCurPrice)

        *Update the price.
        SELECT (This.lcTmpRetLn) && Private
        REPLACE Price   WITH lnCurPrice ;
                Amount  WITH Totqty * Price
      ENDIF
      This.lnprice = Price
      This.loForm.PageFrame.Page2.txtPrice.Refresh()
    ENDIF
    This.Invline.SetOrder('InvLine')

    *-- Total Canceled Qty.
    REPLACE RetAuth.nreta_can WITH RetAuth.nreta_can - lnOldRAOpn + lnCurRAOpn, ;
            RetAuth.nreta_opn WITH RetAuth.nreta_opn + EVALUATE(This.lcTmpRetLn+'.TotQty') IN RetAuth
    REPLACE RetAuth.nreta_bud WITH RetAuth.nreta_can + RetAuth.nreta_opn, ;
            RetAuth.nRtOpnAmt WITH RetAuth.nRtOpnAmt + ;
            (EVALUATE(This.lcTmpRetLn+'.TotQty') * EVALUATE(This.lcTmpRetLn+'.Price')) IN RetAuth

    This.lnTotQty = Totqty
    This.lnTotal  = Amount

  ENDIF
  *Force to push button new if last size.

  IF lnFrom = This.lnScale
    *This.loForm.PageFrame.Page2.cmdNew.SetFocus()
  ENDIF
  This.loForm.PageFrame.Page2.Refresh()

  RETURN 1
  ENDFUNC
*--end of lfvQty


  *!*************************************************************
  *! Name      : lfCalcDisc
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Calculate style dicount for the selected price
  *!*************************************************************
  *! Parameters:  lcStyle   : Style
  *!              lnCurPric : Price level
  *!*************************************************************
  *! Return    : Price after discount
  *!*************************************************************
  FUNCTION lfCalcDisc
  PARAMETERS lcStyle , lnCurPric
  PRIVATE lcStyle , lnCurPric

  *Seek to find there is a discount for the current style price.
  IF This.Style.SEEK(This.lcStyle)
    lcDiscCode = Style.cDiscCode
    *-- If the discount code for the selected style not empty.
    IF !EMPTY(lcDiscCode)
      *-- Get the discount percentage for this discount code from the codes file.
      DECLARE laStyDisc[1,2]
      laStyDisc[1,1] = 'DISCPCNT'
      lnDiscPCnt = This.lnDiscPCnt
      laStyDisc[1,2] = 'lnDiscPCnt' && Private
      =gfRltFld(lcDiscCode , @laStyDisc , "CDISCCODE")
      This.lnDiscPCnt = lnDiscPCnt
      *-- If the discount percentage greater than zero...
      IF This.lnDiscPCnt > 0
        *Add condition to display the message only if the price changed.
        IF !(EVALUATE(This.lcTmpRetLn+'.PRICE') == (lnCurPric - (lnCurPric * This.lnDiscPCnt / 100)))
          lcTmpStr = ALLTRIM(STR(This.lnDiscPCnt)) +"|" + ALLTRIM(STR(lnCurPric,10,3)) + ;
                     "|" + ALLTRIM(STR(lnCurPric * This.lnDiscPCnt /100,10,3)) + "|" + ;
                     ALLTRIM(STR(lnCurPric - (lnCurPric * This.lnDiscPCnt / 100),10,3))
          *** There is discount percentage on this style : {lnDiscPcnt} ***
          *** Gross Price is : {lnCurPric}
          *** Discount amount is : {lnCurPric * lnDiscPcnt /100}
          *** Net Price is : {lnCurPric - (lnCurPric * lnDiscPcnt / 100)}
          =gfModalGen("INM46030B00000" , "DIALOG" , lcTmpStr)

        ENDIF
        *-- Get a discount on the total gross price, & inform the user.
        lnCurPric = lnCurPric - (lnCurPric * This.lnDiscPCnt / 100)
      ENDIF
    ENDIF
  ENDIF

  *Return with the current price.
  RETURN lnCurPric
  ENDFUNC
*--end of lfCalcDisc


  *!*************************************************************
  *! Name      : lfvDyelot
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate the kbDyeLot Control
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfvDyelot
  LOCAL kbDyelot

  *-- If entered new dyelot.
  kbDyelot = This.loForm.PageFrame.Page2.kbDyelot
  IF !EMPTY(kbDyelot.KeyTextBox.Value) .AND. kbDyelot.KeyTextBox.OldValue <> kbDyelot.KeyTextBox.Value
    *-- If entered invalid dyelot, browse the available dyelots in the system.
    IF !This.StyDye.SEEK(PADR(This.lcStyle,19) + RetAuth.cwarecode + This.lcDyeLot) .OR. "?" $ kbDyelot.KeyTextBox.Value
      kbDyelot.KeyTextBox.Value = ''
      lcDyelot = kbDyelot.KeyTextBox.Value
      IF !SDYEBROW(PADR(This.lcStyle,19) , @lcDyeLot , .T. , RetAuth.cretnote1)
        kbDyelot.KeyTextBox.Value = lcDyelot
        IF EMPTY(kbDyelot.KeyTextBox.Value)
          *** The dyelot cannot be empty.  This line will be removed. ***
          *** <  OK  > ***
          =gfModalGen("INM46007B00000" , "DIALOG")
          This.lfStyCan()
          RETURN
        ENDIF
      ENDIF
    ENDIF
    *-- Update the dyelot in the R/A lines temp. files.
    SELECT (This.lcTmpRetLn)
    REPLACE DYELOT  WITH kbDyelot.KeyTextBox.Value, CSTATUS WITH IIF(CSTATUS = 'S','M',CSTATUS)
    kbDyelot.Refresh()
  ENDIF

  ENDFUNC
*--end of lfvDyelot


  *!*************************************************************
  *! Name      : lfBeforeDelete
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : Called From The BeforeDelete Event of the FormSet
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : True / False
  *!*************************************************************
  FUNCTION lfBeforeDelete
  LOCAL lcAsk

  lcAsk = IIF(RetAuth.Status<>'X',"Do you want to Cancel this record?",;
              "Do you want to UnCancel this record?")
  IF MESSAGEBOX(lcAsk,36,This.loForm.Caption) <> 6
    RETURN .F.
  ENDIF

  *Open the style dyelot file.
  This.lfopenfile(oAriaApplication.DataDir+'StyDye',oAriaApplication.DataDir+'StyDye')

  SELECT RETAUTH
  *Check for status 'Electronic' And cancelled IF come from CRM module ,
  *check for not EMPTY allneeded filed in updated file CRMESG
  IF (This.llCrmIns AND RETAUTH.lFromWeb) .AND.  RetAuth.Status $ "EX"
    lcMto       = IIF(This.Customer.SEEK('M'+RetAuth.Account),EVALUATE('Customer.' + gfGetMemVar('M_CONFMAIL')),'')
    lCLetterid  = gfGetMemVar('M_RAAPR' , oAriaApplication.ActiveCompanyID)

    IF EMPTY(lcMto)
      *The Confirmation E-mail Address on the setup screen is blank.
      *<OK>
      =gfModalGen('TRM46039B00000','DIALOG')
      RETURN .F.
    ENDIF

    DO CASE
      CASE RetAuth.Status = "E"
        IF EMPTY(lCLetterid)
          *The Cancelled ID on the setup screen is blank. Are you sure you want to continue?
          *<OK>
          IF gfModalGen('QRM46041B32000','DIALOG') = 2
            RETURN .F.
          ENDIF
        ENDIF
    ENDCASE
  ENDIF

  DO CASE
    *-- You caccnot cancel a completed R/A.
    CASE RetAuth.Status = "C"
      *** R/A has been received.  Cannot cancel it! ***
      *** < Ok > ***
      =gfModalGen("INM46019B00000" , "DIALOG")
      RETURN .F.
    *-- If the R/A status is opened.
  ENDCASE

  ENDFUNC
*--end of lfBeforeDelelet


  *!*************************************************************
  *! Name      : lpDelScr
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be called from the Delete mthod of the FormSet
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lpDelScr
  LOCAL lcKey

  lcKey = This.loForm.kbrano.KeyTextBox.Value

  DO CASE

    CASE RetAuth.Status  = "O"
      *** There is a partially receive had happened for the ***
      *** current R/A.  Do you wish to cancel the rest of ***
      *** the current R/A? ***
      *** < Yes > - < No > ***
      IF (RetAuth.nreta_rec = 0) .OR. (RetAuth.nreta_rec > 0 .AND. gfModalGen("INM46021B00006" , "DIALOG") = 1)
        lnTotalCan = 0
        SELECT RALINE
        This.RALINE.SEEK(RetAuth.rano)
        SCAN FOR RANO = RetAuth.rano
          *-- Consider the open qty. as canceled qty.
          lnTotalCan = lnTotalCan + nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8
          *-- Update the Ra values in the style file with the canceled qty.
          This.Style.SEEK(RALINE.Style)

          IF Style.lInvSty
            REPLACE STYLE.RA1   WITH STYLE.RA1 - RALINE.nOpnQty1 ;
                    STYLE.RA2   WITH STYLE.RA2 - RALINE.nOpnQty2 ;
                    STYLE.RA3   WITH STYLE.RA3 - RALINE.nOpnQty3 ;
                    STYLE.RA4   WITH STYLE.RA4 - RALINE.nOpnQty4 ;
                    STYLE.RA5   WITH STYLE.RA5 - RALINE.nOpnQty5 ;
                    STYLE.RA6   WITH STYLE.RA6 - RALINE.nOpnQty6 ;
                    STYLE.RA7   WITH STYLE.RA7 - RALINE.nOpnQty7 ;
                    STYLE.RA8   WITH STYLE.RA8 - RALINE.nOpnQty8 ;
                    STYLE.TotRA WITH STYLE.RA1+STYLE.RA2+STYLE.RA3+STYLE.RA4+STYLE.RA5+STYLE.RA6+STYLE.RA7+STYLE.RA8 ;
                    IN Style
                    *-- Add the modified record to the CursorUpdate
                    This.Style.Replace()
            *-- Update the Ra values for each style+warehouse with the canceled qty.
            IF This.STYDYE.SEEK(RALINE.Style + RetAuth.cwarecode + SPACE(10))
              REPLACE STYDYE.RA1   WITH STYDYE.RA1 - RALINE.nOpnQty1 ;
                      STYDYE.RA2   WITH STYDYE.RA2 - RALINE.nOpnQty2 ;
                      STYDYE.RA3   WITH STYDYE.RA3 - RALINE.nOpnQty3 ;
                      STYDYE.RA4   WITH STYDYE.RA4 - RALINE.nOpnQty4 ;
                      STYDYE.RA5   WITH STYDYE.RA5 - RALINE.nOpnQty5 ;
                      STYDYE.RA6   WITH STYDYE.RA6 - RALINE.nOpnQty6 ;
                      STYDYE.RA7   WITH STYDYE.RA7 - RALINE.nOpnQty7 ;
                      STYDYE.RA8   WITH STYDYE.RA8 - RALINE.nOpnQty8 ;
                      STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                      IN StyDye
                      *-- Add the modified record to the CursorUpdate
                      This.StyDye.Replace()
            ENDIF
            *-- Update the Ra values for each style+warehouse+dyelot with the canceled qty.
            *Make sure the style uses Dylots
            IF This.llDyelot AND !EMPTY(RALINE.Dyelot) .AND. This.STYDYE.SEEK(RALINE.Style + RetAuth.cwarecode + RALINE.Dyelot)
              REPLACE STYDYE.RA1   WITH STYDYE.RA1 - RALINE.nOpnQty1 ;
                      STYDYE.RA2   WITH STYDYE.RA2 - RALINE.nOpnQty2 ;
                      STYDYE.RA3   WITH STYDYE.RA3 - RALINE.nOpnQty3 ;
                      STYDYE.RA4   WITH STYDYE.RA4 - RALINE.nOpnQty4 ;
                      STYDYE.RA5   WITH STYDYE.RA5 - RALINE.nOpnQty5 ;
                      STYDYE.RA6   WITH STYDYE.RA6 - RALINE.nOpnQty6 ;
                      STYDYE.RA7   WITH STYDYE.RA7 - RALINE.nOpnQty7 ;
                      STYDYE.RA8   WITH STYDYE.RA8 - RALINE.nOpnQty8 ;
                      STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                      IN StyDye
                      *-- Add the modified record to the CursorUpdate
                      This.StyDye.Replace()
            ENDIF
          ENDIF
        ENDSCAN
        SELECT RETAUTH
        *-- Instead of deleting the RA, just cancel it.
        REPLACE Status    WITH IIF(RetAuth.nreta_rec = 0 , "X" , "C") ;
                nRetA_Can WITH lnTotalCan ;
                nRetA_Opn WITH 0
      ENDIF
    *-- If the R/A status was canceled, change it to be open.
    CASE RetAuth.Status = 'X'
      lnTotalOpn = 0
      SELECT RALINE
      This.RALINE.SEEK(RetAuth.rano)
      SCAN FOR RANO = RetAuth.rano
        *-- Calculate the opened qty.
        lnTotalOpn = lnTotalOpn + nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8
        *-- Update the opened qty. in the R/A lines file.
        SELECT RALINE
        REPLACE RALINE.nOpnQty1   WITH RALINE.Qty1 ;
                RALINE.nOpnQty2   WITH RALINE.Qty2 ;
                RALINE.nOpnQty3   WITH RALINE.Qty3 ;
                RALINE.nOpnQty4   WITH RALINE.Qty4 ;
                RALINE.nOpnQty5   WITH RALINE.Qty5 ;
                RALINE.nOpnQty6   WITH RALINE.Qty6 ;
                RALINE.nOpnQty7   WITH RALINE.Qty7 ;
                RALINE.nOpnQty8   WITH RALINE.Qty8 ;
                RALINE.nTotOpnQty WITH Qty1+Qty2+Qty3+Qty4+Qty5+Qty6+Qty7+Qty8
                *-- Add the modified record to the CursorUpdate
                This.RALINE.Replace()
        *-- Update the Ra values in the style file with the opened qty.
        This.Style.SEEK(RALINE.Style)
        IF Style.lInvSty
          REPLACE STYLE.RA1   WITH STYLE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1'), ;
                  STYLE.RA2   WITH STYLE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2'), ;
                  STYLE.RA3   WITH STYLE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3'), ;
                  STYLE.RA4   WITH STYLE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4'), ;
                  STYLE.RA5   WITH STYLE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5'), ;
                  STYLE.RA6   WITH STYLE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6'), ;
                  STYLE.RA7   WITH STYLE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7'), ;
                  STYLE.RA8   WITH STYLE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8'), ;
                  STYLE.TotRA WITH STYLE.RA1+STYLE.RA2+STYLE.RA3+STYLE.RA4+STYLE.RA5+STYLE.RA6+STYLE.RA7+STYLE.RA8 ;
                  IN Style
                  *-- Add the modified record to the CursorUpdate
                  This.Style.Replace()
          *-- Update the Ra values for each style+warehouse with the opened qty.
          IF This.STYDYE.SEEK(RALINE.Style + RetAuth.cwarecode + SPACE(10))
            REPLACE STYDYE.RA1   WITH STYDYE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1'), ;
                    STYDYE.RA2   WITH STYDYE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2'), ;
                    STYDYE.RA3   WITH STYDYE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3'), ;
                    STYDYE.RA4   WITH STYDYE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4'), ;
                    STYDYE.RA5   WITH STYDYE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5'), ;
                    STYDYE.RA6   WITH STYDYE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6'), ;
                    STYDYE.RA7   WITH STYDYE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7'), ;
                    STYDYE.RA8   WITH STYDYE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8'), ;
                    STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                    IN StyDye
                    *-- Add the modified record to the CursorUpdate
                    This.StyDye.Replace()
          ENDIF
          *-- Update the Ra values for each style+warehouse+dyelot with the opened qty.
          *Make sure the style uses Dylots
          IF This.llDyelot AND !EMPTY(RALINE.Dyelot) .AND. This.STYDYE.SEEK(RALINE.Style + RetAuth.cwarecode + RALINE.Dyelot)
            REPLACE STYDYE.RA1   WITH STYDYE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1'), ;
                    STYDYE.RA2   WITH STYDYE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2'), ;
                    STYDYE.RA3   WITH STYDYE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3'), ;
                    STYDYE.RA4   WITH STYDYE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4'), ;
                    STYDYE.RA5   WITH STYDYE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5'), ;
                    STYDYE.RA6   WITH STYDYE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6'), ;
                    STYDYE.RA7   WITH STYDYE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7'), ;
                    STYDYE.RA8   WITH STYDYE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8'), ;
                    STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                    IN StyDye
                    *-- Add the modified record to the CursorUpdate
                    This.StyDye.Replace()
          ENDIF
        ENDIF
      ENDSCAN
      SELECT RETAUTH
      *-- Instead of deleting the RA, just cancel it.
      REPLACE Status    WITH "O" ;
              nRetA_Can WITH 0 ;
              nRetA_Opn WITH lnTotalOpn
    *we will Search on the custom table if the mail sent we append new one
    *else we replace all with approved and the remanning text according to it[Start]
      IF (This.llCrmIns AND RETAUTH.lFromWeb)
        SELECT CRMesag
        This.CRMesag.SEEK('R' + RetAuth.RaNo)
        lcMfrom     = gfGetMemVar('M_NOTEMAIL' , oAriaApplication.ActiveCompanyID)
        lcMto       = IIF(This.Customer.SEEK('M'+RetAuth.Account),EVALUATE('Customer.' + gfGetMemVar('M_CONFMAIL')),'')

        *--if sent or not found add new one
        IF lSent OR EOF()
          APPEND BLANK
          =gfAdd_Info('CRMesag')
          REPLACE cTransType   WITH 'R',;
                  cTransNo     WITH RetAuth.RaNo,;
                  cMailFrom    WITH lcMfrom,;
                  dTransDate   WITH oAriaApplication.SystemDate,;
                  cMailTo      WITH lcMto,;
                  lSent        WITH .F.

          lCMsgSbjct  = 'Your R/A Request #:'+ RetAuth.rano + 'has been approved.'
          lCLetterid  = gfGetMemVar('M_RAAPR' , oAriaApplication.ActiveCompanyID)

          REPLACE lApprove WITH .T. , cMsgSubjct WITH lCMsgSbjct , ;
                  cLetterId WITH lCLetterid

        ELSE
          REPLACE cTransType   WITH 'R' ,;
                  cTransNo     WITH RetAuth.RaNo , ;
                  cMailFrom    WITH lcMfrom ,;
                  dTransDate   WITH oAriaApplication.SystemDate,;
                  cMailTo      WITH    lcMto, ;
                  lSent        WITH .F.

          lCMsgSbjct  = 'Your R/A Request #:'+ RetAuth.rano + 'has been approved.'
          lCLetterid  = gfGetMemVar('M_RAAPR' , oAriaApplication.ActiveCompanyID)
          REPLACE lApprove   WITH .T. ,;
                  cMsgSubjct WITH lCMsgSbjct , ;
                  cLetterId  WITH lCLetterid

        ENDIF
        *-- Add the modified record to the CursorUpdate
        This.CRMesag.Replace()
      ENDIF
    *-in case of cancel Electronic one
    CASE RetAuth.Status = 'E'
        IF This.llCrmIns
          lnTotalCan = 0
          SELECT RALINE
          This.RALINE.SEEK(RetAuth.rano)
          SCAN FOR RANO = RetAuth.rano
            *-- Consider the open qty. as canceled qty.
            lnTotalCan = lnTotalCan + nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8

          ENDSCAN
          SELECT RETAUTH
          *-- Instead of deleting the RA, just cancel it.
          REPLACE Status    WITH IIF(RetAuth.nreta_rec = 0 , "X" , "C") ;
                  nRetA_Can WITH lnTotalCan ;
                  nRetA_Opn WITH 0
        ENDIF
        *--get variables
        lcMfrom     = gfGetMemVar('M_NOTEMAIL' , oAriaApplication.ActiveCompanyID)
        lCMsgSbjct  = 'Your R/A Request #:'+ RetAuth.rano + 'has not been approved.'

        SELECT CRMESAG
        APPEND BLANK
        REPLACE CTransType WITH 'R',;
                CtransNo   WITH RetAuth.rano,;
                LApprove  WITH .F.,;
                CMailFrom  WITH lcMfrom,;
                CMailTo    WITH lcMto ,;
                CMsgSubjct WITH lCMsgSbjct,;
                CLetterid  WITH lCLetterid,;
                LSent      WITH .F.
        *-- Add the modified record to the CursorUpdate
        This.CRMesag.Replace()

  ENDCASE
  *-- Refresh laData array that hold the header info with the updated values.
  SELECT RETAUTH
  *Old: SCATTER FIELDS &lcScFields TO laData
  *-- Add the modified record to the CursorUpdate
  This.RETAUTH.Replace()

  This.lfSaveFiles()
  IF This.loFormSet.AuditTrail
    lcEvent = "DELETE"
    This.loFormSet.AddAudit(lcEvent)
  ENDIF

  SELECT RETAUTH
  This.loFormSet.SeekRecord(lcKey)
  This.lpShow()

  ENDFUNC
*--end of lpDelScr


  *!*************************************************************
  *! Name      : lfBeforeSave
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To be Called From the BeforeSave Event of the FormSet
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : True / False
  *!*************************************************************
  FUNCTION lfBeforeSave

  *ASM, Do not save if the account was left blank [Start]
  IF EMPTY(This.loForm.kbaccount.KeyTextBox.Value)
    *** You have to enter an account. Cannot save! ***
    *** <  Ok  > ***
    =gfModalGen('INM0240B00000','ALERT')
    This.loForm.kbAccount.KeyTextBox.SetFocus()
    llCSave = .F.
    RETURN .F.
  ENDIF
  *ASM, Do not save if the account was left blank [End]

  *-- Do not save if the warehouse code was not entered.
  IF This.llMultiWH
    IF EMPTY(RetAuth.cwarecode)
      *** You have to enter a warehouse. Cannot save! ***
      *** <  Ok  > ***
      =gfModalGen('INM46013B00000','ALERT')
      IF This.loForm.PageFrame.ActivePage = 1
        This.loForm.PageFrame.Page1.cobcWareCode.SetFocus()
      ENDIF
      llCSave = .F.
      RETURN .F.
    ENDIF
  ELSE
    REPLACE RetAuth.cwarecode WITH This.lcDefWare IN RetAuth
  ENDIF

  *-- Do not save if the system was multi currency & the
  *-- currency info was not entered.
  IF This.llMulCurr
    DO CASE
      CASE EMPTY(RetAuth.ccurrcode)
        *** You cannot leave the currency code empty! ***
        *** <  Ok  > ***
        =gfModalGen("INM46015B00000" , "DIALOG")
        IF This.loForm.PageFrame.ActivePage = 1
          This.loForm.PageFrame.Page1.kbcCurrCode.SetFocus()
        ENDIF
        llCSave = .F.
        RETURN .F.
      CASE EMPTY(RetAuth.nexrate)
        *** The exchange rate must be greater than zero. ***
        *** <  Ok  > ***
        =gfModalGen("INM46001B00000" , "DIALOG")
        IF This.loForm.PageFrame.ActivePage = 1
          This.loForm.PageFrame.Page1.txtnExRate.SetFocus()
        ENDIF
        llCSave = .F.
        RETURN .F.
    ENDCASE
    *-- Got exchange rate sign and unit sign.
    This.lcUntSin = ' '
    lcUntSin = This.lcUntSin
    This.lcExRSin = gfGetExSin(@lcUntSin, RetAuth.ccurrcode)
    This.lcUntSin = lcUntSin
  ELSE
    REPLACE RetAuth.ccurrcode WITH oAriaApplication.BaseCurrency, ;
            RetAuth.ncurrunit WITH 1, RetAuth.nexrate WITH 1 IN RetAuth
    This.lcUntSin   = '/'        &&  Variable to hold unit sign. && Private
    This.lcExRSin   = '/'        &&  Variable to hold exchange rate sign. && Private
  ENDIF

  *-- Flag to know if enter the add mode before or not.
  This.llAddMode  = .F.

  *-- Check the authorized amount.
  IF RetAuth.authamt = 0
    *** Total authorization amount is zero.  Continue? ***
    *** < Yes > - < No > ***
    IF gfModalGen("INM46017B00006" , "DIALOG") = 2
      IF This.loForm.PageFrame.ActivePage = 1
          This.loForm.PageFrame.Page1.txtAuth.SetFocus()
      ENDIF
      llCSave = .F.
      RETURN .F.
    ENDIF
  ENDIF

  *Do not adjust the authorized qty. & amount if there is no lines
  *in the current RA, save them as they entered due to a 2.6 feature.
  IF This.lnNoOfLines > 0
    *-- Count total qty. & total amount for al valid lines.
    SELECT (This.lcTmpRetLn)
    SUM TotQty , Amount FOR (cStatus <> "D" .OR. !DELETED()) ;
                            .AND. !EMPTY(STYLE) TO lnAllQty , lnAllAmont

    *-- Compare the total Qty. & total amount for all the lines with
    *-- the total Qty. & total amount in the header info.
    IF (lnAllAmont <> RetAuth.authamt) .OR. (lnAllQty <> RetAuth.auth)
      *** Authorized pieces and amount do not match the line items!  Continue? ***
      *** < Yes > - < No > ***
      IF gfModalGen("INM46018B00006" , "DIALOG") = 2
        IF This.loForm.PageFrame.ActivePage = 1
          IF lnAllQty <> RetAuth.auth
            This.loForm.PageFrame.Page1.txtAuth.SetFocus()
          ELSE
            This.loForm.PageFrame.Page1.txtAuthAmt.SetFocus()
          ENDIF
        ENDIF
        llCSave = .F.
        RETURN .F.
      ENDIF
    ENDIF

    *-- Assign the total Qty. & total amount for all the lines to
    *-- the total Qty. & total amount in the header info.
    REPLACE RetAuth.authamt WITH lnAllAmont, RetAuth.auth WITH lnAllQty, ;
      RetAuth.nreta_opn WITH lnAllQty IN RetAuth
  ENDIF

  ENDFUNC
*--end of lfBeforeSave


  *!*************************************************************
  *! Name      : lpSavScr
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Called from the SaveFiles method of the FormSet
  *!*************************************************************
  *! Parameters: None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lpSavScr
  LPARAMETERS llCalledFromDelete
  LOCAL lnSeq

  *-- If add mode, assign a R/A no. for the current R/A & add it for all lines.
  IF This.loFormSet.ActiveMode="A"
    This.RETAUTH.Append()
    *wael
*!*	    IF This.llBased
*!*	      *B132218,1 KHM 05/25/2006 [Start]
*!*	      *lnSeq = This.gfSequence('RANO','','',RetAuth.cDivision)
*!*	      lnSeq = gfSequence('RANO','','',RetAuth.cDivision)
*!*	      *B132218,1 KHM 05/25/2006 [End]
*!*	
*!*	      REPLACE RetAuth.rano WITH lnSeq IN RetAuth
*!*	    ELSE
*!*	      *B132218,1 KHM 05/25/2006 [Start]
*!*	      *lnSeq = This.gfSequence('RANO')
*!*	      lnSeq = This.gfSequence('RANO')
*!*	      *B132218,1 KHM 05/25/2006 [End]
*!*	
*!*	      REPLACE RetAuth.rano WITH lnSeq IN RetAuth
*!*	    ENDIF
    lnSeq = gfSequence('RANO','','',RetAuth.cDivision)
    REPLACE rano WITH lnSeq IN RetAuth
    *wael

    SELECT (This.lcTmpRetLn)
    REPLACE ALL RANO WITH RetAuth.rano
  ELSE
    This.RETAUTH.Replace()
  ENDIF

  *-- Update the header file.
  SELECT RETAUTH
*!*    TABLEUPDATE(.F.)
*!*    lcSavOrder = TAG()
*!*    This.RETAUTH.SetOrder('RETAUTH')
  *Old: IF This.loFormSet.ActiveMode="A"
    *Old: APPEND BLANK
  *Old: ELSE
    *Old: This.RETAUTH.SEEK(RetAuth.rano)
  *Old: ENDIF
  *Old: GATHER FIELDS &lcScFields FROM laData
  *-- Call global function to add audit fields info.
  REPLACE llok_stat WITH .F.
  =gfAdd_Info('RETAUTH')
  *-- Add the modified record to the CursorUpdate
  SCATTER MEMVAR memo
  SELECT (This.RETAUTH.lcCursorUpdate)
  GATHER MEMVAR memo
  SELECT RETAUTH
*!*    SELECT RetAuth
*!*    TABLEUPDATE(.F.)
*!*    This.RETAUTH.SetOrder(lcSavOrder)


  *-- R/A line no.
  *B608545,1 WAM 05/08/2008 Increament to the last RA line number
  *This.lnRa_LinNo = 1
  *B608545,1 WAM 05/08/2008 (End)

  *-- Calculate the total
  STORE 0 TO lnTotalOpn , lnTotalCan
  *Open the style dyelot file.
  This.lfopenfile(oAriaApplication.DataDir+'StyDye',oAriaApplication.DataDir+'StyDye')

  *-- Change the status for empty styles records to be "SAME" to
  *-- prevent it from processing.
  SELECT (This.lcTmpRetLn)
  REPLACE ALL cStatus WITH "S" FOR EMPTY(Style)
  DELETE  ALL FOR EMPTY(Style) .AND. cStatus = "S"

  *-- Process the R/A lines.
  lcSavDelete = SET('DELETE')
  SET DELETE OFF

  lnCurRec  = 1                     && Var. hold current record no.
  lnTotRec  = RECCOUNT(This.lcTmpRetLn)  && Var. hold total lines record count. && Private

  *-- process only the lines that its status not equal "S"
  SCAN FOR !EMPTY(STYLE)
    *-- Call the global function that execute the thermometer.
    *Old: =gfTherm(lnTotRec,lnCurRec,"Saving return authorization # : "+RetAuth.rano)
    lnCurRec = lnCurRec + 1

    SELECT (This.lcTmpRetLn)
    IF cStatus <> 'S'
      This.Style.SEEK(EVALUATE(This.lcTmpRetLn+'.Style'))
      DO CASE
        *-- If the record was added.
        CASE cStatus = "A"

          *Check for status 'Electronic'
          IF RetAuth.status <> "E"
            IF Style.lInvSty
              *-- Update the Ra values in the style file.
              REPLACE STYLE.RA1   WITH STYLE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1'), ;
                      STYLE.RA2   WITH STYLE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2'), ;
                      STYLE.RA3   WITH STYLE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3'), ;
                      STYLE.RA4   WITH STYLE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4'), ;
                      STYLE.RA5   WITH STYLE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5'), ;
                      STYLE.RA6   WITH STYLE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6'), ;
                      STYLE.RA7   WITH STYLE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7'), ;
                      STYLE.RA8   WITH STYLE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8'), ;
                      STYLE.TotRA WITH STYLE.RA1+STYLE.RA2+STYLE.RA3+STYLE.RA4+STYLE.RA5+STYLE.RA6+STYLE.RA7+STYLE.RA8 ;
                      IN Style
              *-- Add the modified record to the CursorUpdate
              This.Style.Replace()
              *-- Update the Ra values for each style+warehouse with the canceled qty.
              IF This.StyDye.SEEK(EVALUATE(This.lcTmpRetLn+'.Style') + RetAuth.cwarecode + SPACE(10))
                REPLACE STYDYE.RA1   WITH STYDYE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1'),  ;
                        STYDYE.RA2   WITH STYDYE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2'),  ;
                        STYDYE.RA3   WITH STYDYE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3'),  ;
                        STYDYE.RA4   WITH STYDYE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4'),  ;
                        STYDYE.RA5   WITH STYDYE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5'),  ;
                        STYDYE.RA6   WITH STYDYE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6'),  ;
                        STYDYE.RA7   WITH STYDYE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7'),  ;
                        STYDYE.RA8   WITH STYDYE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8'),  ;
                        STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                        IN StyDye
                *-- Add the modified record to the CursorUpdate
                This.StyDye.Replace()
              ENDIF
              *Make sure the style uses Dylots
              IF This.llDyelot AND !EMPTY(EVALUATE(This.lcTmpRetLn+'.Dyelot')) .AND. This.StyDye.SEEK(EVALUATE(This.lcTmpRetLn+'.Style') + RetAuth.cwarecode + EVALUATE(This.lcTmpRetLn+'.Dyelot'))

                REPLACE STYDYE.RA1   WITH STYDYE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1'), ;
                        STYDYE.RA2   WITH STYDYE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2'), ;
                        STYDYE.RA3   WITH STYDYE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3'), ;
                        STYDYE.RA4   WITH STYDYE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4'), ;
                        STYDYE.RA5   WITH STYDYE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5'), ;
                        STYDYE.RA6   WITH STYDYE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6'), ;
                        STYDYE.RA7   WITH STYDYE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7'), ;
                        STYDYE.RA8   WITH STYDYE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8'), ;
                        STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                        IN StyDye
                *-- Add the modified record to the CursorUpdate
                This.StyDye.Replace()
              ENDIF
            ENDIF
          ENDIF
          *-- Calculate the open qty.
          lnTotalOpn = lnTotalOpn + (nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8)
        *-- If the record was modified.
        CASE cStatus = "M"
          *-- Update the R/A line open qty.
          *Seek with the line's original style as it might be modified.
          This.RALINE.SEEK(EVALUATE(This.lcTmpRetLn+'.RaNo') + EVALUATE(This.lcTmpRetLn+'.oldSty') + EVALUATE(This.lcTmpRetLn+'.cra_linno'))
          REPLACE nOpnQty1   WITH MAX(0 , (nOpnQty1 + Qty1 - RALINE.Qty1)) ;
                  nOpnQty2   WITH MAX(0 , (nOpnQty2 + Qty2 - RALINE.Qty2)) ;
                  nOpnQty3   WITH MAX(0 , (nOpnQty3 + Qty3 - RALINE.Qty3)) ;
                  nOpnQty4   WITH MAX(0 , (nOpnQty4 + Qty4 - RALINE.Qty4)) ;
                  nOpnQty5   WITH MAX(0 , (nOpnQty5 + Qty5 - RALINE.Qty5)) ;
                  nOpnQty6   WITH MAX(0 , (nOpnQty6 + Qty6 - RALINE.Qty6)) ;
                  nOpnQty7   WITH MAX(0 , (nOpnQty7 + Qty7 - RALINE.Qty7)) ;
                  nOpnQty8   WITH MAX(0 , (nOpnQty8 + Qty8 - RALINE.Qty8)) ;
                  nTotOpnQty WITH nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8
          *Check for status 'Electronic' [Start]
          IF RetAuth.status <> "E"
            IF Style.lInvSty
              *-- Update the Ra values in the style file for each R/A line.
              REPLACE STYLE.RA1   WITH STYLE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1') - RALINE.QTY1 ;
                      STYLE.RA2   WITH STYLE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2') - RALINE.QTY2 ;
                      STYLE.RA3   WITH STYLE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3') - RALINE.QTY3 ;
                      STYLE.RA4   WITH STYLE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4') - RALINE.QTY4 ;
                      STYLE.RA5   WITH STYLE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5') - RALINE.QTY5 ;
                      STYLE.RA6   WITH STYLE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6') - RALINE.QTY6 ;
                      STYLE.RA7   WITH STYLE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7') - RALINE.QTY7 ;
                      STYLE.RA8   WITH STYLE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8') - RALINE.QTY8 ;
                      STYLE.TotRA WITH STYLE.RA1+STYLE.RA2+STYLE.RA3+STYLE.RA4+STYLE.RA5+STYLE.RA6+STYLE.RA7+STYLE.RA8 ;
                      IN Style
              *-- Add the modified record to the CursorUpdate
              This.Style.Replace()
              *-- Seek the RA values for each style+warehouse in the style dyelot file.
              IF This.STYDYE.SEEK(EVALUATE(This.lcTmpRetLn+'.Style') + RetAuth.cwarecode + SPACE(10))
                REPLACE STYDYE.RA1   WITH STYDYE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1') - RALINE.QTY1 ;
                        STYDYE.RA2   WITH STYDYE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2') - RALINE.QTY2 ;
                        STYDYE.RA3   WITH STYDYE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3') - RALINE.QTY3 ;
                        STYDYE.RA4   WITH STYDYE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4') - RALINE.QTY4 ;
                        STYDYE.RA5   WITH STYDYE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5') - RALINE.QTY5 ;
                        STYDYE.RA6   WITH STYDYE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6') - RALINE.QTY6 ;
                        STYDYE.RA7   WITH STYDYE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7') - RALINE.QTY7 ;
                        STYDYE.RA8   WITH STYDYE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8') - RALINE.QTY8 ;
                        STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                        IN StyDye
                *-- Add the modified record to the CursorUpdate
                This.StyDye.Replace()
              ENDIF
              *-- If the system & style dyelot yes, Update the Ra values for each
              *-- style+warehouse+dyelot in the style dyelot file.
              *Make sure the style uses Dylots
              IF This.llDyelot AND !EMPTY(EVALUATE(This.lcTmpRetLn+'.Dyelot')) .AND. This.StyDye.SEEK(EVALUATE(This.lcTmpRetLn+'.Style') + RetAuth.cwarecode + EVALUATE(This.lcTmpRetLn+'.Dyelot'))

                REPLACE STYDYE.RA1   WITH STYDYE.RA1 + EVALUATE(This.lcTmpRetLn+'.QTY1') - RALINE.QTY1 ;
                        STYDYE.RA2   WITH STYDYE.RA2 + EVALUATE(This.lcTmpRetLn+'.QTY2') - RALINE.QTY2 ;
                        STYDYE.RA3   WITH STYDYE.RA3 + EVALUATE(This.lcTmpRetLn+'.QTY3') - RALINE.QTY3 ;
                        STYDYE.RA4   WITH STYDYE.RA4 + EVALUATE(This.lcTmpRetLn+'.QTY4') - RALINE.QTY4 ;
                        STYDYE.RA5   WITH STYDYE.RA5 + EVALUATE(This.lcTmpRetLn+'.QTY5') - RALINE.QTY5 ;
                        STYDYE.RA6   WITH STYDYE.RA6 + EVALUATE(This.lcTmpRetLn+'.QTY6') - RALINE.QTY6 ;
                        STYDYE.RA7   WITH STYDYE.RA7 + EVALUATE(This.lcTmpRetLn+'.QTY7') - RALINE.QTY7 ;
                        STYDYE.RA8   WITH STYDYE.RA8 + EVALUATE(This.lcTmpRetLn+'.QTY8') - RALINE.QTY8 ;
                        STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                        IN StyDye
                *-- Add the modified record to the CursorUpdate
                This.StyDye.Replace()
              ENDIF
            ENDIF
          *Check for status 'Electronic'
          ENDIF
          lnTotalOpn = lnTotalOpn + (nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8)
        *-- If the record was deleted.
        CASE cStatus = "D"
          *-- Update the R/A values for each line in the style file.
          *Check for status 'Electronic'
          IF RetAuth.status <> "E"
            This.RALINE.SEEK(EVALUATE(This.lcTmpRetLn+'.RaNo') + EVALUATE(This.lcTmpRetLn+'.Style') + EVALUATE(This.lcTmpRetLn+'.cra_linno'))
            IF Style.lInvSty
              REPLACE STYLE.RA1   WITH STYLE.RA1 - RALINE.QTY1 ;
                      STYLE.RA2   WITH STYLE.RA2 - RALINE.QTY2 ;
                      STYLE.RA3   WITH STYLE.RA3 - RALINE.QTY3 ;
                      STYLE.RA4   WITH STYLE.RA4 - RALINE.QTY4 ;
                      STYLE.RA5   WITH STYLE.RA5 - RALINE.QTY5 ;
                      STYLE.RA6   WITH STYLE.RA6 - RALINE.QTY6 ;
                      STYLE.RA7   WITH STYLE.RA7 - RALINE.QTY7 ;
                      STYLE.RA8   WITH STYLE.RA8 - RALINE.QTY8 ;
                      STYLE.TotRA WITH STYLE.RA1+STYLE.RA2+STYLE.RA3+STYLE.RA4+STYLE.RA5+STYLE.RA6+STYLE.RA7+STYLE.RA8 ;
                      IN Style
              *-- Add the modified record to the CursorUpdate
              This.Style.Replace()
              *-- Seek the RA values for each style+warehouse in the style dyelot file.
              IF This.STYDYE.SEEK(EVALUATE(This.lcTmpRetLn+'.Style') + RetAuth.cwarecode + SPACE(10))
                REPLACE STYDYE.RA1   WITH STYDYE.RA1 - RALINE.QTY1 ;
                        STYDYE.RA2   WITH STYDYE.RA2 - RALINE.QTY2 ;
                        STYDYE.RA3   WITH STYDYE.RA3 - RALINE.QTY3 ;
                        STYDYE.RA4   WITH STYDYE.RA4 - RALINE.QTY4 ;
                        STYDYE.RA5   WITH STYDYE.RA5 - RALINE.QTY5 ;
                        STYDYE.RA6   WITH STYDYE.RA6 - RALINE.QTY6 ;
                        STYDYE.RA7   WITH STYDYE.RA7 - RALINE.QTY7 ;
                        STYDYE.RA8   WITH STYDYE.RA8 - RALINE.QTY8 ;
                        STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                        IN StyDye
                *-- Add the modified record to the CursorUpdate
                This.StyDye.Replace()
              ENDIF

              *-- If the system & style dyelot yes, Update the Ra values for each
              *-- style+warehouse+dyelot in the style dyelot file.
              *Make sure the style uses Dylots
              IF This.llDyelot AND !EMPTY(EVALUATE(This.lcTmpRetLn+'.Dyelot')) .AND. This.StyDye.SEEK(EVALUATE(This.lcTmpRetLn+'.Style') + RetAuth.cwarecode + EVALUATE(This.lcTmpRetLn+'.Dyelot'))
                REPLACE STYDYE.RA1   WITH STYDYE.RA1 - RALINE.QTY1 ;
                        STYDYE.RA2   WITH STYDYE.RA2 - RALINE.QTY2 ;
                        STYDYE.RA3   WITH STYDYE.RA3 - RALINE.QTY3 ;
                        STYDYE.RA4   WITH STYDYE.RA4 - RALINE.QTY4 ;
                        STYDYE.RA5   WITH STYDYE.RA5 - RALINE.QTY5 ;
                        STYDYE.RA6   WITH STYDYE.RA6 - RALINE.QTY6 ;
                        STYDYE.RA7   WITH STYDYE.RA7 - RALINE.QTY7 ;
                        STYDYE.RA8   WITH STYDYE.RA8 - RALINE.QTY8 ;
                        STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8 ;
                        IN StyDye
                *-- Add the modified record to the CursorUpdate
                This.StyDye.Replace()
              ENDIF
            ENDIF
          ENDIF
          *-- Calculate the total canceled qty.
          *lnTotalCan = lnTotalCan + (nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8)
      ENDCASE
    ELSE
      *Detect addng open qty. for the deleted lines in the add mode.
      IF !DELETED() .OR. !This.loFormSet.ActiveMode="A"
        *-- Calculate the total open qty.
        lnTotalOpn = lnTotalOpn + (nOpnQty1+nOpnQty2+nOpnQty3+nOpnQty4+nOpnQty5+nOpnQty6+nOpnQty7+nOpnQty8)
      ENDIF
    ENDIF
    *B608545,1 WAM 05/08/2008 Don't generate new line# for modified lines [T20080408.0002]
*!*	    IF cStatus <> "D"
*!*	      *-- Save the R/A line #.
*!*	      REPLACE cRa_LinNo WITH ALLTRIM(STR(This.lnRa_LinNo))
*!*	      *-- Adjust the line no. for each line.
*!*	      This.lnRa_LinNo = This.lnRa_LinNo + 1
*!*	    ENDIF
    IF cStatus = "A"
      *-- Adjust the line no. for each line.
      This.lnRa_LinNo = This.lnRa_LinNo + 1
      *-- Save the R/A line #.
      REPLACE cRa_LinNo WITH ALLTRIM(STR(This.lnRa_LinNo))
    ENDIF
    *B608545,1 WAM 05/08/2008 (End)

  ENDSCAN

  *-- If the thermometer was not closed, call global function to close it.
  *Don't call gfTherm if the total record is 0
  IF lnCurRec # lnTotRec AND lnTotRec > 0
    *Old: =gfTherm(lnTotRec , lnTotRec , "Saving return authorization # : "+RetAuth.rano)
  ENDIF

  SET DELETE &lcSavDelete

  *-- Update the lines file.
  This.gfTmp2Mast(This.RALINE , This.lcTmpRetLn , 'Saving the lines for R/A # : ' + RetAuth.rano + ' ...')

  *-- Clear the R/A temp. lines file.
  SELECT (This.lcTmpRetLn)
  ZAP

  *-- Update the header file with the opened, canceled & budget qty.
  SELECT RETAUTH
  *REPLACE nRetA_Can WITH nRetA_Can + lnTotalCan ;
          nRetA_Opn WITH lnTotalOpn ;
          nRetA_Bud WITH nRetA_Can + nRetA_Opn
  REPLACE nRetA_Opn WITH lnTotalOpn ;
          nRetA_Bud WITH nRetA_Can + nRetA_Opn

  IF !This.lfSaveFiles()
    MESSAGEBOX('Error While Saving')
  ENDIF

  *-- Inform the user with the return authorization no.
  IF This.loFormSet.ActiveMode="A"
    *** Return Authorization has been saved as : {RetAuth.rano}. ***
    *** <   OK   > ***
    =gfModalGen('INM46029B00000','DIALOG' , RetAuth.rano)
    This.loFormSet.lcsydkey = "Z'"+RetAuth.rano+"'"
  ENDIF
  *-- if using audit trail then call the method to add the audit trail record
  *-- with the spedified triger that occured
  IF This.loFormSet.AuditTrail
    lcEvent = IIF(llCalledFromDelete,"DELETE",IIF(This.loFormSet.Activemode="A",'INSERT','UPDATE'))
    This.loFormSet.AddAudit(lcEvent)
  ENDIF


  This.RetAuth.Seek(RetAuth.rano)
  IF This.loFormSet.hasnotes AND This.loFormSet.activemode="A" AND  gfModalGen('QRM00349B00006','DIALOG')=1
    This.loFormSet.callnotepad()
    *IF !EMPTY(This.loFormSet.FormHasToolBar)
      *oAriaApplication.oToolBar.Init(This.loFormSet)
    *ENDIF
  ENDIF
  This.loFormSet.ActiveMode = 'V'
  This.loFormSet.Refresh()


  ENDFUNC
*--end of lpSavScr


  *!*************************************************************
  *! Name      : lfSaveFiles
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Save all the edited files
  *!*************************************************************
  *! Parameters:  None
  *!*************************************************************
  *! Return    : True / False
  *!*************************************************************
  FUNCTION lfSaveFiles
  LOCAL lcTranCode, llRetVal
    lcTranCode = oAriaApplication.RemoteCompanyData.BeginTran(oAriaApplication.ActiveCompanyConStr,3,'')
    IF TYPE('lcTranCode') = 'N'
      =oAriaApplication.RemoteCompanyData.CheckRetResult("BeginTran",lcTranCode,.T.)
      RETURN .F.
    ENDIF
    llRetVal = This.Style.TableUpdate(lcTranCode) and This.StyDye.TableUpdate(lcTranCode) ;
               and (IIF(This.llCrmIns,This.CRMesag.TableUpdate(lcTranCode),.T.)) and ;
               This.RetAuth.TableUpdate(lcTranCode) and This.RALine.TableUpdate(lcTranCode)
    IF llRetVal
      oAriaApplication.RemoteCompanyData.CommitTran(lcTranCode)
    ELSE
      oAriaApplication.RemoteCompanyData.RollBackTran(lcTranCode)
    ENDIF

  RETURN llRetVal
  ENDFUNC

  *!*************************************************************
  *! Name      : lfActPad
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Activate a new pad with the Option
  *!*************************************************************
  *! Parameters:  None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfActPad

  DEFINE PAD _Option OF _MSYSMENU PROMPT 'O\<ptions' KEY ALT+P , ' '
  ON PAD _Option OF _msysmenu ACTIVATE POPUP _OPTIONPOP
  DEFINE POPUP _OPTIONPOP MARGIN SHADOW
  DEFINE BAR 1 OF _OPTIONPOP PROMPT 'Approve R/A'   SKIP FOR (laData[4] <> 'E')OR laScrMode[1] OR laScrMode[3] OR laScrMode[4]

  ON SELECTION POPUP _OPTIONPOP DO lpOptions WITH BAR()
  ON KEY LABEL ALT+P ACTIVATE POPUP _OPTIONPOP

  ENDFUNC
*--end of lfActPad


  *!*************************************************************
  *! Name      : lpOptions
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To define the actions done when selecting one of the option bars
  *!*************************************************************
  *! Parameters:  lnBar --> Bar #
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  PROCEDURE lpOptions
  PARAMETERS lnBar
  DO CASE
    CASE lnBar = 1
      IF gfModalGen("QRM00002B00006","ALERT",'','','Are you sure you want to approve this R/A ?') = 1
        =lfApprov()
      ENDIF
  ENDCASE

  ENDFUNC
*--end of lpOptions


  *!*************************************************************
  *! Name      : lfApprov
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Validate approve for RA
  *!*************************************************************
  *! Parameters:  None
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION lfApprov
  PRIVATE lnCurrALs

  lnCurrALs = SELECT()
  *--Change to Open
  SELECT Retauth
  lcMto = IIF(SEEK('M' + RetAuth.Account,'Customer'), EVALUATE('Customer.' + gfGetMemVar('M_CONFMAIL')) ,'')
  lCLetterid  = gfGetMemVar('M_RAAPR' , gcAct_Comp)

  IF EMPTY(lcMto)
    *The Confirmation E-mail Address on the setup screen is blank. We can not Approve your R/M.
    *<OK>
    =gfModalGen('TRM46039B00000','DIALOG')
    SELECT (lnCurrALs)
    RETURN
  ENDIF

  IF EMPTY(lCLetterid)
    *The Approved ID on the setup screen is blank. Are you sure you want to continue?.
    *<YES> , <NO>
    IF gfModalGen('QRM46040B32000','DIALOG') = 2
      SELECT (lnCurrALs)
      RETURN
    ENDIF
  ENDIF

  REPLACE Retauth.status   WITH "O",;
          Retauth.lFromWeb WITH .F.
  laData[4]= "O"
  lcStatus = laStatus[1]
  SHOW GET lcStatus

  This.lfopenfile(gcDataDir+'STYDYE',gcDataDir+'STYDYE')
  SELECT RALINE
  =SEEK(laData[1])
  SCAN FOR RANO = laData[1]
    =SEEK(RALINE.Style , 'Style')
    IF Style.lInvSty
      *-- Update the Ra values in the style file.
      REPLACE STYLE.RA1   WITH STYLE.RA1 + QTY1 ;
              STYLE.RA2   WITH STYLE.RA2 + QTY2 ;
              STYLE.RA3   WITH STYLE.RA3 + QTY3 ;
              STYLE.RA4   WITH STYLE.RA4 + QTY4 ;
              STYLE.RA5   WITH STYLE.RA5 + QTY5 ;
              STYLE.RA6   WITH STYLE.RA6 + QTY6 ;
              STYLE.RA7   WITH STYLE.RA7 + QTY7 ;
              STYLE.RA8   WITH STYLE.RA8 + QTY8 ;
              STYLE.TotRA WITH STYLE.RA1+STYLE.RA2+STYLE.RA3+STYLE.RA4+STYLE.RA5+STYLE.RA6+STYLE.RA7+STYLE.RA8
    *-- Update the Ra values for each style+warehouse with the canceled qty.
      IF SEEK(&lcTmpRetLn..Style + laData[7] + SPACE(10) , 'STYDYE')
        REPLACE STYDYE.RA1   WITH STYDYE.RA1 + QTY1 ;
                STYDYE.RA2   WITH STYDYE.RA2 + QTY2 ;
                STYDYE.RA3   WITH STYDYE.RA3 + QTY3 ;
                STYDYE.RA4   WITH STYDYE.RA4 + QTY4 ;
                STYDYE.RA5   WITH STYDYE.RA5 + QTY5 ;
                STYDYE.RA6   WITH STYDYE.RA6 + QTY6 ;
                STYDYE.RA7   WITH STYDYE.RA7 + QTY7 ;
                STYDYE.RA8   WITH STYDYE.RA8 + QTY8 ;
                STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8
      ENDIF
      *B606480,1 (Begin) Make sure the style uses Dylots
      *IF llDyelot .AND. SEEK(&lcTmpRetLn..Style + laData[7] + &lcTmpRetLn..Dyelot , 'STYDYE')
      IF llDyelot AND !EMPTY(&lcTmpRetLn..Dyelot) .AND. SEEK(&lcTmpRetLn..Style + laData[7] + &lcTmpRetLn..Dyelot , 'STYDYE')
      *B606480,1 (End)

        REPLACE STYDYE.RA1   WITH STYDYE.RA1 + QTY1 ;
                STYDYE.RA2   WITH STYDYE.RA2 + QTY2 ;
                STYDYE.RA3   WITH STYDYE.RA3 + QTY3 ;
                STYDYE.RA4   WITH STYDYE.RA4 + QTY4 ;
                STYDYE.RA5   WITH STYDYE.RA5 + QTY5 ;
                STYDYE.RA6   WITH STYDYE.RA6 + QTY6 ;
                STYDYE.RA7   WITH STYDYE.RA7 + QTY7 ;
                STYDYE.RA8   WITH STYDYE.RA8 + QTY8 ;
                STYDYE.TotRA WITH STYDYE.RA1+STYDYE.RA2+STYDYE.RA3+STYDYE.RA4+STYDYE.RA5+STYDYE.RA6+STYDYE.RA7+STYDYE.RA8
      ENDIF
    ENDIF
  ENDSCAN
  *--add record to CRMESAG
  *--get variable from CRM module setups
  lcMfrom     = gfGetMemVar('M_NOTEMAIL' , gcAct_Comp)
  lCMsgSbjct  = 'Your R/A Request #:'+ ladata[1] + 'has been approved.'
  *lcMto       = IIF(SEEK('M'+RetAuth.Account,'Customer'),EVALUATE('Customer.' + gfGetMemVar('M_CONFMAIL')),'')
  *lCLetterid  = gfGetMemVar('M_RAAPR' , gcAct_Comp)
  SELECT CRMESAG
  APPEND BLANK
  =gfAdd_Info('CRMesag')
  REPLACE CTransType WITH 'R',;
          CtransNo   WITH laData[1],;
          LApprove   WITH .T.,;
          CMailFrom  WITH lcMfrom,;
          CMailTo    WITH lcMto ,;
          CMsgSubjct WITH lCMsgSbjct,;
          CLetterid  WITH lCLetterid,;
          LSent      WITH .F.
  SELECT (lnCurrALs)

  ENDFUNC
*--end of lfApprov



  *!*************************************************************
  *! Name      : lfOpenFile
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To Open a Table Remotely
  *!*************************************************************
  *! Parameters:  lcFile, lcTag
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  PROCEDURE lfOpenFile
  PARAMETERS lcFile, lcTag
  LOCAL lcProp

  lcFile = JUSTSTEM(lcFile)
  lcTag = JUSTSTEM(lcTag)
  lcProp = lcFile
  IF !PEMSTATUS(This,lcProp,5)
    This.addproperty(lcProp)
  ENDIF
  lcProp = 'This.'+lcProp

  IF TYPE(lcProp)<>'O'
    &lcProp = CREATEOBJECT("RemoteTable",lcFile,lcTag,lcFile,This.loFormSet.DataSessionID)
  ELSE
    &lcProp..SetOrder(lcTag)
  ENDIF

  ENDFUNC
*--end of lfOpenFile




  *!*************************************************************
  *! Name      : gfTmp2Mast
  *! Developer : Ahmad Shoukry Mohammed (ASM)
  *! Date      : 04/26/2005
  *! Purpose   : To update master file from a temp one
  *!*************************************************************
  *! Parameters: Master file Remote Table Object
  *!             Temp file name
  *!             Fixed message in thermo
  *!             variable message in thermo
  *!*************************************************************
  *! Return    : None
  *!*************************************************************
  FUNCTION gfTmp2Mast
  PARAMETERS loMastTable, lcTempFile, lcFxdMsg, lcVarMsg
  PRIVATE lcMastFile, lcTempFile, lcSavAlias, lcFxdMsg, lcVarMsg

  loToolBarWindow = oAriaApplication.oToolBar.oWindParent
  *-- Include the .H file
  #INCLUDE R:\ARIA4XP\PRGS\SY\gfTmp2Mast.H

  lcSavAlias = SELECT(0)
  *N000682,1 11/20/2012 MMT Globlization changes[Start]
*lcFxdMsg   = IIF(TYPE('lcFxdMsg')<>'C',LANG_Save,lcFxdMsg )
lcFxdMsg   = IIF(TYPE('lcFxdMsg')<>'C',LANG_Save,lcFxdMsg )
*N000682,1 11/20/2012 MMT Globlization changes[End]

  lcVarMsg   = IIF(TYPE('lcVarMsg')<>'C',' ',lcVarMsg)

  lcSaveDel = SET ('DELETE')
  SET DELETE OFF

  *-- Initialize the progress bar needed variables.
  oProgress = NEWOBJECT('ariaprogressbar',oAriaApplication.classdir+'utility.vcx')
  oProgress.TotalProgress = RECCOUNT(lcTempFile)
  oProgress.lblFirstLabel.Caption = lcFxdMsg
  oProgress.Show()
  lnCurRecord  = 1

  SELECT (lcTempFile)
  GO TOP
  *-- Scan through all the Added,Modified or Deleted records
  SCAN FOR cStatus <> 'S'
    *-- Call the progress bar.
    oProgress.lblSecondLabel.Caption = lcVarMsg
    oProgress.CurrentProgress(lnCurRecord)
    lnCurRecord = lnCurRecord + 1

    DO CASE
      *-- New added record
      CASE cStatus = 'A'
        SCATTER MEMVAR MEMO
        SELECT (loMastTable.lcCursorUpdate)
        APPEND BLANK
        GATHER MEMVAR MEMO

      *-- Record was modified
      CASE cStatus = 'M'
        SCATTER MEMVAR MEMO                 && Collect data from temp
        loMastTable.GoRec(Rec_No)
        loMastTable.Replace()
        SELECT (loMastTable.lcCursorUpdate)
        GATHER  MEMVAR MEMO                 && Replace master data

      *-- Record was deleted
      CASE cStatus = 'D' .AND.  DELETED()
        loMastTable.GoRec(Rec_No)
        loMastTable.DELETE()                 && Delete recored not in temp
    ENDCASE

    SELECT  (lcTempFile)
    REPLACE cStatus WITH "S"
  ENDSCAN
  *-- Terminate the progress bar
  oProgress=NULL
  oAriaApplication.oToolBar.oWindParent = loToolBarWindow

  SET DELETE &lcSaveDel
  SELECT (lcSavAlias)

  ENDFUNC
*--end of gfTmp2Mast


  FUNCTION gfSequence
  PARAMETERS lcSeqType,lcCompanyId,lcGroupId,lcDivision,lcField
  LOCAL lcSavAlias, lnRetVal

  lnRetVal = 1
  lcSavAlias = SELECT(0)
  IF !USED('SEQUENCE')
    luSequence = .T.
    USE (oAriaApplication.DataDir+"SEQUENCE") IN 0 ORDER TAG 'cSeq_Type'
  ELSE
    SELECT SEQUENCE
    SET ORDER TO TAG Cseq_type IN SEQUENCE
  ENDIF

  SELECT SEQUENCE
  IF SEEK(PADR(lcSeqType,10),'SEQUENCE')
    lnRetVal = nSeq_No + 1
    REPLACE nSeq_No WITH IIF(lnRetVal > 999999,0,lnRetVal)
    lnRetVal = nSeq_No
  ENDIF

  SELECT (lcSavAlias)

  RETURN PADL(lnRetVal,6,'0')
  ENDFUNC

  *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[Start]
  *!*************************************************************
  *! Name      : lfFillEmpArr
  *! Developer : Mariam Mazhar(MMT)
  *! Date      : 09/23/2010
  *! Purpose   : To Fill Employee Array Based on Selected customer/Store
  *!*************************************************************
  FUNCTION lfFillEmpArr
  PARAMETERS loParFormSet,lcEmpAccout,lcEmpStore
  lnOldSel = SELECT()
  DIMENSION loParFormSet.LAEmployee[1,2]
  loParFormSet.LAEmployee= SPACE(12)
  IF !USED('Contact_EMP')
    =gfOpenTable('Contact','Contact','SH','Contact_EMP')
  ENDIF
  SELECT Contact_EMP
  =gfSeek('C'+PADR(lcEmpAccout,8)+IIF(TYPE('lcEmpStore') ='C' and !EMPTY(lcEmpStore),PADR(lcEmpStore,8),''))
  SCAN REST WHILE CCONTTYPE+CCONT_ID+STORE+CONTACT = ;
       'C'+PADR(lcEmpAccout,8)+IIF(TYPE('lcEmpStore') ='C' and !EMPTY(lcEmpStore),PADR(lcEmpStore,8),'') FOR !EMPTY(ccntctcode)
    IF ASCAN(loParFormSet.LAEmployee,ccntctcode,1,0,2) = 0
      DIMENSION loParFormSet.LAEmployee[ALEN(loParFormSet.LAEmployee,1)+1,2]
      loParFormSet.LAEmployee[ALEN(loParFormSet.LAEmployee,1),1] = ALLTRIM(ccntctcode)+" - "+contact
      loParFormSet.LAEmployee[ALEN(loParFormSet.LAEmployee,1),2] = ccntctcode
    ENDIF
  ENDSCAN
  =ASORT(loParFormSet.LAEmployee)
  loParFormSet.AriaForm1.PageFrame.Page2.cboEmpl.Requery()
  SELECT (lnOldSel)
  *!*************************************************************
  *! Name      : lfvEmployee
  *! Developer : Mariam Mazhar(MMT)
  *! Date      : 09/23/2010
  *! Purpose   : To Validate Employee Field
  *!*************************************************************
  FUNCTION lfvEmployee

  *-- Update the R/A lines temp. file.
  REPLACE CSTATUS WITH IIF(CSTATUS = 'S','M',CSTATUS) IN (This.lcTmpRetLn)

  RETURN 1
  ENDFUNC
  *! E302766,1 MMT 09/23/2010 Add Employee Field to the Return Authorization screen[ENd]

  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[Start]
  *!*************************************************************
  *! Name      : lfOrderBrowse
  *! Developer : Saber Saber(SAB)
  *! Date      : 06/08/2011
  *! Purpose   : To Browse Order Header Using Filter Criteria
  *!*************************************************************
  FUNCTION lfOrderBrowse
  LPARAMETERS lcAccount, lcXOrder
    LOCAL lcSelect, lcFilterSetting, lcSelectedIndex

    *-- Include the .H file
    #INCLUDE R:\ARIA4XP\PRGS\SY\ORDBROW.H

    lcSelect = ALIAS(SELECT(0))
    SELECT ORDHDR
    lcSelectedIndex = SET("Order")
    lcFilterSetting = SET("Filter")

    SET ORDER TO ORDHDR   && CORDTYPE+ORDER
    LOCAL lcFilterExp
    lcFilterExp = "CORDTYPE = 'O' AND INLIST(ORDER,"
    FOR i = 1 TO ALEN(This.laConsInvOrdrs,1)
      lcFilterExp = lcFilterExp + "'" + This.laConsInvOrdrs[i,1] + "',"
    ENDFOR
    lcFilterExp = SUBSTR(lcFilterExp,1,LEN(lcFilterExp)-1) + ")"
    SET FILTER TO &lcFilterExp.


    *Calling Function
    lcBrowTitl = 'Orders'
lcBrFields = [Order:H="]+LANG_LabelOrder+[",status:H="]+LANG_Labelstatus+[",lcSesDesc=gfCodDes(Season,'SEASON'):H="]+LANG_LabelSeason+[",lcDivDesc=gfCodDes(cDivision,'CDIVISION'):H="]+LANG_LabelDi
               [CustPo=IIF(multipo,'*Multi_PO*',custpo):H="]+LANG_LabelCustPo+[",]+;
               [ACCOUNT:H="]+LANG_LabelACCOUNT+[",store=IIF(MULTI='Y','*Multi*',STORE):H="]+LANG_Labelstore+[",Customer.stname]+;
               [:H="]+LANG_Labelname+[",Open:H="]+LANG_LabelOpen+[",OpenAmt:H="]+LANG_LabelOpenAmt+[",Ship:H="]+LANG_LabelShip+[",Shipamt:H="]+LANG_LabelShipamt+[",]+;
               *N000682,1 11/20/2012 MMT Globlization changes[Start]
*[start:H="]+LANG_Labelstart+[",Complete:H="]+LANG_LabelComplete+[",Note1:H="]+LANG_LabelNote+["]
[start:H="]+LANG_Labelstart+[",Complete:H="]+LANG_LabelComplete+[",Note1:H="]+LANG_LabelNote+["]
*N000682,1 11/20/2012 MMT Globlization changes[End]

    DIMENSION laBrowArr[1]
    laBrowArr = ''
    *N000682,1 MMT 11/22/2012 Globalization changes[Start]
    *IF ARIABROW("", 'Orders', .F., .F., .F., .F., .F., .F., "ORDER", "laBrowArr", .T., .F.,.F., 'ORDHDR')
    *N000682,1 11/20/2012 MMT Globlization changes[Start]
*IF ARIABROW("", LANG_LabelOrders, .F., .F., .F., .F., .F., .F., "ORDER", "laBrowArr", .T., .F.,.F., 'ORDHDR')
IF ARIABROW("", LANG_LabelOrders, .F., .F., .F., .F., .F., .F., "ORDER", "laBrowArr", .T., .F.,.F., 'ORDHDR')
*N000682,1 11/20/2012 MMT Globlization changes[End]

    *N000682,1 MMT 11/22/2012 Globalization changes[END]
      lcOrder = laBrowArr[1]
    ELSE
      STORE SPACE(6)  TO lcOrder
    ENDIF





    SELECT ORDHDR
    SET ORDER TO &lcSelectedIndex.
    SET FILTER TO &lcFilterSetting.
    SELECT &lcSelect.

    RETURN lcOrder
  ENDFUNC
  *! B609603,1 SAB 06/05/2011 Consolidated Invoice Case not checking order and not loading employee info[End]

ENDDEFINE


