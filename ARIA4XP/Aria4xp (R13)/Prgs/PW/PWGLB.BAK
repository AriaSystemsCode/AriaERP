*!*	************************************************************
*!*	* functions will be used across the several screens of the PW module
*!*	************************************************************
*Modifications
*B610136,1 [T20121021.0030] TMI 10/31/2012 [Start] change the comparison expression to reflect a real case,Compare only when start and end lie in the same 12 hrs
*E303321,1 TMI 12/06/2012 [T20121203.0028] update the start/end time with the start/end shift time
*E303321,4 TMI 12/06/2012 [T20121203.0028] fix a problem that the screen crashes when the shift id is empty
*!*	************************************************************

*!*************************************************************
*! Name      : gfDbfField
*! Developer : Hesham Shereef
*! Date      : 1993-1995
*! Purpose   : To build the browse field names in string from dectionary
*!*************************************************************
*! Calls     :
*!      Called by: GFSCRINI()               (function  in ARIA3.PRG)
*!          Calls: GFSUBSTR()               (function  in ARIA3.PRG)
*!*************************************************************
*! Passed Parameters  : None
*!*************************************************************
*! Returns            : ............
*!*************************************************************
*! Example   :
*!*************************************************************
*  RETURN THE HEADER FOR THE FIELDS USED IN THE BROWSING
*:->
NOTE I still did NOT use this function in my code

*N000682,1,1 HES 12/20/2012 Globalization changes[Start]
#INCLUDE R:\ARIA4XP\Prgs\PW\PWGLB.h
*N000682,1,1 HES 12/20/2012 Globalization changes[END]

FUNCTION gfDbfField
PARAMETER lcDbfName,gcSysHome

lcDbfName = ALLTRIM(UPPER(lcDbfName))

lcSavAlias=SELECT(0)
lcBrFields=''
llFilesByP=.F.
llFieldByP=.F.
llFlFldByP=.F.

IF USED("sydFlFld")
  SELECT sydflfld
  lnFlFldRec=IIF(RECNO()>RECCOUNT(),0,RECNO())
ELSE
  llFlFldByP=.T.
  SELECT 0
  USE &gcSysHome.sydFlFld.dbf
ENDIF

set order to tag cfile_nam

IF USED("sydField")
  SELECT sydfield
  lnFldRec=IIF(RECNO()>RECCOUNT(),0,RECNO())
ELSE
  llFieldByP=.T.
  SELECT 0
  USE &gcSysHome.sydField.dbf
ENDIF
set order to tag cfld_name

IF USED("sydFiles")
  SELECT sydfiles
   lnFileRec=IIF(RECNO()>RECCOUNT(),0,RECNO())
ELSE
  llFilesByP=.T.
  SELECT 0
  USE &gcSysHome.sydFiles.dbf
ENDIF
set order to tag cfile_nam

**********************************************************
IF SEEK(lcDbfName)

  lcbrFields=ALLTRIM(mbrow_fld)

  IF !EMPTY(lcBrFields)
    DIMENSION laHead[1]
    = gfSubStr(lcbrFields,@laHead,"|")
    SELECT sydField
    lcBrFields=""
    FOR lnCount=1 TO ALEN(laHead,1)
      laHead[lnCount] = UPPER(ALLTRIM(laHead[lnCount]))
      IF SEEK (laHead[lnCount],"sydfield")
      *E300631,1 YMA 04/06/97 Changed the lookup to use the "CODES"
      *E300631,1 YMA 04/06/97 instead of "SYCCodes"
*       lcBrFields=lcBrFields+laHead[lnCount]+;
*                  IIF(lvldEntry,'=LOOKUP(SYCCODES.cDiscrep,gcAct_Comp+'+lcDbfName;
*                  +'.'+laHead[lnCount]+',SYCCODES.cCode_No,"CODES")';
*                  ,'')+IIF(EMPTY(sydfield.cFld_Head),' ,'," :H='"+;
*                  ALLTRIM(sydfield.cFld_Head)+"',")

        *E300789,1 Heaham (Start)
        *lcBrFields=lcBrFields+laHead[lnCount]+;
                   IIF(lvldEntry,'=LOOKUP(CODES.cDiscrep,gcAct_Comp+'+lcDbfName;
                   +'.'+laHead[lnCount]+',CODES.cCode_No,"CODES")';
                   ,'')+IIF(EMPTY(sydfield.cFld_Head),' ,'," :H='"+;
                   ALLTRIM(sydfield.cFld_Head)+"',")

        lcBrFields=lcBrFields+laHead[lnCount]+;
                   IIF(lvldEntry,'=LOOKUP(CODES.cDiscrep,'+['N'+]+lcDbfName;
                   +'.'+laHead[lnCount]+',CODES.cCode_No,"CODES")';
                   ,'')+IIF(EMPTY(sydfield.cFld_Head),' ,'," :H='"+;
                   ALLTRIM(sydfield.cFld_Head)+"',")

        *E300789,1 Heaham (End)
        *E300631,1 YMA 04/06/97 End.
      ENDIF

    ENDFOR
    lcBrFields=SUBSTR(lcBrFields,1,LEN(lcBrFields)-1)
  *********************************************************************
  ELSE
    SELECT sydFlFld
    SEEK lcDbfName
    SCAN REST WHILE cFile_nam=lcDbfName
      IF SEEK(UPPER(cFld_Name),"sydField")
        IF !(ALLTRIM(sydField.cFld_Name) $ "CADD_USER,CADD_TIME,DADD_DATE,LLOK_STAT"+;
                                 ",CLOK_USER,DLOK_DATE,CLOK_TIME")

          *E300631,1 YMA 04/06/97 Changed the lookup to use the "CODES"
          *E300631,1 YMA 04/06/97 instead of "SYCCodes"
*         lcBrFields=lcBrFields+ALLTRIM(sydFlFld.cFld_Name)+;
*              IIF(sydField.lvldEntry,'=LOOKUP(SYCCODES.cDiscrep,gcAct_Comp+'+lcDbfName;
*              +'.'+ALLTRIM(sydFlFld.cFld_Name)+',SYCCODES.cCode_No,"CODES")';
*              ,'')+IIF(EMPTY(sydField.cFld_Head),' ,'," :H='"+;
*                ALLTRIM(sydField.cFld_Head)+"',")
          *E300789,1 Heaham (Start)
          *lcBrFields=lcBrFields+ALLTRIM(sydFlFld.cFld_Name)+;
               IIF(sydField.lvldEntry,'=LOOKUP(CODES.cDiscrep,gcAct_Comp+'+lcDbfName;
               +'.'+ALLTRIM(sydFlFld.cFld_Name)+',CODES.cCode_No,"CODES")';
               ,'')+IIF(EMPTY(sydField.cFld_Head),' ,'," :H='"+;
                 ALLTRIM(sydField.cFld_Head)+"',")

          lcBrFields=lcBrFields+ALLTRIM(sydFlFld.cFld_Name)+;
               IIF(sydField.lvldEntry,'=LOOKUP(CODES.cDiscrep,'+['N'+]+lcDbfName;
               +'.'+ALLTRIM(sydFlFld.cFld_Name)+',CODES.cCode_No,"CODES")';
               ,'')+IIF(EMPTY(sydField.cFld_Head),' ,'," :H='"+;
                 ALLTRIM(sydField.cFld_Head)+"',")

        *E300789,1 Heaham (Start)
        *E300631,1 YMA 04/06/97 End.

        ENDIF
      ENDIF
    ENDSCAN
    lcBrFields=SUBSTR(lcBrFields,1,LEN(lcBrFields)-1)
  ENDIF
ENDIF


IF llFilesByP
  USE IN sydFiles
ELSE
 SELECT sydFiles
 IF lnFileRec > 0
   GO lnFileRec
 ENDIF
ENDIF
IF llFieldByP
  USE IN sydField
ELSE
  SELECT sydField
  IF lnFldRec > 0
    GO lnFldRec
  ENDIF
ENDIF
IF llFlFldByP
  USE IN sydFlFld
ELSE
 SELECT sydFlFld
 IF lnFlFldRec > 0
   GO lnFlFldRec
 ENDIF
ENDIF

SELECT(lcSavAlias)
RETURN lcBrFields



************************************************************
*! Name      : lfColumnWidthes
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 02/23/2012
*! Purpose   : Adjust column widthes
************************************************************
FUNCTION lfColumnWidthes
PARAMETERS loPop
LOCAL lcW
lcW = ALLTRIM(STR(loPop.Width - 25 ))
loPop.ColumnWidths = '&lcW,0'
*- End of lfColumnWidthes.

************************************************************
*! Name      : lfOpen
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 02/15/2012
*! Purpose   : Open tables
************************************************************
*E303064,1 TMI 02/15/2012
FUNCTION lfOpenPRGFILES
LPARAMETERS lcProg

LOCAL lcPath,i
lcPath = ''
lcProg = PADR(UPPER(lcProg),10)
SET MULTILOCKS ON
lnRemResult = oAriaApplication.RemoteSystemData.Execute;
   ("Select * from SYDOBJCT WHERE CAPOBJNAM= '&lcProg'",'',"SYDOBJCT","",oAriaApplication.cAria4SysFiles,3,"",SET("Datasession"))

=gfOpenTable(oAriaApplication.SysPath+'sydFiles','CFILE_NAM','SH')   && CFILE_NAM
=gfOpenTable(oAriaApplication.SysPath+'sydField','CFLD_NAME','SH')   && CFLD_NAME

lcFiles = SYDOBJCT.MPRGFILES
DIME laFiles[2],laTbl[1],laIndx[1]
STORE '' TO laFiles,laTbl,laIndx
=gfSubStr(lcFiles,@laFiles,'|')
=gfSubStr(laFiles[1],@laTbl,',')
=gfSubStr(laFiles[2],@laIndx,',')
FOR i = 1 TO ALEN(laTbl)
  *lcPath = IIF(LEFT(laTbl[i],2)='SY',oAriaApplication.SysPath,'')
*  =gfOpenTable(lcPath+laTbl[i],laIndx[i],'SH')
  =gfOpenTable(laTbl[i],laIndx[i],'SH')
ENDFOR

*** Load program base file
lcBaseFile = ALLTRIM(sydObjct.cBaseFile)

*- End of lfOpen.

************************************************************
*! Name      : lfCalender
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 05/03/2012
*! Purpose   : lfCalender
************************************************************
FUNCTION lfCalender
PARAMETERS loFormset,loCalender,lcEntityType
LOCAL lnSlct
lnSlct = SELECT(0)

with loCalender
  .EntityType = lcEntityType
  .DataFile = gfTempName()
  loFormset.AddProperty('DataFile',.DataFile)
endwith

DIMENSION laStru[1,18]
SELECT SCCALDTL
=AFIELDS(laStru)
lnLen = ALEN(laStru,1)+1
DIMENSION laStru[lnLen,18]
laStru[lnLen ,1] = 'LLOCK'
laStru[lnLen ,2] = 'L'
laStru[lnLen ,3] = 1
laStru[lnLen ,4] = 0
STORE .F. TO laStru[lnLen ,5], laStru[lnLen ,6]
FOR i=7 TO 16
  laStru[lnLen ,i] = ''
ENDFOR
STORE 0 TO laStru[lnLen ,17], laStru[lnLen ,18]
CREATE CURSOR (loFormSet.DataFile) FROM ARRAY laStru
INDEX ON LLOCK TAG LLOCK DESC


SELECT (lnSlct)
*- End of lfCalender.
************************************************************
*! Name      : lfChkNav
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 03/05/2012
*! Purpose   : lfChkNav
************************************************************
FUNCTION lfChkNav

  LOCAL cNativeDBID
  cNativeDBID = oAriaApplication.cNativeDBID
  oAriaApplication.cNativeDBID = 'SQL'
  =gfSeek('',loFormSet.lcBaseFile)
  SELECT (loFormSet.lcBaseFile)
  =SEEK(loFld.KeyTextBox.VALUE)
  loFormSet.CheckNavigation()
  loFormSet.oToolBar.Navrefresh()
  oAriaApplication.cNativeDBID = cNativeDBID


*- End of lfChkNav.

************************************************************
*! Name      : lfObjLink
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 30/04/2012
*! Purpose   : View/Add Object link picture.
*!*************************************************************
*! Calls     :
*!             Procedures : gfGetObj
*************************************************************!*************************************************************
FUNCTION lfObjLink
PARAMETERS loFormSet,oThumbnail
LOCAL lnAlias,lcID
lcID = loFormset.Ariaform1.AriaKeyField1.Keytextbox.Value

lnAlias = SELECT()
DO gfGetObj WITH loFormset.lcObjType,lcID
SELECT(lnAlias)

WITH oThumbnail
  .cType = loFormset.lcObjType
  .cObjectKey = lcID
ENDWITH


************************************************************
*! Name      : lfMode
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 05/03/2012
*! Purpose   : lfMode
************************************************************
FUNCTION lfMode
PARAMETERS lcMode

private llErr
llErr = .F.
LOCAL lcErr
lcErr = ON('error')
ON ERROR llErr = .T.
loFormSet.CHangeMode(lcMode)
ON ERROR &lcErr
IF llErr
  *SET STEP ON
  *WAIT WINDOW NOWAIT 'Calender error , check with Hesham'
ENDIF

*- End of lfMode.


************************************************************
*! Name      : lfCalChk
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 06/05/2012
*! Purpose   : lfCalChk
**************************************************************x
FUNCTION lfCalChk
PARAMETERS loFormSet,llCheckShift,loCalGrd
LOCAL lnSlct,llRet,lcFilt
lnSlct = SELECT(0)
llRet = .T.
SELECT (loFormSet.DataFile)
lcFilt = FILTER()
SET FILTER TO
LOCATE

*- if no calender is entered
*!*	SELECT (loFormSet.DataFile)
*!*	GO TOP
*!*	LOCATE FOR !LLOCK
*!*	IF !FOUND()
*!*	  =gfModalGen('INM00000B00000',.F.,.F.,.F.,'No calender entries have been entered.')
*!*	  SELECT (lnSlct)
*!*	  RETURN .F.
*!*	ENDIF

*- check if date fields are empty
IF llRet
  SELECT (loFormSet.DataFile)
  GO TOP
  LOCATE FOR !LLOCK AND (EMPTY(ddatfrm) OR EMPTY(ddatto))
  IF FOUND()
    *E303153,1 TMI 31/05/2012 [Start] activate the calendar when date is empty
    lfCalActv(loCalGrd)
    *E303153,1 TMI 31/05/2012 [End  ]
    *N000682,1 HES Handle globalization issues [Start]
*!*	    =gfModalGen('INM00000B00000',.F.,.F.,.F.,'Calender [Date From] or [Date To] is empty.')
    =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Date_Validate1,loformset.GetHeaderText("LANG_Global_Date_Validate1",loformset.HeaderAlias)))    
    *N000682,1 HES Handle globalization issues [Start]
    *SELECT (lnSlct)
    *RETURN .F.
    llRet = .F.
  ENDIF
ENDIF

IF llRet
  *- Date from cannot be after date to
  SELECT (loFormSet.DataFile)
  GO TOP
  LOCATE FOR !LLOCK AND (ddatfrm > ddatto)
  IF FOUND()
    *E303153,1 TMI 31/05/2012 [Start] activate the calendar when date is empty
    lfCalActv(loCalGrd)
    *E303153,1 TMI 31/05/2012 [End  ]
    *N000682,1 HES Handle globalization issues [Start]
*!*	    =gfModalGen('INM00000B00000',.F.,.F.,.F.,'[Date To] cannot preceeds [Date From].')
    =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Date_Validate2,loformset.GetHeaderText("LANG_Global_Date_Validate2",loformset.HeaderAlias)))    
    *N000682,1 HES Handle globalization issues [End  ]
    *SELECT (lnSlct)
    *RETURN .F.
    llRet = .F.
  ENDIF
ENDIF

*- reason should not be empty
IF llRet
  SELECT (loFormSet.DataFile)
  GO TOP
  LOCATE FOR !LLOCK AND EMPTY(CREASONS)
  IF FOUND()
    *E303153,1 TMI 31/05/2012 [Start] activate the calendar when date is empty
    lfCalActv(loCalGrd)
    *E303153,1 TMI 31/05/2012 [End  ]
    *N000682,1 HES Handle globalization issues [Start]
*!*	    =gfModalGen('INM00000B00000',.F.,.F.,.F.,'Reason field in Calender cannot be empty')
    =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Reason_Validate,loformset.GetHeaderText("LANG_Global_Reason_Validate",loformset.HeaderAlias)))    
    *N000682,1 HES Handle globalization issues [End  ]
    *SELECT (lnSlct)
    *RETURN .F.
    llRet = .F.
  ENDIF
ENDIF

*- prevent overlaping calenders
IF llRet
  SELECT (loFormSet.DataFile)
  GO TOP
  LOCAL laDates,i
  DIMENSION laDates[1,2]
  SELECT DDATFRM,DDATTO,RECNO() FROM (loFormSet.DataFile) INTO ARRAY laDates WHERE !LLOCK
  FOR i = 1 TO ALEN(laDates,1)
    SCAN FOR !LLOCK AND RECNO(loFormSet.DataFile)<>laDates[i,3]
      IF BETWEEN(laDates[i,1],ddatfrm,ddatto) OR ;
        BETWEEN(laDates[i,2],ddatfrm,ddatto)
        *E303153,1 TMI 31/05/2012 [Start] activate the calendar when date is empty
        lfCalActv(loCalGrd)
        *E303153,1 TMI 31/05/2012 [End  ]
        *N000682,1 HES Handle globalization issues [Start]
*!*	        =gfModalGen('INM00000B00000',.F.,.F.,.F.,'Calender overlaping dates, cannot save')
        =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Calendar_Validate,loformset.GetHeaderText("LANG_Global_Calendar_Validate",loformset.HeaderAlias)))        
        *N000682,1 HES Handle globalization issues [End  ]
        *SELECT (lnSlct)
        *RETURN .F.
        llRet = .F.
      ENDIF
    ENDSCAN
  ENDFOR
ENDIF

IF llCheckShift
  * put here the code that checks the validity of the start & end time of the calender, provided that the fields
  * ctimfrm and ctimto are filled correctly
  *E303153,4 TMI 05/06/2012 [Start] check shift from/to, and time from / to
  SELECT (loFormSet.DataFile)
  GO TOP
  *E303116,4 TMI 10/06/2012 [Start] change the field type
  *LOCATE FOR !LLOCK AND (EMPTY(nSftFrm) OR EMPTY(nSftTo))
  LOCATE FOR !LLOCK AND (EMPTY(cSftFrm) OR EMPTY(cSftTo))
  *E303116,4 TMI 10/06/2012 [End  ]
  IF FOUND()
    lfCalActv(loCalGrd)
    *N000682,1 HES Handle globalization issues [Start]
*!*	    =gfModalGen('INM00000B00000',.F.,.F.,.F.,'Either Shift From or Shift to field is empty')
    =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Shift_Validate,loformset.GetHeaderText("LANG_Global_Shift_Validate",loformset.HeaderAlias)))    
    *N000682,1 HES Handle globalization issues [End  ]
    llRet = .F.
  ENDIF
  *B610136,1 [T20121021.0030] TMI 11/04/2012 [Start] 
  IF llRet
    *B610136,1 [T20121021.0030] TMI 11/04/2012 [End  ] 
    SELECT (loFormSet.DataFile)
    GO TOP
    *B610136,1 [T20121021.0030] TMI 10/31/2012 [Start] change the comparison expression to reflect a real case,Compare only when start and end lie in the same 12 hrs
    *LOCATE FOR !LLOCK AND CTIMFRM>=CTIMTO
    LOCATE FOR !LLOCK AND lfTimeCompare('CTIMFRM','CTIMTO')
    *B610136,1 [T20121021.0030] TMI 10/31/2012 [End] change the comparison expression to reflect a real case,Compare only when start and end lie in the same 12 hrs
    IF FOUND()
      lfCalActv(loCalGrd)
    *N000682,1 HES Handle globalization issues [Start]
*!*	    =gfModalGen('INM00000B00000',.F.,.F.,.F.,'[Time to] can not preceeds [time from]')
      =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Time_Validate1,loformset.GetHeaderText("LANG_Global_Time_Validate1",loformset.HeaderAlias)))    
      *N000682,1 HES Handle globalization issues [End  ]
      llRet = .F.
    ENDIF
    *B610136,1 [T20121021.0030] TMI 11/04/2012 [Start] 
  ENDIF 
  *B610136,1 [T20121021.0030] TMI 11/04/2012 [End  ] 
  
  *E303153,4 TMI 05/06/2012 [End  ]
ENDIF

*E303113,1 TMI 31/05/2012 [Start] comment these lines
*SELECT (loFormSet.DataFile)
*SET FILTER TO &lcFilt
*LOCATE
*E303113,1 TMI 31/05/2012 [End  ]

SELECT (lnSlct)
RETURN llRet
*- End of lfCalChk.

************************************************************
*! Name      : lfCalActv
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 31/05/2012
*! Purpose   : Activate the calendar
************************************************************
FUNCTION lfCalActv
PARAMETERS loCalGrd
loCalGrd.parent.ActivePage = INT(VAL(RIGHT(loCalGrd.name,1)))
loCalGrd.Calendar1.grdCalendar.SetFocus()
loCalGrd.Calendar1.grdCalendar.Refresh()
SET FILTER TO &lcFilt
*- End of lfCalActv.

************************************************************
*! Name      : lfvPlant
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 07/05/2012
*! Purpose   : lfvPlant
************************************************************
FUNCTION lfvPlant
PARAMETERS loFormSet,loFld,lcType,oCal
LOCAL lnOldVal,lnSlct
lnSlct = SELECT(0)

lnOldVal = loFld.OldValue
=gfSeek(loFld.OldValue,'PEPLANT')
SELECT (loFormSet.DataFile)
DELETE FOR NCALID = PEPLANT.NCALID
lnW = 10
=gfSeek( loFld.Value ,'PEPLANT')
=gfSeek(STR(PEPLANT.NCALID,lnW),'SCCALDTL')
SELECT SCCALDTL
SCAN
  SCATTER MEMVAR MEMO
  m.LLOCK = .T.
  m.crectyp = lcType
  SELECT (loFormSet.DataFile)
  APPEND BLANK
  GATHER MEMVAR MEMO
ENDSCAN

IF RECCOUNT(loFormSet.DataFile)>0
  oCal.Create()
  SELECT (loFormSet.DataFile)
  LOCATE
  oCal.Refresh()
  oCal.Click()
ENDIF

SELECT(lnSlct)
*- End of lfvPlant.

************************************************************
*! Name      : lfRecCnt
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 10/05/2012
*! Purpose   : Rec count of the passed alias
************************************************************
FUNCTION lfRecCnt
PARAMETERS lcAlias
LOCAL lnSlct,lnRecno

lnSlct = SELECT(0)

SELECT (lcAlias)
lnRecno = RECNO()

LOCAL lnCnt
lnCnt = 0
COUNT TO lnCnt

TRY
  GOTO (lnRecno)
catch
ENDTRY

SELECT (lnSlct)
RETURN lnCnt>0
*- End of lfRecCnt.

************************************************************
*! Name      : lfvEmail
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 05/31/2012
*! Purpose   : Validate the email
************************************************************
FUNCTION lfvEmail
PARAMETERS oCnt
LOCAL lnRet,lcEm
lcEm = CHRTRAN(oCnt.Value,' ','')
lnRet = 1
IF !EMPTY(oCnt.Value)
  IF !'.'$oCnt.value
    lnRet = 0
  ENDIF
  IF !'@'$oCnt.value
    lnRet = 0
  ENDIF
  IF RAT('.',oCnt.value)<AT('@',oCnt.value)
    lnRet = 0
  ENDIF
  IF OCCURS('@.',lcEm)=1
    lnRet = 0
  ENDIF
ENDIF
IF lnRet = 0
  *N000682,1 HES Handle globalization issues [Start]
*!*	  gfModalGen("INM42138B00000",'DIALOG','email address')
  gfModalGen("INM42138B00000",'DIALOG',IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_email_address,loformset.GetHeaderText("LANG_Global_email_address",loformset.HeaderAlias)))  
  *N000682,1 HES Handle globalization issues [End  ]
ENDIF
RETURN lnRet
*- End of lfvEmail.


*X
************************************************************
*! Name      : lfCheckifKeyUsed
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 06/06/2012
*! Purpose   : E303153,4 TMI 05/06/2012 [Start] check if field used in other files
*************************************************************
FUNCTION lfCheckifKeyUsed
PARAMETERS lcKeyValue,lcFld,lcExFiles
LOCAL lnSlct
lnSlct = SELECT(0)

lnRemResult = oAriaApplication.RemoteSystemData.Execute;
   ("Select SYDFLFLD.CFILE_NAM,SYDFILES.CFILE_TTL from SYDFLFLD,SYDFILES WHERE CFLD_NAME='&lcFld' AND SYDFLFLD.CFILE_NAM=SYDFILES.CFILE_NAM",'',"TMPSYDFLFLD","",oAriaApplication.cAria4SysFiles,3,"",SE
SELECT TMPSYDFLFLD
DELETE FOR PADR(CFILE_NAM ,8)$ lcExFiles
LOCATE
llFound = .F.
SCAN
  lcFile = TMPSYDFLFLD.CFILE_NAM
  lcFileTtl = ALLTRIM(TMPSYDFLFLD.CFILE_TTL)
      lcSqlStatement = "SELECT * FROM &lcFile. WHERE "+;
                       "&lcFld ='"+lcKeyValue+"'"
      lnResult=oAriaApplication.remotecompanydata.sqlrun(lcSqlStatement,'TOOLSUSED','&lcFile',;
               oAriaApplication.ActiveCompanyConStr,3,'SAVE',loFormSet.DataSessionID)
  SELECT TOOLSUSED
  LOCATE
  IF FOUND()
    llFound = .T.
    EXIT
  ENDIF
ENDSCAN
USE IN TMPSYDFLFLD
USE IN TOOLSUSED
IF llFound
  *N000682,1 HES Handle globalization issues [Start]
*!*	  =gfModalGen('INM00000B00000',.F.,.F.,.F.,'Can not delete the key id value: &lcKeyValue, it is used in &lcFileTtl file')
  =gfModalGen('INM00000B00000',.F.,.F.,.F.,IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Key_Validate_1,loformset.GetHeaderText("LANG_Global_Key_Validate_1",loformset.HeaderAlias))+lcKeyValue+IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Key_Validate_2,loformset.GetHeaderText("LANG_Global_Key_Validate_2",loformset.HeaderAlias))+lcFileTtl+IIF(oAriaApplication.oactiveLang.clang_id = "EN",LANG_Global_Key_Validate_3,loformset.GetHeaderText("LANG_Global_Key_Validate_3",loformset.HeaderAlias)))  
  *N000682,1 HES Handle globalization issues [End  ]
  SELECT (lnSlct)
  RETURN .F.
ENDIF

SELECT (lnSlct)
*- End of lfCheckifKeyUsed.
*E303153,4 TMI 05/06/2012 [End  ]


************************************************************
*! Name      : lfDelCalender
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 18/05/2012
*! Purpose   : Delete Calender data
************************************************************
FUNCTION lfDelCalender
PARAMETERS lnCalID
LOCAL lnSlct
lnSlct = SELECT(0)

SELECT SCCALHDR
gfSeek(STR(lnCalID,10))
LOCATE
gfDELETE()
gfTableUpdate()

SELECT SCCALDTL
gfSeek(STR(lnCalID,10))
SCAN
  gfDELETE()
ENDSCAN
gfTableUpdate()

SELECT( lnSlct )
*- End of lfDelCalender.


************************************************************
*! Name      : MSG
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 09/05/2012
*! Purpose   : MSG
************************************************************
FUNCTION MSG
PARAMETERS llsetp
IF SYS(0)='DEV4 # tarek'
  ON ERROR
  _SCREEN.Visible=.T.
  IF llsetp
    SET STEP ON
  ENDIF
ENDIF
*- End of MSG.


************************************************************
*! Name      : lfStartEndTimeUpd
*! Developer : TMI - Tarek Mohamed Ibrahim
*! Date      : 12/06/2012
*! Purpose   : update the start/end time with the start/end shift time
** This function is called from the shift from, shift to combo in the calendar class
************************************************************
*E303321,1 TMI 12/06/2012 
FUNCTION lfStartEndTimeUpd
PARAMETERS loFld
IF loFld.Value == loFld.OldValue 
  RETURN 
ENDIF 
LOCAL lcNm
lcShftNm = UPPER(SUBSTR(loFld.Name,8))
lcTimeNm = 'tsTime'+lcShftNm
lcShft = IIF(lcShftNm = 'FRM' , 'cshift_str' , 'cshift_fns')
=SEEK(loFld.Value,'PESHIFT')
lofld.Parent.&lcTimeNm..olecontrol1.oBJECT.Value = CTOT(PESHIFT.&lcShft)
lofld.Parent.&lcTimeNm..Refresh()
*- End of lfStartEndTimeUpd.

