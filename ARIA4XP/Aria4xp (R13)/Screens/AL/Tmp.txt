PROCEDURE mobjlink
*-- Call the object linking program with parameter "T" for picking tickets.
=gfGetObj("T",EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt'))
ENDPROC
PROCEDURE mprocess
PARAMETERS lnProcess
PRIVATE lnProcess , lnChoise
*-- lnProcess = 1 -> Pick a line.
*-- lnProcess = 2 -> Edit a line.
*-- lnProcess = 3 -> Release a line.
*-- lnProcess = 4 -> Allocate without generating pick ticket.

*-- If the pick button was pressed & there is no quantities to allocate.
SELECT (THISFORMSET.lcTmpOrdline)
SELECT Customer
*khm1
*LOCATE
*khm1
*-- If the process is Allocate or Pick then check the status of the customer if it was 
*-- non-active customer do not allow allocating or picking.
IF (lnProcess = 1 .OR. lnProcess = 4) AND Customer.Status <> 'A'
  lcStatus = ""
  DO CASE
    CASE Customer.Status = 'H'
      lcStatus = LANG_AlloByStyle_StHold + '|' + IIF(lnProcess=1,LANG_AlloByStyle_CntPik,LANG_AlloByStyle_CntAlo)
    CASE Customer.Status = 'X'
      lcStatus = LANG_AlloByStyle_StCancl + '|' + IIF(lnProcess=1,LANG_AlloByStyle_CntPik,LANG_AlloByStyle_CntAlo)
    CASE Customer.Status = 'P'
      lcStatus = LANG_AlloByStyle_StPotnl + '|' + IIF(lnProcess=1,LANG_AlloByStyle_CntPik,LANG_AlloByStyle_CntAlo)
  ENDCASE
  =gfModalGen("INM44098B00000" , "DIALOG" , lcStatus)
  SELECT STYLE
  RETURN
ENDIF

SELECT (THISFORMSET.lcTmpOrdline)
*-- If user trying to pick or allocate an order with status on hold, inform the user.
IF (lnProcess = 1 .OR. lnProcess = 4) AND Ordhdr.Status = 'H'
  lnChoise = gfModalGen("INM44096B44009" , "DIALOG" , OrdHdr.Order )
  *-- If user chose "No" return.
  IF lnChoise = 2
    SELECT STYLE
    RETURN
  ENDIF 
ENDIF

IF (lnProcess = 1 .OR. lnProcess = 4) .AND. EVALUATE(THISFORMSET.lcTmpOrdline+'.TotQty') = 0
  *** No pieces found on order.  Cannot allocate! ***
  *** <  Ok  > ***
  =gfModalGen("INM44013B00000" , "DIALOG")
  SELECT STYLE
  RETURN
ENDIF

*-- releasing allocated order line or releasing Pick tiket 
IF lnProcess = 3  
  lcRelMesge = IIF(EVALUATE(THISFORMSET.lcTmpOrdline+'.PIKTKT') = "******","QRM44103B00006","QRM44023B00006")
  IF gfModalGen(lcRelMesge, "DIALOG") = 2
    SELECT STYLE
    RETURN
  ENDIF  
ENDIF

lcDyelot = EVALUATE(THISFORMSET.lcTmpOrdline+'.Dyelot')
lcPikTkt = EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt')

*-- Get the pick for the picked warehouse.
llModiWH  = IIF(SEEK(PADR(Thisformset.AriaForm1.CntStyle.Value,19)+this.ariaform1.cboPickLoc.Value+SPACE(10),'StyDye'),;
                RLOCK('StyDye') .OR. This.mRecordlock('StyDye', LANG_AlloByStyle_StyDye ),.T.)

*-- Check if update the dyelot record or not and lock it.
llModiDye = IIF(This.llDyelot .AND. Style.cDye_Flg = 'Y' .AND. SEEK(PADR(Thisformset.AriaForm1.CntStyle.Value,19)+This.ariaform1.cboPickLoc.Value+lcDyelot,'StyDye') , .T. , .F.)

*-- Lock the needed records in different files.
llLock0 = IIF(llModiDye , RLOCK('StyDye') .OR. This.mRecordlock('StyDye' , LANG_AlloByStyle_StyDye) , .T.)
llLock1 = RLOCK('Style')   .OR. This.mRecordlock('Style' , LANG_AlloByStyle_Style)
*llLock2 = RLOCK('OrdHdr')  .OR. This.mRecordlock('OrdHdr' , LANG_AlloByStyle_OrdHdr)
llLock2 = .T.
*N120543,1 HBG 13/11/2003 lock master Order Line file which is ORDLINE1[Begin]
*llLock3 = RLOCK('OrdLine') .OR. This.mRecordlock('OrdLine' , LANG_AlloByStyle_OrdLin)
llLock3 = RLOCK('OrdLine1') .OR. This.mRecordlock('OrdLine1' , LANG_AlloByStyle_OrdLin)
*N120543,1 [End]
llLokedAll = llModiWH .AND. llLock0 .AND. llLock1 .AND. llLock2 .AND. llLock3

*-- If we could not lock all the required records.
IF !llLokedAll
  *-- Unlock all the locked files.
  SELECT StyDye
  Unlock 
  SELECT Style
  Unlock 
  SELECT OrdHdr
  Unlock 
  *N120543,1 HBG 13/11/2003 unlock master Order Line file which is ORDLINE1[Begin]
  *SELECT OrdLine
  SELECT OrdLine1
  *N120543,1 [End]
  Unlock 
  *** Unable to lock the needed files.  Cannot process this line. ***
  *** <  Ok  > ***
  =gfModalGen("INM44014B00000" , "DIALOG")
ELSE
  DO CASE
    CASE lnProcess = 1 .OR. lnProcess = 4
      *-- If picking a previous allocated picking ticket, just assign
      *-- a picking ticket # & add it to the piktkt file.
      IF lnProcess = 1 .AND. "*" $ lcPikTkt
        ThisFormSet.mPickAlocated()
      ELSE
        *-- Call local function to allocate the current line.
        ThisFormSet.mAllocateLine(llModiDye , PADR(Thisformset.AriaForm1.CntStyle.Value,19) , this.ariaform1.cboPickLoc.Value)
        *-- If succeed to pick automatically & the picking method was "Maulay".
        IF !EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt')) .AND. This.lnPicMethd = 2
          ThisFormSet.mModifyLine(llModiDye , PADR(Thisformset.AriaForm1.CntStyle.Value,19) , this.ariaform1.cboPickLoc.Value , lcDyelot)
        ENDIF
      ENDIF
      
      *T20060818.0001(C200876) TMI Custom Save Bin Location For David Luke [Start]
      IF lnProcess = 1 AND ASCAN(Thisformset.laEvntTrig,PADR('SVBNALOC',10),1,ALEN(Thisformset.laEvntTrig,1),1) > 0 
          =Thisformset.mDoTrigger(PADR('SVBNALOC',10))    
      ENDIF
      *T20060818.0001(C200876) TMI [End  ] 

      *-- If allocating or picking then move the cursor to the next record in the browse.
      IF !EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt'))
        SELECT (THISFORMSET.lcTmpOrdline)
        *-- Locate the next record instead of Skip Note that you no filter on data and the browse is done for lcWhilExpr.
        lnActvRec =  RECNO()  && Save Current record.
        *-- Scan the next records in the table for the same style and the same while expression.
        SCAN REST WHILE Style+DTOS(complete)+cordtype+order+store+STR(lineno,6) = Thisformset.AriaForm1.CntStyle.Value ;
               FOR OrdHdr.Status $ "OH" AND EVALUATE(THISFORMSET.lcTmpOrdline+'.TotQty') <> 0 AND EVALUATE(THISFORMSET.lcTmpOrdline+'.cOrdType') <> 'T' AND OrdHdr.cWareCode = This.Ariaform1.cboOrdLoc.Value

          *-- if it is the next record exit the scan loop because it is the next browse record.
          IF RECNO() <> lnActvRec
            EXIT
          ENDIF  
        ENDSCAN
        
        *-- if the style was changed it means another style out of our criteria.
        IF (EVALUATE(THISFORMSET.lcTmpOrdline+'.Style') <> Thisformset.AriaForm1.CntStyle.Value) AND BETWEEN(lnActvRec,1,RECCOUNT())
          GO lnActvRec  && Restore the current record because it is the last record.
        ENDIF
        
        *-- Refresh the order browse
        This.ariaform1.grdOrder.Refresh
      ENDIF

    CASE lnProcess = 2
      *-- Call local function to modify the current line.
      IF "*" $ lcPikTkt
        lcOrgWare = this.ariaform1.cboPickLoc.Value 
      ELSE
        lcOrgWare = IIF(SEEK(PADR(lcPikTkt,6) , "PIKTKT") , PIKTKT.cWareCode , this.ariaform1.cboPickLoc.Value )
      ENDIF
      
      IF !USED('Pack_hdr')
        *-- Open the packing header file.
        =gfOpenFile(oAriaApplication.DataDir+'Pack_hdr',oAriaApplication.DataDir+'Pack_hdr','SH')
      ENDIF
      
      *-- Variable to know if release current line or not.
      llModCurLin = .T.
      
      *-- Seek in the packing header file to know if the current 
      *-- picking ticket has a packing list or not.
      IF PADR(lcPikTkt,6) <> "******" AND SEEK(PADR(lcPikTkt,6) , "Pack_hdr") AND ;
         PADR(Pack_hdr.piktkt,6) = PADR(lcPikTkt,6)
        *** Picking ticket #: {PADR(lcPikTkt,6)} has a packing list. Cannot modify! ***
        *** < Ok > ***
        =gfModalGen("INM44060B00000" , "DIALOG" , PADR(lcPikTkt,6))
        *-- Set the modify flag to false to stop release.
        llModCurLin = .F.
      ENDIF

      *-- If approve release, execute the release function.
      IF llModCurLin

        *T20060818.0001(C200876) TMI Custom Save Bin Location For David Luke [Start]
        IF ASCAN(Thisformset.laEvntTrig,PADR('ALRELORD',10),1,ALEN(Thisformset.laEvntTrig,1),1) > 0
            =Thisformset.mDoTrigger(PADR('ALRELORD',10))    
        ENDIF
        *T20060818.0001(C200876) TMI [End  ] 

        ThisFormSet.mModifyLine(llModiDye , PADR(Thisformset.AriaForm1.CntStyle.Value,19) , lcOrgWare , lcDyelot)

        *T20060818.0001(C200876) TMI Custom Save Bin Location For David Luke [Start]
        IF ASCAN(Thisformset.laEvntTrig,PADR('SVBNALOC',10),1,ALEN(Thisformset.laEvntTrig,1),1) > 0
            =Thisformset.mDoTrigger(PADR('SVBNALOC',10))
        ENDIF
        *T20060818.0001(C200876) TMI [End  ] 

      ENDIF
    CASE lnProcess = 3
      *-- Call local function to release the current line.
      IF "*" $ lcPikTkt
        lcOrgWare = this.ariaform1.cboPickLoc.Value
      ELSE
        lcOrgWare = IIF(SEEK(PADR(lcPikTkt,6) , "PIKTKT") , PIKTKT.cWareCode , this.ariaform1.cboPickLoc.Value )

        *T20060818.0001(C200876) TMI Custom Save Bin Location For David Luke [Start]
        IF ASCAN(Thisformset.laEvntTrig,PADR('ALRELORD',10),1,ALEN(Thisformset.laEvntTrig,1),1) > 0 
            =Thisformset.mDoTrigger(PADR('ALRELORD',10))    
        ENDIF
        *T20060818.0001(C200876) TMI [End  ] 

      ENDIF
      *-- Variable to know if release current line or not.
      llRelCurLin = .T.
      
      IF !USED('Pack_hdr')
        *-- Open the packing header file.
        =gfOpenFile(oAriaApplication.DataDir+'Pack_hdr',oAriaApplication.DataDir+'Pack_hdr','SH')
      ENDIF
      
      *-- Seek in the packing header file to know if the current 
      *-- picking ticket has a packing list or not.
      IF PADR(lcPikTkt,6) <> "******" AND SEEK(PADR(lcPikTkt,6) , "Pack_hdr") AND ;
         PADR(Pack_hdr.piktkt,6) = PADR(lcPikTkt,6)
        *** Picking ticket #: {PADR(lcPikTkt,6)} has a packing list. Cannot release! ***
        *** < Ok > ***
        =gfModalGen("INM44057B00000" , "DIALOG" , PADR(lcPikTkt,6))
        *-- Set the release flag to false to stop release.
        llRelCurLin = .F.
      ENDIF
      
      *-- If approve release, execute the release function.
      IF llRelCurLin
        ThisFormSet.mReleaseLine(llModiDye , PADR(Thisformset.AriaForm1.CntStyle.Value,19) , lcOrgWare)
      ENDIF
  ENDCASE
  *-- Add record for each piktkt in ALSHPINF for Ogio.
  IF ASCAN(oAriaApplication.laEvntTrig,PADR("UPDSHPS",10)) <> 0
    = gfDoTriger("ALSTYAL",PADR("UPDSHPS",10))
  ENDIF  
  
  *-- Unlock all the locked files.
  SELECT StyDye
  Unlock 
  SELECT Style
  Unlock 
  SELECT OrdHdr
  Unlock 
  *N120543,1 HBG 13/11/2003 unlock master Order Line file which is ORDLINE1[Begin]
  *SELECT OrdLine
  SELECT OrdLine1
  *N120543,1 [End]
  Unlock 
  
  *-- Get the total available Qty.
  This.ariaform1.txtTotAval.Value = This.mTotAvailable ("9")
  
  *-- Get the total ordered qty.
  Thisformset.ariaform1.txtTotOrd.Value  = Thisformset.mTotord ()
  
  *-- Get the inventory totals.
  WITH Thisformset.ariaform1
    .txtTotAlo.Refresh 
    .txtTotAval.Refresh
    .txtTotOrd.Refresh
    .txtTotStk.Refresh
    .txtTotUnAlo.Refresh
    .txtTotWip.Refresh
  ENDWITH
  
  *-- Execute the browse when function to refresh the control buttons.
  *N120543,1 HBG 13/11/2003 Send parameter to identify that the Row information is changed[Begin]
  *This.mafterrowcolchange()
  This.mafterrowcolchange(.T.)
  *N120543,1 [End]
  
ENDIF

SELECT STYLE


ENDPROC
PROCEDURE mallocateline
PARAMETERS llModiDye , lcStyle , lcPikWare
PRIVATE llModiDye , lcStyle , lcPikWare

*-- Array hold the picked qty.
DECLARE laPikQty[9]
*-- logical array to check if we will increase order Qty
DECLARE laIncrsOrd[8]

lnAllocate = 0

*-- Save the current file in a variable.
lcCurAlias = ALIAS()

*-- Open Scale file to get the Sizes of this style
IF !USED("SCALE")
  =gfOpenFile(oAriaApplication.DataDir+'SCALE',oAriaApplication.DataDir+'SCALE','SH')
ENDIF  

*-- Restore the previous selected file.
IF !EMPTY(lcCurAlias)
  SELECT (lcCurAlias)
ENDIF

*-- Open style dyelot browse upon Allocating any line if style dyelot <Yes> & the style has dyelots. 
lcDyelot = '.F.'
STORE 0 TO laPikQty

*-- Call local function to edit dyelot.
IF llModiDye .AND. This.mNoDyelot(PADR(lcStyle,19) , lcPikWare , @lcDyelot)
  *** No dyelots selected.  Cannot allocation. ***
  *** <  OK  > ***
  *N120543,1 HBG 13/11/2003 change the message in case use style configuration is YES [Begin]
  IF THISFORMSET.lluseconfg 
    =gfModalGen("INM44117B00000" , "DIALOG")
  ELSE
  *N120543,1 [End]
    =gfModalGen("INM44015B00000" , "DIALOG")
  *N120543,1 HBG 13/11/2003 End if use style configuration is YES [Begin]
  ENDIF
  *N120543,1 [End]
  =SEEK(PADR(lcStyle,19)+lcPikWare+SPACE(10) , 'StyDye')
  lcDyelot = ""
  RETURN
ELSE
  IF (!RLOCK('StyDye') .OR. !This.mRecordlock('StyDye' , LANG_AlloByStyle_StyDye))
    RETURN
  ENDIF
ENDIF

*-- Blank the dyelot variable if there is false in its value.
lcDyelot = IIF(lcDyelot='.F.' , '' , lcDyelot)

llForce    = .F.

*-- Check the available stock for allocation.
IF (STYDYE.TotStk - STYDYE.TotAlo) <= 0
  
  *** No stock available for this line.  Force allocation? ***
  *** <  Yes  > - <  No  > ***
  lnPressed    = This.mForceMsg("M44016")
  IF lnPressed = 2
    IF llModiDye
      =SEEK(PADR(lcStyle,19)+lcPikWare+SPACE( 10 ), 'StyDye' )
    ENDIF
    RETURN
  ENDIF

  llForce = .T.
ENDIF

IF llForce
  *-- If force allocation, Get the default qty. from ordline.
  lcAlias = ALIAS()
  SELECT (THISFORMSET.lcTmpOrdline)
  SCATTER FIELDS Qty1,Qty2,Qty3,Qty4,Qty5,Qty6,Qty7,Qty8,TotQty TO laPikQty
  SELECT (lcAlias)
ELSE
  *-- Check if Avilabel stock > order Qty for each size [Begin]
  *-- If not force allocation, get the available qty from the style dyelot file.
  IF SEEK('S'+Style.Scale,"SCALE")
  *IF SEEK(STYDYE.Style,'STYLE') AND SEEK('S'+Style.Scale,"SCALE")
    DIMENSION laIncrsOrd[Scale.cnt]
  ENDIF

  FOR lnI = 1 To ALEN(laIncrsOrd,1)
   lcI = STR(lnI,1)
   *N120543,1 HBG 13/11/2003 Use available Qty in the check mot stock qty [Begin]
   *laIncrsOrd[lnI] = STYDYE.Stk&lcI - OrdLine.Qty&lcI >= 0
   laIncrsOrd[lnI] = MAX(STYDYE.Stk&lcI - STYDYE.Alo&lcI,0) - EVALUATE(THISFORMSET.lcTmpOrdline+'.Qty'+lcI) >= 0
   *N120543,1 [End]
  ENDFOR

  FOR lnI = 1 To ALEN(laIncrsOrd,1)
    lcI = STR(lnI,1)
    *-- If Avilabel stock > order Qty & there is Qty to be Pik , ask the user if he/she want to 
    *-- increase Ordered Quantity
    IF !laIncrsOrd[lnI] AND EVALUATE(THISFORMSET.lcTmpOrdline+'.Qty'+lcI) > 0
      *-- Message : "The allocated quantity is greater than the avilabel quantity for size X. 
      *--         " Do you want to force allocation?"
      *-- Buttons : <Yes><Yes to All><No>
      lcSize = LANG_AlloByStyle_ForSize + SCALE.Sz&lcI
      *T20060818.0001(C200876) TMI [Start] 
      IF ASCAN(Thisformset.laEvntTrig,PADR('ISUSEBIN',10),1,ALEN(Thisformset.laEvntTrig,1),1) > 0 .AND. ;
        Thisformset.mDoTrigger(PADR('ISUSEBIN',10))
        lnAllocate = 3
      ELSE 
        *T20060818.0001(C200876) TMI [End  ] 
        lnAllocate = gfModalGen('TRM44104B44002', 'DIALOG',lcSize)
        *T20060818.0001(C200876) TMI [Start] 
      ENDIF
      *T20060818.0001(C200876) TMI [End  ]   
      *N120543,1 HBG 13/11/2003 Fix bug of changing the value of lnI variable while calling gfModalGen function [Begin]
      lnI = VAL(lcI)
      *N120543,1 [End]
      DO CASE
        *-- User select YES for this Size
        CASE lnAllocate = 1
          laPikQty[lnI] = EVALUATE(THISFORMSET.lcTmpOrdline+'.Qty'+lcI)
          laPikQty[9]   = laPikQty[9] + laPikQty[lnI]
        *-- User select YES for all Sizes
        CASE lnAllocate = 2
          FOR lnJ = lnI To 8
            lcJ = STR(lnJ,1)
            laPikQty[lnJ] = EVALUATE(THISFORMSET.lcTmpOrdline+'.Qty'+lcJ)
            laPikQty[9]   = laPikQty[9] + laPikQty[lnJ]
          ENDFOR
          EXIT
        *-- User select NO for this Size
        CASE lnAllocate = 3
          *laPikQty[lnI] = STYDYE.Stk&lcI
          laPikQty[lnI] = MAX(STYDYE.Stk&lcI - STYDYE.Alo&lcI,0)
          laPikQty[9]   = laPikQty[9] + laPikQty[lnI]
      ENDCASE
    ELSE
      laPikQty[lnI] = EVALUATE(THISFORMSET.lcTmpOrdline+'.Qty'+lcI)
      laPikQty[9]    = laPikQty[9] + laPikQty[lnI]
    ENDIF 
  ENDFOR
  *-- IF total Pik > 0 , so this line will be allocate or pick
  llPicked = laPikQty[9] > 0
  
  IF !llPicked
     *** No avilable pieces to allocate. ***
     *** < Ok > ***
    =gfModalGen("INM44017B00000" , "DIALOG")
    RETURN
  ENDIF
ENDIF

*-- Check Approved Amount. 
lcHdrKey  = OrdHdr.cOrdType + OrdHdr.Order
lnDiffAmt = (laPikQty[9] - EVALUATE(THISFORMSET.lcTmpOrdline+'.TotPik'))*EVALUATE(THISFORMSET.lcTmpOrdline+'.Price')

IF !this.mChkAprvAmt(lcHdrKey , lnDiffAmt)
  RETURN
ENDIF

*-- Assign a picking ticket no. for the current order line.
IF lnProcess = 1
  lcPikTkt = Thisformset.AriaForm1.Al1.lfGetPkTkt(EVALUATE(THISFORMSET.lcTmpOrdline+'.order') , OrdHdr.cDivision , EVALUATE(THISFORMSET.lcTmpOrdline+'.Store') , lcPikWare)
ELSE
  lcPikTkt = "******"
ENDIF

*-- Add record for the current picking ticket in the picking ticket file.
SELECT PikTkt
IF !SEEK(lcPikTkT)
  APPEND BLANK
  REPLACE PikTkt    WITH lcPikTkT ;
          cWareCode WITH this.ariaform1.cboPickLoc.Value ;
          Account   WITH EVALUATE(THISFORMSET.lcTmpOrdline+'.Account') ;
          Store     WITH EVALUATE(THISFORMSET.lcTmpOrdline+'.Store') ;
          Order     WITH EVALUATE(THISFORMSET.lcTmpOrdline+'.Order') ;
          CustPo    WITH OrdHdr.CustPo ;
          Status    WITH "O" ;
          Date      WITH DATE()
  =gfAdd_Info("PikTkt" , Thisformset)
  *:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003][Start]
  IF ASCAN(This.laEvntTrig,PADR('UPDPCKPACK',10),1,ALEN(This.laEvntTrig,1),1) > 0
     =This.mDoTrigger(PADR('UPDPCKPACK',10))    
  ENDIF  
  *:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003][End]
  *B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[Start]
  IF !USED("WAREHOUS")
    =gfOpenFile(oAriaApplication.DataDir+'WAREHOUS',oAriaApplication.DataDir+'WAREHOUS','SH')
  ENDIF  
  cAlis=ALIAS()
  SELECT WAREHOUS
  SET ORDER TO Warehous
  SEEK (this.ariaform1.cboPickLoc.Value)
  SELECT (cAlis)
  IF 'AS' $ oAriaApplication.CompanyInstalledModules AND SEEK(this.ariaform1.cboPickLoc.Value,'WareHous','WareHous') AND  SEEK('W'+WareHous.cThrdPLPr,'EDIACPRT','ACCFACT') AND ;
    SEEK(EDIACPRT.cPartCode+'940','EDIPD','PARTTRANS')
    SELECT EDITRANS
    IF !SEEK('940'+PADR(lcPikTkt,40)+'W'+WareHous.cThrdPLPr,'EDITRANS','TYPEKEY')
       INSERT INTO 'EDITRANS' (CEDITRNTYP,KEY,TYPE,CPARTNER,lInterComp) VALUES ;
                              ('940',lcPikTkt,'W',WareHous.cThrdPLPr,EDIACPRT.lInterComp)
    ENDIF
    REPLACE cStatus WITH 'N'
    =gfAdd_Info('EDITRANS')
  ENDIF
  *B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[End]
  
ENDIF

IF llModiDye
  *-- Adjust the record pointer in the stydye file.
  =SEEK(PADR(lcStyle,19)+lcPikWare+lcDyelot ,'StyDye')
  *-- Call function to calculate the allocated pieces & adjust the passed file.
  ThisFormSet.mAllocateQty('StyDye' , 'laPikQty[&lcCnt]' , +1)
  
  *!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse[Start]
  SELECT STYDYE
  IF lcPikWare <> EVALUATE(THISFORMSET.lcTmpOrdline+'.cwarecode')
     REPLACE ORD1   WITH ORD1 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY1'),;
             ORD2   WITH ORD2 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY2'),;
             ORD3   WITH ORD3 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY3'),;
             ORD4   WITH ORD4 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY4'),;
             ORD5   WITH ORD5 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY5'),;
             ORD6   WITH ORD6 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY6'),;
             ORD7   WITH ORD7 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY7'),;
             ORD8   WITH ORD8 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY8'),;
             TotORD WITH ORD1 + ORD2 + ORD3 + ORD4 + ORD5 + ORD6 + ORD7 + ORD8



    IF SEEK(PADR(lcStyle,19)+EVALUATE(THISFORMSET.lcTmpOrdline+'.cwarecode')+lcDyelot  ,'StyDye')
       REPLACE ORD1   WITH MAX(ORD1 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY1'),0),;
               ORD2   WITH MAX(ORD2 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY2'),0),;
               ORD3   WITH MAX(ORD3 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY3'),0),;
               ORD4   WITH MAX(ORD4 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY4'),0),;
               ORD5   WITH MAX(ORD5 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY5'),0),;
               ORD6   WITH MAX(ORD6 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY6'),0),;
               ORD7   WITH MAX(ORD7 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY7'),0),;
               ORD8   WITH MAX(ORD8 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY8'),0),;
               TotORD WITH ORD1 + ORD2 + ORD3 + ORD4 + ORD5 + ORD6 + ORD7 + ORD8
    ENDIF 
  ENDIF 
  *!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse[End]

  
  
ENDIF

*-- Adjust the record pointer in the stydye file.
=SEEK(PADR(lcStyle,19)+lcPikWare+SPACE(10) ,'StyDye')

*-- Call function to calculate the allocated pieces & adjust the passed file.
ThisFormSet.mAllocateQty('StyDye' , 'laPikQty[&lcCnt]' , +1)



*!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse[Start]
SELECT STYDYE
IF lcPikWare <> EVALUATE(THISFORMSET.lcTmpOrdline+'.cwarecode')
   REPLACE ORD1   WITH ORD1 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY1'),;
           ORD2   WITH ORD2 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY2'),;
           ORD3   WITH ORD3 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY3'),;
           ORD4   WITH ORD4 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY4'),;
           ORD5   WITH ORD5 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY5'),;
           ORD6   WITH ORD6 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY6'),;
           ORD7   WITH ORD7 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY7'),;
           ORD8   WITH ORD8 + EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY8'),;
           TotORD WITH ORD1 + ORD2 + ORD3 + ORD4 + ORD5 + ORD6 + ORD7 + ORD8



  IF SEEK(PADR(lcStyle,19)+EVALUATE(THISFORMSET.lcTmpOrdline+'.cwarecode')+SPACE(10) ,'StyDye')
     REPLACE ORD1   WITH MAX(ORD1 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY1'),0),;
             ORD2   WITH MAX(ORD2 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY2'),0),;
             ORD3   WITH MAX(ORD3 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY3'),0),;
             ORD4   WITH MAX(ORD4 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY4'),0),;
             ORD5   WITH MAX(ORD5 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY5'),0),;
             ORD6   WITH MAX(ORD6 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY6'),0),;
             ORD7   WITH MAX(ORD7 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY7'),0),;
             ORD8   WITH MAX(ORD8 - EVALUATE(THISFORMSET.lcTmpOrdline+'.QTY8'),0),;
             TotORD WITH ORD1 + ORD2 + ORD3 + ORD4 + ORD5 + ORD6 + ORD7 + ORD8
  ENDIF 
ENDIF 
*!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse[End]


*-- Call function to calculate the allocated pieces & adjust the passed file.
ThisFormSet.mAllocateQty('Style' , 'laPikQty[&lcCnt]' , +1)

*-- Call func. to adjust the order line allocated qty.
ThisFormSet.mModifyOrder(@laPikQty , .T. , lcPikTkT , IIF(EMPTY(lcDyelot) , SPACE(10) , lcDyelot) , DATE())

*-- While allocating check if the pick from warehouse is different than the order warehouse 
*-- then replace the ordline warehouse with the pick from warehouse
IF OrdHdr.cWareCode <> lcPikWare
  REPLACE cWareCode WITH lcPikWare IN (THISFORMSET.lcTmpOrdline)
ENDIF

ENDPROC
PROCEDURE mreleaseline
PARAMETERS llModiDye, lcStyle, lcPikWare
PRIVATE llModiDye, lcStyle, lcPikWare , laDumy

DECLARE laDumy[9]
laDumy = 0

IF llModiDye
  *-- Adjust the record pointer in the stydye file.
  =SEEK(PADR(lcStyle,19)+lcPikWare+lcDyelot , 'StyDye')
  *-- Call function to calculate the allocated pieces & adjust the passed file.
  ThisFormSet.mAllocateQty('StyDye' , "EVALUATE(THISFORMSET.lcTmpOrdline+'.Pik'+lcCnt)" , -1)
ENDIF

*-- Adjust the record pointer in the stydye file.
=SEEK(PADR(lcStyle,19)+lcPikWare+SPACE(10) , 'StyDye')

*-- Call function to calculate the allocated pieces & adjust the passed file.
ThisFormSet.mAllocateQty('StyDye' , "EVALUATE(THISFORMSET.lcTmpOrdline+'.Pik'+lcCnt)" , -1)

*-- Call function to calculate the allocated pieces & adjust the passed file.
ThisFormSet.mAllocateQty('Style' ,"EVALUATE(THISFORMSET.lcTmpOrdline+'.Pik'+lcCnt)" , -1)

*-- Modify the order line with the allocated qty.
ThisFormSet.mModifyOrder(@laDumy , .F. , SPACE(6) , SPACE(10) , {})

*-- When releasing the allocated line set the warehouse to the default one.
REPLACE cWareCode WITH OrdHdr.cWareCode IN (THISFORMSET.lcTmpOrdline)

ThisFormSet.mOnlyLine(lcPikTkt)


ENDPROC
PROCEDURE mmodifyline
PARAMETERS llModiDye, lcStyle, lcPikWare, lcDyelot
PRIVATE llModiDye, lcStyle, lcPikWare, lcDyelot, lcCurAlias

*-- Save the current file in a variable.
lcCurAlias = ALIAS()

*-- Call screen to be able to modify the current line.

*N120543,1 HBG 13/11/2003 Send Use style configuration flag as a prameter to modify screen[Begin]
*!*	DO FORM (oAriaApplication.ScreenHome+Thisformset.AriaForm1.Moduleid+"\ALMDLIN.SCX") WITH ;
*!*	         Thisformset , This.llChkAprov , llModiDye, lcStyle, lcPikWare, lcDyelot , ;
*!*	         This.llTotAvlbl , This.lcDefware , This.AriaForm1.cboOrdLoc.Value , ;
*!*	         This.laReleased , This.AriaForm1.txtInvSty.Value
DO FORM (oAriaApplication.ScreenHome+Thisformset.AriaForm1.Moduleid+"\ALMDLIN.SCX") WITH ;
         Thisformset , This.llChkAprov , llModiDye, lcStyle, lcPikWare, lcDyelot , ;
         This.llTotAvlbl , This.lcDefware , This.AriaForm1.cboOrdLoc.Value , ;
         This.laReleased , This.AriaForm1.txtInvSty.Value,This.lluseconfg 
*N120543,1 HBG 13/11/2003 [End]
         
*-- Restore the previous file.
IF !EMPTY(lcCurAlias)
  SELECT (lcCurAlias)
ENDIF
ENDPROC
PROCEDURE mallocateqty
PARAMETERS lcToFile, lcWatField, lnAction
PRIVATE laAloTemp , lcToFile, lcWatField, lnAction

*-- If the current style is an inventory style, update the style or stydye files..
IF This.AriaForm1.txtInvSty.Value
  *-- Array to read the picked field.
  DIMENSION laAloTemp[9]
  STORE 0 TO laAloTemp
  
  SELECT &lcToFile
  FOR lnCnt = 1 To 8
    lcCnt = STR(lnCnt,1)
    laAloTemp[lnCnt] = &lcToFile..Alo&lcCnt + (lnAction * &lcWatField)
    laAloTemp[lnCnt] = IIF(laAloTemp[lnCnt] < 0 , 0 , laAloTemp[lnCnt])
    laAloTemp[9]     = laAloTemp[9] + laAloTemp[lnCnt]
  ENDFOR
  GATHER FROM laAloTemp FIELDS Alo1, Alo2, Alo3, Alo4,Alo5, Alo6, Alo7, Alo8, TotAlo
ENDIF


ENDPROC
PROCEDURE mnodyelot
PARAMETERS lcStyle, lcOrdWare, lcDyelot
PRIVATE llGoOut , lcStyle, lcOrdWare, lcDyelot

lcOrdWare = IIF(EMPTY(lcOrdWare) , This.lcDefWare , lcOrdWare)
llGoOut   = .F.

IF !SEEK(PADR(lcStyle,19) + lcOrdWare + lcDyelot, 'StyDye' )
  *-- Call the global dyelot browse.
  *N120543,1 HBG 13/11/2003 Send parameter to the global function to identify the value of Use style configuration [Begin]
  *IF !SDYEBROW(PADR(lcStyle,19) , @lcDyelot, .T., lcOrdWare,.T.)
  IF !SDYEBROW(PADR(lcStyle,19) , @lcDyelot, .T., lcOrdWare,.T.,.F.,.F.,.F.,THISFORMSET.lluseconfg)
  *N120543,1 [End]
    llGoOut = .T.
  ENDIF
ENDIF 
RETURN llGoOut


ENDPROC
PROCEDURE mmodifyorder
PARAMETERS laPikd, llStatus, lcPikTkt, lcDyelot, ldActDate
PRIVATE laPikd, llStatus, lcPikTkt, lcDyelot, ldActDate

*-- FP Increase/Decrease Net Alo Qty [Begin]
IF ASCAN(oAriaApplication.laEvntTrig,PADR("UPDTORDHDR",10)) <> 0
  =gfDoTriger('ALSTYAL',PADR("UPDTORDHDR",10))
ENDIF

*-- Adjust the order line with the allocated qtys.
SELECT (THISFORMSET.lcTmpOrdline)

*-- Save the order qty. before releasing to be saved into the Pikline file.
Thisformset.laReleased = ""
SCATTER TO Thisformset.laReleased FIELDS Pik1,Pik2,Pik3,Pik4,Pik5,Pik6,Pik7,Pik8,TotPik,Picked,PikTkt,PikDate,Dyelot

GATHER FROM laPikd FIELDS Pik1, Pik2, Pik3, Pik4, Pik5, Pik6, Pik7, Pik8, TotPik
REPLACE Picked  WITH llStatus  ;
        PikTkt  WITH lcPikTkt  ;
        PikDate WITH ldActDate ;
        Dyelot WITH lcDyelot


*!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse[Start]
IF EVALUATE(THISFORMSET.lcTmpOrdline+'.cWareCode') <> THis.ariaForm1.cboPickLoc.Value 
  REPLACE cWareCode WITH lcPikWare IN (THISFORMSET.lcTmpOrdline)
ENDIF
*!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse[End]

*N120543,1 HBG 13/11/2003 Update master Order Line file[Begin]
SCATTER MEMVAR MEMO
SELECT ORDLINE1
SET ORDER TO Ordlines
=SEEK(m.style+DTOS(m.complete)+m.cordtype+m.order+m.store+STR(m.lineno,6))
GATHER MEMVAR MEMO
*N120543,1 [End]

ENDPROC
PROCEDURE monlyline
PARAMETERS lcPikTkt
PRIVATE lnCurRec , lcPikTkt

*-- Set the delete flag to true.
llDelete   = .T.

*T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [Start]
llReleasPick = .T. && flag to check if pick ticket has other lines
*T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [End]

*-- Open the pik line file.
IF !USED("PIKLINE")
  =gfOpenFile(oAriaApplication.DataDir+'PikLine',oAriaApplication.DataDir+'PikLine','SH')
ENDIF

*-- Save the record no. in the order line file.
SELECT (THISFORMSET.lcTmpOrdline)
lnCurRec   = RECNO()
lcCurOrd   = EVALUATE(THISFORMSET.lcTmpOrdline+'.Order')

SET ORDER TO TAG ORDLINE

*-- Check if there is any order line use the same picking ticket.
SCAN REST WHILE Order = lcCurOrd FOR PikTkt = lcPikTkt
  *-- Set the delete flag to false.
  llDelete = .F.
  EXIT
ENDSCAN

SET ORDER TO TAG ORDLINES

*-- Restore the record no.
IF lnCurRec <= RECCOUNT(THISFORMSET.lcTmpOrdline) .AND. lnCurRec > 0
  GOTO lnCurRec
ENDIF

*T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [Start]
lcOldOrdLine = ORDER('ORDLINE1')
lnOrdCurRec  = RECNO('ORDLINE1')
SET ORDER TO ORDLINE  IN ORDLINE1
IF SEEK('O'+lcCurOrd,'ORDLINE1','ORDLINE')
  SELECT ORDLINE1
  SCAN REST WHILE CORDTYPE+ORDER+STR(LINENO,6)  = 'O'+lcCurOrd FOR PIKTKT =  lcPikTkt
    llReleasPick  = .F.
    EXIT
  ENDSCAN 
ENDIF 
SET ORDER TO (lcOldOrdLine) IN ORDLINE1
IF lnOrdCurRec  <= RECCOUNT('ORDLINE1') .AND. lnOrdCurRec  > 0
  GOTO lnOrdCurRec  IN  ORDLINE1
ENDIF
SELECT (THISFORMSET.lcTmpOrdline)
*T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [End]

IF llDelete .AND. !("*" $ lcPikTkt)
  *-- Change the piktkt status to be canceled.
  
  *T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [Start]
  *IF SEEK(lcPikTkt , "PikTkt") 
  IF SEEK(lcPikTkt , "PikTkt") AND llReleasPick 
  *T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [End]
  
    REPLACE PikTkt.Status WITH "X"
    *:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003][Start]
    IF ASCAN(This.laEvntTrig,PADR('CANPCKPACK',10),1,ALEN(This.laEvntTrig,1),1) > 0
       =This.mDoTrigger(PADR('CANPCKPACK',10))    
    ENDIF    
    *:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003][End]
    *B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[Start]
    IF !USED("WAREHOUS")
      =gfOpenFile(oAriaApplication.DataDir+'WAREHOUS',oAriaApplication.DataDir+'WAREHOUS','SH')
    ENDIF  
    cAlis=ALIAS()
    SELECT WAREHOUS
    SET ORDER TO Warehous
    SEEK PikTkt.cWareCode
    SELECT (cAlis)
    IF 'AS' $  oAriaApplication.CompanyInstalledModules  AND SEEK(PikTkt.cWareCode,'WareHous','WareHous') AND  SEEK('W'+WareHous.cThrdPLPr,'EDIACPRT','ACCFACT') AND ;
      SEEK(EDIACPRT.cPartCode+'940','EDIPD','PARTTRANS') AND SEEK('940'+PADR(lcPikTkt,40)+'W'+WareHous.cThrdPLPr,'EDITRANS','TYPEKEY')
      SELECT 'EDITRANS'
      DELETE
    ENDIF
    *B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[End]
    
    
  ENDIF
  
  IF !SEEK(lcPikTkt + lcCurOrd , "PikLine")
    *-- Add record in the released pick line file have the order line info.
    SELECT (THISFORMSET.lcTmpOrdline)
    SCATTER MEMVAR MEMO
    SELECT PikLine
    APPEND BLANK
    GATHER MEMVAR MEMO
    =gfAdd_Info("PikLine" , Thisformset)
    *-- Save the order info into the Pikline file.
    GATHER FROM Thisformset.laReleased FIELDS Pik1,Pik2,Pik3,Pik4,Pik5,Pik6,Pik7,Pik8,TotPik,Picked,PikTkt,PikDate,Dyelot
    
  *T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [Start]
  ELSE
    lcOldAlias = SELECT()
    SELECT PikLine
    LOCATE REST WHILE PIKTKT+ORDER+STR(LINENO,6) = lcPikTkt + lcCurOrd  FOR STYLE = EVALUATE(THISFORMSET.lcTmpOrdline+'.Style')
    IF !FOUND()
      SELECT (THISFORMSET.lcTmpOrdline)
      SCATTER MEMVAR MEMO
      SELECT PikLine
      APPEND BLANK
      GATHER MEMVAR MEMO
      =gfAdd_Info("PikLine" , Thisformset)
      *-- Save the order info into the Pikline file.
      GATHER FROM Thisformset.laReleased FIELDS Pik1,Pik2,Pik3,Pik4,Pik5,Pik6,Pik7,Pik8,TotPik,Picked,PikTkt,PikDate,Dyelot
    ENDIF 
    SELECT(lcOldAlias)
    *T20060829.0002,1 MMT 09/20/20006 Fix bug of relesing the whole pick. ticket when you release one line from it [End]

  ENDIF
ENDIF

ENDPROC
PROCEDURE mpickalocated
*-- Assign a picking ticket no. for the current order line.
lcPikTkt = Thisformset.AriaForm1.Al1.lfgetpktkt(EVALUATE(THISFORMSET.lcTmpOrdline+'.order') , OrdHdr.cDivision , EVALUATE(THISFORMSET.lcTmpOrdline+'.Store') , this.ariaform1.cboPickLoc.Value)

*-- Add record for the current picking ticket in the picking ticket file.
SELECT PikTkt
IF !SEEK(lcPikTkT)
  APPEND BLANK
  REPLACE PikTkt    WITH lcPikTkT ;
          cWareCode WITH this.ariaform1.cboPickLoc.Value ;
          Account   WITH EVALUATE(THISFORMSET.lcTmpOrdline+'.Account') ;
          Store     WITH EVALUATE(THISFORMSET.lcTmpOrdline+'.Store') ;
          Order     WITH EVALUATE(THISFORMSET.lcTmpOrdline+'.Order') ;
          Status    WITH "O" ;
          Date      WITH DATE()
  =gfAdd_Info('PikTkt',Thisformset)
  *:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003][Start]
  IF ASCAN(This.laEvntTrig,PADR('UPDPCKPACK',10),1,ALEN(THIS.laEvntTrig,1),1) > 0
     =THIS.mDoTrigger(PADR('UPDPCKPACK',10))    
  ENDIF  
  *:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003][End]
  *B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[Start]
  IF !USED("WAREHOUS")
  =gfOpenFile(gcDataDir+'WAREHOUS',gcDataDir+'WAREHOUS','SH')
	ENDIF  
	cAlis=ALIAS()
	SELECT WAREHOUS
	SET ORDER TO Warehous
	SEEK(this.ariaform1.cboPickLoc.Value)
	SELECT (cAlis)
	IF lcPikTkt <> '******' AND 'AS' $ oAriaApplication.CompanyInstalledModules   AND SEEK(this.ariaform1.cboPickLoc.Value,'WareHous','WareHous') AND ;
	  SEEK('W'+WareHous.cThrdPLPr,'EDIACPRT','ACCFACT') AND  SEEK(EDIACPRT.cPartCode+'940','EDIPD','PARTTRANS')
	  SELECT EDITRANS
	  IF !SEEK('940'+PADR(lcPikTkt,40)+'W'+WareHous.cThrdPLPr,'EDITRANS','TYPEKEY')
	     INSERT INTO 'EDITRANS' (CEDITRNTYP,KEY,TYPE,CPARTNER,lInterComp) VALUES ;
	                            ('940',lcPikTkt,'W',WareHous.cThrdPLPr,EDIACPRT.lInterComp)
	  ENDIF
	  REPLACE cStatus WITH 'N'
	  =gfAdd_Info('EDITRANS')
	ENDIF
  *B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[End]
  
  
ENDIF
*-- Adjust the order line with the allocated qtys.
SELECT (THISFORMSET.lcTmpOrdline)
REPLACE PikTkt  WITH lcPikTkt  ;
        PikDate WITH DATE()
*N120543,1 HBG 13/11/2003 Update master Order Line file[Begin]
SCATTER MEMVAR MEMO
SELECT ORDLINE1
SET ORDER TO Ordlines
=SEEK(m.style+DTOS(m.complete)+m.cordtype+m.order+m.store+STR(m.lineno,6))
GATHER MEMVAR MEMO
*N120543,1 [End]


ENDPROC
PROCEDURE mrecordlock
PARAMETERS lcFileName, lcFileDesc
PRIVATE  llLocked , lnTemp , lnChoice , lcFileName, lcFileDesc

*-- Flag to know if succeed in locking the files.
llLocked   = .F.
*-- Set a no. of trials.
lnHowMany  = 10

*-- Save current reprocess setting.
lnReProcess = SET("Reprocess")

SET REPROCESS TO 1

*-- Try to execute the locking till succeed.
DO WHILE !llLocked
  llLocked = RLOCK(lcFileName)
  *-- If fail to lock the needed files.
  IF !llLocked
    IF lnHowMany = 0
      *** &lcFileDesc is in use by another user. ***
      *** <  Retry  > - <  Cancel > ***
      IF gfModalGen("QRM44022B00016" , "DIALOG" , lcFileDesc) = 2
        llLocked = .F.
        EXIT
      ELSE
        lnHowMany = 10
      ENDIF
    ENDIF
    lnHowMany = lnHowMany - 1
    LOOP
  ELSE
    EXIT
  ENDIF
ENDDO

*-- Restore old reprocess value
SET REPROCESS TO lnReProcess

RETURN llLocked



ENDPROC
PROCEDURE mchkaprvamt
PARAMETERS lcHdrKey , lnDiferenc , llGetNum
PRIVATE llCanAloct

*-- Set the returned value to true.
llCanAloct = .T.

*-- Check the check approve setup.
IF This.llChkAprov
  PRIVATE lcLinesOrd , lcLinesKey , lnCurrAlis , lcHdrKey , lnAllocAmt
  *-- Variable to accumelate the allocated amount
  lnAllocAmt = 0

  *-- Save used Environment
  lnCurrAlis = SELECT(0)
  SELECT (THISFORMSET.lcTmpOrdline)
  lcLinesOrd = ORDER()
  *-- if no Active index save Record Number.
  IF EMPTY(lcLinesOrd)
    lcLinesKey = RECNO()
  ELSE  && else if there is active index save current key.
    lcLinesKey = EVALUATE(KEY())
  ENDIF

  *-- Check processing
  SET ORDER TO
  SUM totpik*price TO lnAllocAmt FOR cOrdType + Order =  lcHdrKey

  *-- Restore Old Environment 
  SET ORDER TO &lcLinesOrd  && Restore Old Order.

  *-- Restore Record pointer. 
  IF EMPTY(lcLinesOrd)
    IF BETWEEN(lcLinesKey,1,RECCOUNT())
      GO lcLinesKey
    ENDIF
  ELSE
    =SEEK(lcLinesKey)
  ENDIF
  
  *-- Accumilate the allaocated amount.
  lnAllocAmt = lnAllocAmt + lnDiferenc
  
  *-- if Get Compared number only.
  IF llGetNum
    *-- Restore old alias.
    SELECT (lnCurrAlis)
    *-- Checking Order Approved Amount 
    RETURN (OrdHdr.ApprAmt - lnAllocAmt)
  ELSE
    *-- if you are greater than approval amount.
    IF (OrdHdr.ApprAmt - lnAllocAmt) < 0
      =gfModalGen("TRM44079B00000" , "DIALOG")
      llCanAloct = .F.
    ENDIF
  ENDIF  

  *-- Restore old alias.
  SELECT (lnCurrAlis)
ENDIF

*-- Return with flag if can allocate or not.
RETURN llCanAloct

ENDPROC
PROCEDURE mtotavailable
PARAMETER lcSize
PRIVATE lnTotal

lnTotal = 0

*-- this function is to calculate the availble qty depend on setting
*-- in AL module  ( the availble = STQ - ALO ) or
*-- (the availble qty = WIP + STQ - ALO )
*-- lcSize  --> hold '9' if the function is called to get total availble qty
*-- hold ('1'->'8') called to get availble by size
*-- lnTotal --> hold the availble qty

*-- Get the right record in the stydye.
=SEEK(PADR(Thisformset.AriaForm1.CntStyle.Value,19)+this.ariaform1.cboPickLoc.Value+SPACE(10), "STYDYE")

lcSize = ALLTRIM(lcSize)
IF !This.llTotAvlbl          && the avaible = stq - alocated
  IF lcSize = '9'       && the total qty
    lnTotal = MAX((STYDYE.TotStk - STYDYE.TotALO),0)
  ELSE                  && by size
    lnTotal = MAX((STYDYE.Stk&lcSize - STYDYE.Alo&lcSize) , 0 )
  ENDIF
ELSE                && the avialble = wip + stq - alocated
  *-- To get the WIP we must get the first record of the style in the
  *-- stydye file to get the wip cause there is no wip for dyelot
  *-- after that return to the current record
  
  *-- Save record pointer in STYDYE file.
  lnRecNo = RECNO("STYDYE")
  
  *-- Get the WIP value.
  =SEEK(PADR(Thisformset.AriaForm1.CntStyle.Value,19)+this.ariaform1.cboPickLoc.Value+SPACE(10),"STYDYE")
  lnWip = IIF(lcSize = '9', STYDYE.TotWIP , STYDYE.WIP&lcSize)
  
  *-- Restore record pointer in STYDYE file.
  IF BETWEEN(lnRecNo, 1, RECCOUNT("STYDYE"))
    GO lnRecNo IN STYDYE
  ENDIF
  
  *-- Calculate the WIP value due to total Qty. or by size.
  IF lcSize = '9'    && the total qty
    lnTotal = lnWip + STYDYE.TotStk - STYDYE.TotALO
  ELSE               && by size
    lnTotal = lnWip + STYDYE.Stk&lcSize - STYDYE.Alo&lcSize
  ENDIF

ENDIF

*-- Return the calculated value.
RETURN(lnTotal)



ENDPROC
PROCEDURE mactivatepad
*-- Make Menu Pad Under Pick Flag 
llPickOpt = .T.  && Pick Option is in menu (Default Value)
IF ASCAN(oAriaApplication.laEvntTrig,PADR("STYPKSTAT",10)) <> 0
  =gfDoTriger('ALSTYAL',PADR("STYPKSTAT",10))
ENDIF

*-- Define the pick pad
IF llPickOpt .AND. THIS.llPikNow
  *HBG 1/24/2005 Modify code to apply the new interface [Begin]  
  *!*	  DEFINE PAD _PICK OF _MSYSMENU PROMPT LANG_AlloByStyle_PkPad KEY ALT+P , ' '
  *!*	  SET SKIP OF PAD _PICK OF _MSYSMENU (_screen.ActiveForm.Parent.activemode = "S")
  *!*	  ON PAD _PICK OF _MSYSMENU ACTIVATE POPUP _PICKPOP
  DEFINE PAD _PICK OF (THISFORMSET.chostformname) PROMPT LANG_AlloByStyle_PkPad KEY ALT+P , ' '
  SET SKIP OF PAD _PICK OF (THISFORMSET.chostformname) (_screen.ActiveForm.Parent.activemode = "S")
  ON PAD _PICK OF (THISFORMSET.chostformname) ACTIVATE POPUP _PICKPOP
  lcHostFormName = '[' + ThisFormSet.cHostFormName + ']'
  *HBG [End]
  DEFINE POPUP    _PICKPOP MARGIN SHADOW
  DEFINE BAR 1 OF _PICKPOP PROMPT LANG_AlloByStyle_PkAuto
  DEFINE BAR 2 OF _PICKPOP PROMPT LANG_AlloByStyle_PkMan
  SET MARK OF  BAR 1 OF _PICKPOP TO .T.
  ON SELECTION POPUP    _PICKPOP _screen.ActiveForm.Parent.mPickMethd()
ENDIF  


ENDPROC
PROCEDURE mpickmethd
*-- If the same bar selected, return
IF BAR() = _screen.ActiveForm.Parent.lnPicMethd
  RETURN
ENDIF
_screen.ActiveForm.Parent.lnPicMethd = BAR()

_screen.ActiveForm.Parent.llPickMethd = !_screen.ActiveForm.Parent.llPickMethd
SET MARK OF BAR 1 OF _PICKPOP TO _screen.ActiveForm.Parent.llPickMethd
SET MARK OF BAR 2 OF _PICKPOP TO !_screen.ActiveForm.Parent.llPickMethd
ENDPROC
PROCEDURE mpickstat
*-- Get the enable mode for the pick button
llPickStat = .F.
IF !EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.Style')) AND (EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt')) OR "*" $ EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt'))
  llPickStat = .T.
ELSE
  llPickStat = .F.
ENDIF
IF This.llPikNow AND This.activemode = "V"
  This.ariaform1.cmdPick.Enabled = llPickStat
ELSE
  This.ariaform1.cmdPick.Enabled = .F.
ENDIF

*-- Call the trigger function.
IF ASCAN(oAriaApplication.laEvntTrig,PADR("STYPKSTAT",10)) <> 0
  =gfDoTriger('ALSTYAL',PADR("STYPKSTAT",10))
ENDIF

ENDPROC
PROCEDURE mforcemsg
PARAMETERS lcMessage
PRIVATE lcButton , lnAction , lcMsgParm , llForceMe

STORE '' TO lcButton , lcMsgParm
lnAction = 0

llForceMe  = .T.
IF Thisformset.lcAlwForce <> "Y"
  *-- No Force allocation done.
  IF Thisformset.lcAlwForce = "N"
    llForceMe = .F.
  ELSE
    *-- Call user defined process.  
    *llForceMe = gfUserPriv('AL','ALSTYAL','FORCING')
    llForceMe = This.lForcepriv
  ENDIF
ENDIF

*T20060818.0001(C200876) TMI [Start] if Bin Location is installed deny force allocation
IF ASCAN(Thisformset.laEvntTrig,PADR('ISUSEBIN',10),1,ALEN(Thisformset.laEvntTrig,1),1) > 0
  llForceMe = !Thisformset.mDoTrigger(PADR('ISUSEBIN',10))
ENDIF          
*T20060818.0001(C200876) TMI [End  ] 

*-- If system can force allocation, & user has privilage for this process.
IF llForceMe
  lcMsgParm = LANG_AlloByStyle_MsgForce
  lcButton  = "B00006"
  lcMessage = "TR"+lcMessage
ELSE
  lcButton  = "B00000"
  lcMessage = "QR"+lcMessage
ENDIF

*-- Inform user with the right message.
lnAction = gfModalGen(lcMessage+lcButton , "DIALOG" , lcMsgParm)
lnAction = IIF(llForceMe,lnAction,2)
RETURN lnAction

ENDPROC
PROCEDURE mnavigate
*-- Refresh the form to activate the current record values.
This.refresh

WITH Thisformset.ariaform1 
  IF This.llMultiWH
    *-- Get the default warehouse for the current style.
    .cboOrdLoc.Value  = IIF(EMPTY(.cboOrdLoc.Value) .OR. !SEEK(PADR(.CntStyle.Value,19)+.cboOrdLoc.Value+SPACE(10) , 'StyDye') , STYLE.cDefWare , .cboOrdLoc.Value)
    .cboPickLoc.value = IIF(EMPTY(.cboPickLoc.value) .OR. !SEEK(PADR(.CntStyle.Value,19)+.cboPickLoc.value+SPACE(10) , 'StyDye') , STYLE.cDefWare , .cboPickLoc.value)
  ELSE
    *-- If single warehouse use the only existing warehouse.
    .cboOrdLoc.Value  = This.lcDefWare 
    .cboPickLoc.Value = This.lcDefWare
  ENDIF
  .cboOrdLoc.OldValue  = .cboOrdLoc.Value
  .cboPickLoc.OldValue = .cboPickLoc.value 
  *-- Get the total available Qty.
  .txtTotAval.Value = This.mTotAvailable ("9")
  *-- Get the total ordered qty.
  .txtTotOrd.Value  = Thisformset.mTotord ()

  *-- Get the inventory totals.
  .cboOrdLoc.Refresh
  .cboPickLoc.Refresh
  .txtTotAlo.Refresh 
  .txtTotAval.Refresh
  .txtTotOrd.Refresh
  .txtTotStk.Refresh
  .txtTotUnAlo.Refresh
  .txtTotWip.Refresh
ENDWITH

*-- Call the grid change record because it has all the needed navigation
*This.mafterrowcolchange ()


ENDPROC
PROCEDURE mrelation
PARAMETERS oForm
 
SELECT STYLE
IF !"STYDYE"$UPPER(SET("relation"))
  *-- Set relation between style & stydye to get the totals
  *SET RELATION TO style+_Screen.ActiveForm.cboPickLoc.Value + SPACE(10) INTO STYDYE ADDITIVE
  lcRelation = "SET RELATION TO style+ '"+ oForm.AriaForm1.cboPickLoc.Value  + "'+ SPACE(10) INTO STYDYE ADDITIVE"
  &lcRelation. 
ENDIF  

*!*	IF !"ORDLINE"$UPPER(SET("relation"))
*!*	  *-- Set RElation into order lines to get the related lines to the current style.
*!*	  SET RELATION TO Style INTO OrdLine ADDITIVE
*!*	ENDIF  

SELECT (THISFORMSET.lcTmpOrdline)
IF !"ORDHDR"$UPPER(SET("relation"))
  *-- Set relation between order header & line to be used in the browse.
  SET RELATION TO cOrdType+Order INTO OrdHdr ADDITIVE
ENDIF  

IF !"CUSTOMER"$UPPER(SET("relation"))
  *-- setting a relation between the ordline and the customer file in order to check the 
  *-- status of the customer when allocating or picking a line in order to not allow 
  *-- picking or allocating an ordline that its account is not active.
  SET RELATION TO IIF(EMPTY(Store),'M'+Account,'S'+Account+Store) INTO Customer ADDITIVE
ENDIF  

SELECT ordhdr
IF !"WAREHOUS"$UPPER(SET("RELATION"))
  *-- Setting relation between the order header & the warehous file
  SET RELATION TO cwarecode INTO warehous
ENDIF

ENDPROC
PROCEDURE mfilters
PARAMETERS oForm

SELECT OrdHdr
SET FILTER TO 
lcFilter = "SET FILTER TO cOrdType = 'O' AND Status $ 'OH' AND !EOF('WareHous')"
&lcFilter. 

SELECT WareHous
SET KEY TO
SET KEY TO oForm.AriaForm1.cboOrdLoc.Value
=SEEK(oForm.AriaForm1.cboOrdLoc.Value)

*N120543,1 HBG 13/11/2003 Remove the filter on ORDLINE and use temp file instead[Begin]
*!*	SELECT OrdLine
*!*	SET FILTER TO 
*!*	*lcFilter = "SET FILTER TO style+DTOS(complete)+cordtype+order+store+STR(lineno,6)='" +;
*!*	*            oForm.cntStyle.Value + "' AND TotQty <> 0 AND cOrdType = 'O' AND OrdHdr.Status $ 'OH' AND OrdHdr.cWareCode = '"+ oForm.cboOrdLoc.Value  + "'"
*!*	lcFilter = "SET FILTER TO TotQty <> 0 AND !EOF('ORDHDR')"
*!*	&lcFilter.
*!*	SET KEY TO 
*!*	SET KEY TO oForm.cntStyle.Value
*!*	=SEEK(oForm.cntStyle.Value)
*N120543,1 [End]

*-- This trigger will adjust the filter on the ordline file
IF ASCAN(oAriaApplication.laEvntTrig,PADR("ADJBROW",10)) <> 0
  =gfDoTriger('ALSTYAL',PADR("ADJBROW",10))
ENDIF

ENDPROC
PROCEDURE mafterrowcolchange
*N120543,1 HBG 13/11/2003 Add parameter to check if the Row information is changed
LPARAMETERS llRowChange

IF llRowChange
*N120543,1 [End]
  WITH This.AriaForm1
    *-- Change the status of the process buttons.
    IF !EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt')) .AND. !EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.Style'))
      .cmdModify.Enabled = .T.
      .cmdRelease.Enabled = .T.
      *HBG 1/24/2005 Modify code to apply the new interface [Begin]  
      *!*	      oariaapplication.otoolbar.changebuttonstatus('pbObjLink','ENABLED')
      THISFORMSET.otoolbar.changebuttonstatus('pbObjLink','ENABLED')
      *HBG [End]
    ELSE
      .cmdModify.Enabled = .F.
      .cmdRelease.Enabled = .F.
      *HBG 1/24/2005 Modify code to apply the new interface [Begin]  
      *!*	      oariaapplication.otoolbar.changebuttonstatus('pbObjLink','DISABLE')
      THISFORMSET.otoolbar.changebuttonstatus('pbObjLink','DISABLE')
      *HBG [End]
    ENDIF
    IF EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.PikTkt')) .AND. !EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.Style'))
      .cmdAllocate.Enabled = .T.
    ELSE
      .cmdAllocate.Enabled = .F.
    ENDIF
  
    *-- Call function to enable/disable to call FPMAIN Once & determine the enable mode of Pick button.
    Thisformset.mPickStat()

    *-- Refresh the process command buttons
    .cmdAllocate.Refresh
    .cmdPick.Refresh
    .cmdModify.Refresh
    .cmdRelease.Refresh
    *-- Get the order warehouse code in the pick popup.
    *.cboPickLoc.Value    = IIF(!EMPTY(ORDLINE.CWARECODE) , ORDLINE.CWARECODE , Thisformset.lcDefware)
    .cboPickLoc.Oldvalue = .cboPickLoc.Value 
    .cboPickLoc.Value    = IIF(!EMPTY(EVALUATE(THISFORMSET.lcTmpOrdline+'.CWARECODE')) , EVALUATE(THISFORMSET.lcTmpOrdline+'.CWARECODE') , .cboOrdLoc.Value)
    .cboPickLoc.Refresh
  ENDWITH
*N120543,1 HBG 13/11/2003 End if Row information is changed[Begin]
ENDIF
*N120543,1 [End]
ENDPROC
PROCEDURE mtotord
*-- Save record Pointer in Style Dyelot file.
lnRecNo = IIF(!EOF("STYDYE"),RECNO("STYDYE"),0)

lnTotalOrd = 0
*-- Check if the current selected style is assigned to the selected warehouse code.
IF SEEK(PADR(Thisformset.AriaForm1.CntStyle.Value,19) + Thisformset.AriaForm1.cboOrdLoc.Value + SPACE(10) , "STYDYE")
  lnTotalOrd = StyDye.TotOrd
ELSE
  lnTotalOrd = 0
ENDIF
  
*-- Restore record pointer in style dyelot file.
IF lnRecNo # 0
  GOTO lnRecNo IN STYDYE
ENDIF

RETURN lnTotalOrd

ENDPROC
PROCEDURE mcreatefile
THIS.lcTmpOrdline = gfTempName()
SELECT ORDLINE1
=AFIELDS(laFileStru)

*khm1
lnFStru = ALEN(laFileStru,1)
DIMENSION laFileStru[lnFStru+1,18]
laFileStru[lnFStru+1,1] = 'Status'
laFileStru[lnFStru+1,2] = 'C'
laFileStru[lnFStru+1,3] = 1
laFileStru[lnFStru+1,4] = 0

FOR lnI = 7 TO 16
 STORE '' TO laFileStru[lnFStru+1,lnI]
ENDFOR
STORE 0 TO laFileStru[lnFStru+1,17],laFileStru[lnFStru+1,18]
*khm1

DECLARE laIndeces[3,2]
laIndeces[1,1] = 'cordtype+order+STR(lineno,6)'
laIndeces[1,2] = 'Ordline'
laIndeces[2,1] = 'style+DTOS(complete)+cordtype+order+store+STR(lineno,6)'
laIndeces[2,2] = 'Ordlines'
laIndeces[3,1] = 'cordtype+order+store+style+STR(lineno,6)'
laIndeces[3,2] = 'Ordlinst'
=gfCrtTmp(THISFORMSET.lcTmpOrdline, @laFileStru, @laIndeces)
ENDPROC
PROCEDURE mcollorders
SELECT (THISFORMSET.lcTmpOrdline)
lcPrevSett = SET("Safety")
SET SAFETY OFF
ZAP
PACK
SET SAFETY &lcPrevSett
SELECT (THISFORMSET.lcTmpOrdline)
SET RELATION TO 

SELECT ordhdr
SET RELATION TO 
SET ORDER TO ORDHDR 
lcFilter = FILTER()
SET FILTER TO 

SELECT ORDLINE1
SET ORDER TO Ordlines
=SEEK(This.ariaform1.cntStyle.value)
SCAN REST WHILE style+DTOS(complete)+cordtype+order+store+STR(lineno,6) = This.ariaform1.cntStyle.value
  =SEEK('O'+ORDLINE1.Order,'ORDHDR')
  *khm1
  *IF TotQty <> 0 AND !EOF('ORDHDR')
  IF TotQty <> 0 AND !EOF('ORDHDR') AND OrdHdr.Status <> 'X'
  *khm1
    SCATTER MEMVAR MEMO

    *khm1
    m.Status = OrdHdr.Status
    *khm1

    INSERT INTO (THISFORMSET.lcTmpOrdline) FROM MEMVAR
  ENDIF
ENDSCAN
SELECT ordhdr
SET FILTER TO &lcFilter
*-- Call functions to activate relations.
This.mRelation(Thisformset)
SELECT (THISFORMSET.lcTmpOrdline)
SET ORDER TO Ordlines
LOCATE
This.AriaForm1.grdOrder.Refresh()
ENDPROC
PROCEDURE mgetunaloqty
RETURN MAX(EVALUATE(THIS.lctmpordline +'.totQty') - EVALUATE(THIS.lctmpordline +'.TotPik'),0)
ENDPROC
PROCEDURE documentation
*!*	************************************************************************
*!*	Descrption    : Allocation by style
*!*	Developer     : 
*!*	Date          : 
*!*	Entry #       : 
*!*	************************************************************************
*!*	Modification 
*!* N120543,1 HBG 13/11/2003 Apply IC setup 'Use style configuration'
*!* B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[T20071010.0009]
*!* B608600,1 MMT 07/01/2008 move order qty to pick from wharhouse        [T20080305.0010]
*:* C201334,1 MMT 05/11/2011 Custom Pick and Pack monitor screen[T20110401.0003]
*!*	************************************************************************

ENDPROC
PROCEDURE Refresh
DODEFAULT()
ENDPROC
PROCEDURE Activate
*-- Call method to add the Pick pad to the system menu
This.mActivatePad ()

*-- Call method to execute the relation
This.mRelation(Thisformset)
DODEFAULT()


ENDPROC
PROCEDURE find
LPARAMETERS lcAlias

*-- Save record pointer & Clear relations before calling gfStyBrw()
SELECT STYLE
lnRecNo = IIF(!EOF(),RECNO(),0)
SET RELATION TO 

SELECT (THISFORMSET.lcTmpOrdline)
SET RELATION TO 

SELECT ordhdr
SET RELATION TO 

lcStyle = SPACE(19)
SELECT STYLE

*-- Call the style browse.
lcStyle =gfStyBrw("I" , "" , "" , .F.)
*HBG 1/24/2005 Modify code to apply the new interface [Begin]  
*!*	oAriaApplication.oToolBar.owindparent = ThisFormSet
*HBG [End]

llFound = !EMPTY(lcStyle)
IF llFound
  THISFORMSET.Ariaform1.CntStyle.Value = lcStyle
ENDIF
*-- Call functions to activate relations.
This.mRelation(Thisformset)
IF llFound
  THISFORMSET.Recordchanged(6)
  *-- check for the top&bottom of the file status (Start)
  THISFORMSET.checknavigation() 
  RETURN .T.
ENDIF

RETURN .F.

ENDPROC
PROCEDURE Load
DODEFAULT()

*-- Array hold the needed setups
*N120543,1 HBG 13/11/2003 Redimension the setup array to add use style configuration setup[Begin]
*DECLARE laMainSetp[5,2]
DECLARE laMainSetp[6,2]
*N120543,1 HBG 13/11/2003 [End]
*-- Multi or single warehouse "Use multiple locations"
laMainSetp[1,1] = 'M_WAREHOUS'
*-- System is dyelot or not "Dyelots used"
laMainSetp[2,1] = 'M_DYELOT'
*-- Allow Force allocation option "Allow Force Allocation"
laMainSetp[3,1] = 'M_FORCEALO'
*-- Check Approved Amount "Check Order Approved Amnt. means Restrict allocation to order approved amount "
laMainSetp[4,1] = 'M_CHKAPROV'
*-- Get llTotAvlbl setting "Include WIP in Unallo Qty"
laMainSetp[5,1] = 'M_TOTAVLBL'
*N120543,1 HBG 13/11/2003 Add Use style configuration setup to the setup array[Begin]
*-- Get llUseConfg setting "Use Style Configuration"
laMainSetp[6,1] = 'M_STYCNFG'
*N120543,1 HBG 13/11/2003 Add [End]
*-- Call function to get the needed setups.
=gfGetMemVar(@laMainSetp , oAriaApplication.ActiveCompanyID)

*-- Assign properties to its setups.
This.llMultiWH  = ALLTRIM(laMainSetp[1,2]) = 'Y'
This.llDyelot   = ALLTRIM(laMainSetp[2,2]) = 'Y'
This.lcAlwForce = ALLTRIM(laMainSetp[3,2])
This.llChkAprov = laMainSetp[4,2]
This.llTotAvlbl = laMainSetp[5,2]
*N120543,1 HBG 13/11/2003 Get value of Use style configuration setup [Begin]
This.llUseConfg = ALLTRIM(laMainSetp[6,2]) = 'Y'
*N120543,1 HBG 13/11/2003 [End]
*-- Fill the warehouse array.
DIMENSION This.lawarehous[1,2] 
IF !This.llMultiWH
  SELECT WAREHOUS
  GO TOP
  This.lcDefWare  = WAREHOUS.cWareCode
  This.laWareHous[1,1] = WAREHOUS.cDesc
  This.laWareHous[1,2] = WAREHOUS.cWareCode
ELSE
  SELECT cDesc , cWareCode ;
    FROM WAREHOUS ;
    INTO ARRAY This.laWareHous
  This.lcDefWare = This.laWareHous[1,2]
ENDIF
ENDPROC
PROCEDURE Init
*B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[Start]
IF 'AS' $ oAriaApplication.CompanyInstalledModules          
  =gfOpenFile(oAriaApplication.DataDir+'EDIACPRT',oAriaApplication.DataDir+'ACCFACT','SH')
  =gfOpenFile(oAriaApplication.DataDir+'EDIPD',oAriaApplication.DataDir+'PARTTRANS','SH')
  =gfOpenFile(oAriaApplication.DataDir+'EDITRANS',oAriaApplication.DataDir+'TYPEKEY','SH')
ENDIF
*B608316,1 MMT 10/11/2007 Convert Enhancemnt of Thrid provider from A27[End]

*-- Add button for object linking in aria toolbar
DECLARE This.lapanelobj[1,6] 
STORE '' TO This.lapanelobj
This.laPanelObj[1,1] = 'pbObjLink'
This.laPanelObj[1,2] = oAriaApplication.BitMapHome+"Relate.bmp"
This.laPanelObj[1,3] = 'mObjLink'
This.laPanelObj[1,4] = 'Object Link'
This.laPanelObj[1,5] = 'Object Link'
This.laPanelObj[1,6] = 'V'

*N120543,1 HBG 13/11/2003 Create temp order line files to be used instead of master file[Begin]
=THISFORMSET.mcreatefile()
*N120543,1 [End]

*-- Set default value to both warehouse popups.
This.Ariaform1.cboOrdLoc.Value = This.lcDefWare 
This.Ariaform1.cboPickLoc.Value = This.lcDefWare
THISFORMSET.llPickMethd = .T.
*-- Determine the picking ticket method to work automatically
This.lnPicMethd = 1
WITH This.AriaForm1.grdOrder
  .RecordSource = THIS.lctmpordline 
  .Columns(1).ControlSource   = THIS.lctmpordline+'.Order'
  .Columns(2).ControlSource   = THIS.lctmpordline+'.Account'
  .Columns(3).ControlSource   = THIS.lctmpordline+'.Store'
  .Columns(4).ControlSource   = THIS.lctmpordline+'.cWareCode'
  .Columns(5).ControlSource   = THIS.lctmpordline+'.Dyelot'
  .Columns(6).ControlSource   = THIS.lctmpordline+'.Complete'

  *khm1
  *.Columns(7).ControlSource   = 'OrdHDr.Status'
  .Columns(7).ControlSource   = THIS.lctmpordline+'.Status'
  *khm1

  .Columns(8).ControlSource   = THIS.lctmpordline+'.totQty'
  .Columns(9).ControlSource   = THIS.lctmpordline+'.Piktkt'
  .Columns(10).ControlSource  = THIS.lctmpordline+'.Price'
  .Columns(11).ControlSource  = THIS.lctmpordline+'.TotPik'
  .Columns(12).ControlSource  = 'ThisFormSet.mGetUnAloQty()'
ENDWITH
IF !This.lldyelot 
  WITH This.AriaForm1.grdOrder
    .SetAll("Readonly" , .T. , "Column")
    *.RemoveObject(.Columns(5).Name)
    .Column5.Visible = .F.
    .Column1.Width   = 60
    .Column2.Width   = 60
    .Column3.Width   = 70
    .Column4.Width   = 70
    .Column11.Width   = 60
  ENDWITH
*N120543,1 HBG 13/11/2003 Change dyelot column caption depending on value of Use style configuration setup[Begin]
ELSE
  This.AriaForm1.grdOrder.Column5.Visible = This.llDyelot
  This.AriaForm1.grdOrder.Column5.Header1.Caption = IIF(ThisFormset.llUseConfg,LANG_AlloByStyle_Config,LANG_AlloByStyle_Dyelot)
*N120543,1 HBG 13/11/2003 [End]
ENDIF

*-- Activate the filters.
This.mFilters(ThisFormSet)

*-- Add flage to prvent user to allocate qty from this program. 
*-- This flage to detrimined if this program run into this customer.
This.llPikNow = .T.
IF ASCAN(oAriaApplication.laEvntTrig,PADR("LLPIKNOW",10)) <> 0
  This.llPikNow = .F.
ENDIF  

*-- Call function to enable/disable to call FPMAIN Once & determine the enable mode of Pick button.
This.mPickStat()

*-- Get the user privilege on FORCING sub process 
This.lForcepriv = gfUserPriv('AL','ALSTYAL','FORCING')

DODEFAULT()

ENDPROC
PROCEDURE Deactivate
*-- Release the pick method pad from the system menu.
*HBG 1/24/2005 Modify code to apply the new interface [Begin]  
*!*	RELEASE PAD _PICK OF _MSYSMENU
RELEASE PAD _PICK OF (THISFORMSET.chostformname)
*HBG [End]
DODEFAULT()

ENDPROC
PROCEDURE changemode
lParameters lcModeToChange

DODEFAULT(lcModeToChange)

DO CASE
  *-- Select Mode.
  CASE THIS.activemode= 'S'
    *-- Restore initial values for calculations.
    WITH This.ariaform1
      .txtTotAlo.Value = 0
      .txtTotAval.Value = 0
      .txtTotOrd.Value = 0
      .txtTotStk.Value = 0
      .txtTotUnAlo.Value = 0
      .txtTotWip.Value = 0
      *-- Set default values for warehouse codes.
      .cboOrdLoc.Value = This.lcDefWare 
      .cboPickLoc.Value = This.lcDefWare
      .cboOrdLoc.OldValue  = .cboOrdLoc.Value
      .cboPickLoc.OldValue = .cboPickLoc.value 
      *-- Set focus on the main style field.
      .CntStyle.Enabled = .T.
    ENDWITH
    *-- Disable the object linking button.
    *HBG 1/24/2005 Modify code to apply the new interface [Begin]  
    *!*	    oariaapplication.otoolbar.changebuttonstatus('pbObjLink','DISABLE')
    THISFORMSEt.otoolbar.changebuttonstatus('pbObjLink','DISABLE')
    *HBG [End]
    
  *-- View Mode.
  CASE THIS.activemode= 'V'
    *-- Call function to refresh the needed data & controls.
    This.mNavigate ()
    
    *-- Enable the locations popups.
    This.ariaform1.cboOrdLoc.Enabled  = IIF(This.llMultiwh , .T. , .F.)
    This.ariaform1.cboPickLoc.Enabled = IIF(This.llmultiwh , .T. , .F.)
    
    *-- Enable the O.T.S button
    This.ariaform1.cmdOTS.Enabled = .T.
     
    *-- Call the grid change record because it has all the needed navigation
    *N120543,1 HBG 13/11/2003 Send parameter to identify that the Row information is changed[Begin]
    *This.mafterrowcolchange()
    This.mafterrowcolchange(.T.)
    *N120543,1 [End]
ENDCASE

*-- Make the pick menu disable if select mode
*HBG 1/24/2005 Modify code to apply the new interface [Begin]  
*!*	SET SKIP OF PAD _PICK OF _MSYSMENU (_screen.ActiveForm.Parent.activemode ='S')
SET SKIP OF PAD _PICK OF (THISFORMSET.chostformname) (_screen.ActiveForm.Parent.activemode ='S')
*HBG [End]

ENDPROC
PROCEDURE Destroy
*-- Clear filters.
SELECT OrdHdr
SET FILTER TO 

SELECT (THISFORMSET.lcTmpOrdline)
SET FILTER TO 

*-- Clear Relations.
SELECT STYLE
SET RELATION TO 

SELECT (THISFORMSET.lcTmpOrdline)
SET RELATION TO 

SELECT OrdHdr
SET RELATION TO 

*-- Release the pick pad upon closing the form
*HBG 1/24/2005 Modify code to apply the new interface [Begin]  
*!*	RELEASE PAD _PICK OF _MSYSMENU
RELEASE PAD _PICK OF (THISFORMSET.chostformname)
*HBG [End]
DODEFAULT()


ENDPROC
PROCEDURE recordchanged
LPARAMETERS tnSourceAction

DODEFAULT(tnSourceAction)

*-- Call method to change the needed records upon navigation
Thisformset.mNavigate ()

*-- Refresh the files to refresh the grid
SELECT WareHous
SET KEY TO
SET KEY TO This.ariaform1.cboOrdLOc.Value
=SEEK(This.ariaform1.cboOrdLOc.Value)
SELECT ordhdr
LOCATE
*N120543,1 HBG 13/11/2003 Collect Orders for the selected Style[Begin]
*!*	SELECT ORDLINE
*!*	SET KEY TO 
*!*	SET KEY TO This.ariaform1.cntStyle.value  
*!*	LOCATE
THISFORMSET.mcollorders()
*N120543,1 [End]


SELECT (THISFORMSET.lcTmpOrdline)
GO Top

Thisformset.ariaform1.grdOrder.Refresh
*-- Call the grid change record because it has all the needed navigation
*N120543,1 HBG 13/11/2003 Send parameter to identify that the Row information is changed[Begin]
*This.mafterrowcolchange()
This.mafterrowcolchange(.T.)
*N120543,1 [End]

ENDPROC
